<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "file://zonbook/docbookx.dtd"
[
   <!ENTITY % phrases SYSTEM "file://AWSShared/common/phrases.ent">
   %phrases;
   <!ENTITY % sig2-migration SYSTEM "file://AWSShared/asp/eu-xml/fps-sig2-migration.ent">
   %sig2-migration;
   <!ENTITY % phrases-products SYSTEM "file://AWSShared/common/aws-prod-names-and-links.ent">
   %phrases-products;
   <!ENTITY % phrases-shared SYSTEM "file://AWSShared/common/phrases-shared.ent">
   %phrases-shared;   
   <!ENTITY % xinclude SYSTEM "file://AWSShared/common/xinclude.mod">
   %xinclude;
]>
<section id="UsingReturnURLValidationSample" role="topic">
   <title id="UsingReturnURLValidationSample.title"
      >Understanding the IPNAndReturnURLValidation Sample</title>
   <para>DEPRECATED, USE UsingReturnURLAndIPNValidationSamples.xml.   Amazon provides samples in five programming languages which show you how to verify the signatures in both the return url and in IPN notifications. In this section, we will briefly go over the Java code with the sample provided with the standard button only. The other samples differ only in the programming language used for rendering them. For specific comprehensive information on a particular sample, see its <code>IPNAndReturnURLValidation/README.html</code> file. </para>
   <para>When you download a sample file, such as <emphasis role="bold"
         >ASPStandard-JAVA-2.0</emphasis>, it contains three separate samples. This section describes the sample contained in the <code>IPNAndReturnURLValidation</code> folder, which is used for client-side signature verification using <glossterm>PKI</glossterm>.</para>
   <para>Each IPNAndReturnURLValidation sample contains three primary components in the <code>ASPStandard-JAVA-2.0/IPNAndReturnURLValidation/src</code> folder. These are:</para>
   <informaltable>
      <?dbhtml table-width="100%" ?>
      <?dbfo table-width="95%" ?>
      <tgroup cols="2">
         <colspec colname="col1" colnum="1"/>
         <colspec colname="col2" colnum="2"/>
         <thead>
            <row>
               <entry>
                  <para>Class</para>
               </entry>
               <entry>
                  <para>Description</para>
               </entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>
                  <para><parameter>ReturnUrlVerificationSampleCode.java</parameter></para>
               </entry>
               <entry>
                  <para>This class contains the program entry point for verifying the signature contained in a return url, and thereby validating the return url content. It sets up initial parameter values for a standard button return url response, and then calls the static method <code>SignatureUtilsForOutbound.validateRequest</code> with those values.</para>
               </entry>
            </row>
            <row>
               <entry><parameter>IPNVerificationSampleCode.java</parameter></entry>
               <entry>This class contains the program entry point for verifying the signature contained in an IPN notification. It sets up initial parameter values for a standard button return IPN notification, and then calls the static method <code>SignatureUtilsForOutbound.validateRequest</code> with those values. </entry>
            </row>
            <row>
               <entry><parameter>SignatureUtilsForOutbound.java</parameter></entry>
               <entry>Invoked from <code>ReturnUrlVerificationSampleCode.java</code> and <code>IPNVerificationSampleCode.java</code>, this class uses the signature version 2 process to validate the signature contained in the <parameter>certificateUrl</parameter> parameter using <glossterm>PKI</glossterm>. It contains methods to reassemble the string to sign, url encode the string, and sign it using the Amazon certificate listed as the signer. Finally, it validates the signature and prints the result to standard out.</entry>
            </row>
         </tbody>
      </tgroup>
   </informaltable>
   <para>In addition to these primary components, a sample may include other required resources. For example, the Java samples all include the <code>lib/commons-codec-1.3.jar</code> file, which must be in your classpath in order to compile the sample.</para>
   <para>To use the sample, do the following</para>
   <table frame="all">
      <title>Using the Standard Button IPNAndReturnURLValidation Sample for PKI-based Validation</title>
      <tgroup cols="2">
         <?dbhtml table-width="100%" ?>
         <?dbfo table-width="95%" ?>
         <colspec colname="c1" colnum="1" colwidth="0.55*"/>
         <colspec colname="c2" colnum="2" colwidth="8.45*"/>
         <tbody>
            <row>
               <entry>1</entry>
               <entry>
                  <para>Set up your programming environment so that the program compiles without warnings or errors. For the Java sample, this includes ensuring that the <code>ASPStandard-JAVA-2.0/IPNAndReturnURLValidation/src</code> folder and the <code>lib/commons-codec-1.3.jar</code> file are available to the compiler, either by including them as a command line option, or, if you build using an IDE, by including them as project resources.</para>
               </entry>
            </row>
            <row>
               <entry>2</entry>
               <entry>
                  <para>The <code>ReturnUrlVerificationSampleCode</code> and <code>IPNVerificationSampleCode</code> classes use a <code>HashMap</code> to store parameters which correspond to the fields returned during a return url response or an IPN notification. Modify these values to suit the response you want to validate. These are the only values you need to change using this sample.</para>
               </entry>
            </row>
            <row>
               <entry>4</entry>
               <entry><para>Compile the sample. For example, if you are including the <code>lib/commons-codec/jars/commons-codec-1.3.jar</code> as using the linux command line, you would type </para><code>$javac -cp .:lib/commons-codec-1.3.jar ReturnUrlVerificationSampleCode.java SignatureUtilsForOutbound.java</code><para>On Windows, you would type</para><code>$javac -cp .;lib/commons-codec-1.3.jar  ReturnUrlVerificationSampleCode.java SignatureUtilsForOutbound.java</code></entry>
            </row>
            <row>
               <entry>5</entry>
               <entry><para>Run the sample. Continuing the previous example, on linux, you would type </para><code>$javac -cp .:lib/commons-codec-1.3.jar ReturnUrlVerificationSampleCode</code><para>On Windows, you would type</para><code>$javac -cp .;lib/commons-codec-1.3.jar ReturnUrlVerificationSampleCode</code>
                  <para>The result "Is signature correct: true" is printed to standard out if the verification determines the signature to be valid.</para></entry>
            </row>
         </tbody>
      </tgroup>
   </table>
</section>
