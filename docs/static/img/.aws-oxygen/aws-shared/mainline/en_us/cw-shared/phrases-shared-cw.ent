<!--  Note: CloudWatch Events and Logs metrics are located near the end of this file -->

<!ENTITY monitoring_CW '
<para><guilabel>&CWlong; Alarms</guilabel> &endash; Watch a single metric over a time period 
that you specify, and perform one or more actions based on the value of the metric relative 
to a given threshold over a number of time periods. The action is a notification sent to an 
&SNSlong; (&SNS;) topic or &ASlong; policy. &CW; alarms do not invoke actions simply because 
they are in a particular state; the state must have changed and been maintained for a specified 
number of periods. For more information, see <xref linkend="monitoring-cloudwatch" endterm="monitoring-cloudwatch.title"/>.</para>
'>

<!ENTITY monitoring_CWL '
<para><guilabel>&CWLlong;</guilabel> &endash; Monitor, store, and access your log files from &CTlong; 
or other sources. For more information, see <ulink url="&url-cw-dev;WhatIsCloudWatchLogs.html">Monitoring Log Files</ulink>
in the <emphasis>&guide-cw-dev;</emphasis>.</para>
'>

<!ENTITY monitoring_CWE '
<para><guilabel>&CWElong;</guilabel> &endash; Match events and route them to one
 or more target functions or streams to make changes, capture state
information, and take corrective action. For more information, see <ulink
url="&url-cw-dev;WhatIsCloudWatchEvents.html">What Is Amazon CloudWatch Events</ulink> in
the <emphasis>&guide-cw-dev;</emphasis>.</para>
'>

<!ENTITY monitoring_CT '
<para><guilabel>&CTlong; Log Monitoring</guilabel> &endash; Share log files
between accounts, monitor &CT; log files in real time by sending them to
&CWL;, write log processing applications in Java, and validate that your log
files have not changed after delivery by &CT;. For more information, see
<ulink url="&url-ct-user;cloudtrail-working-with-log-files.html">Working with
&CT; Log Files</ulink> in the <emphasis>&guide-ct-user;</emphasis>. 
<remark>(Optional) Add a second cross-reference to your service CloudTrail topic.</remark></para>
'>


<!-- CloudWatch Metrics and Dimensions cl-->

<!ENTITY cloudwatch_viewing_apigateway '
<section id="api-gateway-metrics-dimensions" role="topic" revision="release">
	<title id="api-gateway-metrics-dimensions.title">&ABPlong; Dimensions and Metrics</title>
	
	<para>The metrics and dimensions that &ABP; sends to &CWlong; are listed below. For more
		information, see <ulink url="&url-abp-dev;monitoring-cloudwatch.html">Monitor API Execution
			with &CWlong;</ulink> in the <emphasis>&ABPlong; Developer
			Guide</emphasis>.</para>
	
	<section id="api-gateway-metrics">
		<title id="api-gateway-metrics.title">&ABP; Metrics</title>
		<para>&ABPlong; sends metrics under the <guilabel>AWS/ApiGateway</guilabel> namespace to &CW; once
			every minute.</para>
		<para>The following metrics are available from the &ABP; service.</para>
		<informaltable>
			<tgroup cols="2">
				<colspec colname="c1" colnum="1" colwidth="2*"/>
				<colspec colname="c2" colnum="2" colwidth="2.5*"/>
				<thead>
					<row>
						<entry>Metric</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<para>4XXError</para></entry>
						<entry>
							<para>The number of client-side errors captured</para>
							<para>Unit: count</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>5XXError</para>
						</entry>
						<entry>
							<para>The number of server-side errors captured.</para>
							<para>Unit: count</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>CacheHitCount</para>
						</entry>
						<entry>
							<para>The number of requests served from the API cache.</para>
							<para>Unit: count</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>CacheMissCount</para>
						</entry>
						<entry>
							<para>The number of requests served from the back end when API caching is enabled.</para>
							<para>Unit: count</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>Count</para>
						</entry>
						<entry>
							<para>The number of calls to API methods.</para>
							<para>Unit: count</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>IntegrationLatency</para>
						</entry>
						<entry>
							<para>The time between when &ABP; relays a request to the back end and when it receives a response from the back end.</para>
							<para>Unit: millisecond</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>Latency</para>
						</entry>
						<entry>
							<para>The time between when &ABP; receives a request from a client and when it returns a response to the client.</para>
							<para>Unit: millisecond</para>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
	</section>
	
	<section id="api-gateway-metricdimensions">
		<title id="api-gateway-metricdimensions.title">Dimensions for  Metrics</title>
		
		<para>You can use the dimensions in the following table to filter &ABP; metrics.</para>
		
		<informaltable>
			<tgroup cols="2">
				<colspec colname="c1" colnum="1" colwidth="2*"/>
				<colspec colname="c2" colnum="2" colwidth="2.5*"/>
				<thead>
					<row>
						<entry>Dimension</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<para>ApiName</para>
						</entry>
						<entry>
							<para>Filters &ABP; metrics for an API of the specified API name.</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>ApiName, Method, Resource, Stage</para>
						</entry>
						<entry>
							<para>Filters &ABP; metrics for an API method of the specified API,
								stage, resource, and method.</para>
							<para>&ABP; will not send such metrics unless you have explicitly
								enabled detailed &CW; metrics. You can do this in the console by
								selecting <guilabel>Enable CloudWatch Metrics</guilabel> under a
								stage <guilabel>Settings</guilabel> tab. Alternatively, you can call
								the <ulink
									url="&url-doc-domain;apigateway/api-reference/link-relation/stage-update/"
									>stage:update</ulink> action of the &ABP; REST API to update the
									<code>metricsEnabled</code> property to <code>true</code>. </para>
							<para>Enabling such metrics will incur additional charges to your
								account. For pricing information, see <ulink
									url="&url-mkt-domain;cloudwatch/pricing/">&CWlong;
									Pricing</ulink>.</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>ApiName, Stage</para>
						</entry>
						<entry>
							<para>Filters &ABP; metrics for an API stage of the specified API and stage.</para>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
	</section>
</section>
'>

<!ENTITY cloudwatch_viewing_billing '
<section id="billing-metricscollected" role="topic" revision="release">
        <title id="billing-metricscollected.title">AWS Billing Dimensions and Metrics</title>
        <section id="billing-metrics">
          <title id="billing-metrics.title">AWS Billing Metrics</title>
        <informaltable>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
              <row>
                <entry>Metric</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para><code>EstimatedCharges</code></para></entry>
                <entry>
                  <para>The estimated charges for your AWS usage. This can either be estimated
                    charges for one service or a roll-up of estimated charges for all
                    services.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section id="billing-metricdimensions" xreflabel="AWS Billing Dimensions and Metrics">
        <title id="billing-metricdimensions.title">Dimensions for AWS Billing Metrics</title>

        <para>AWS Billing sends the ServiceName and LinkedAccount dimensions to &CW;.</para>

        <informaltable>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
              <row>
                <entry>Dimension</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para><code>ServiceName</code></para></entry>
                <entry>
                  <para>The name of the AWS service. This dimension is omitted for the total of
                    estimated charges across all services.</para>
                </entry>
              </row>

              <row>
                <entry><para><code>LinkedAccount</code></para></entry>
                <entry>
                   <para>The linked account number. This is used for consolidated billing only. This 
                   dimension is included only for accounts that are linked to a separate paying account 
                   in a consolidated billing relationship. It is not included for accounts that are not 
                   linked to a consolidated billing paying account.</para>
                </entry>
              </row>

              <row>
                <entry><para><code>Currency</code></para></entry>
                <entry>
                  <para>The monetary currency to bill the account. This dimension is
                    required.</para>
                  <para>Unit: USD</para>
                </entry>
              </row>

            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
'>

<!ENTITY cloudwatch_viewing_cloudfront '
<section id="cloudfront-metrics-dimensions" role="topic" revision="release">
	<title id="cloudfront-metrics-dimensions.title">&CFlong; Dimensions and Metrics</title>
	   <para>The metrics and dimensions that &CF; sends to &CW; for web distributions are listed below. 
	   (Metrics and dimensions are not available for RTMP distributions.) For more information about how 
	   to monitor &CF;, see <ulink url="&url-cf-dev;monitoring-using-cloudwatch.html">Monitoring &CF; 
	   Activity Using &CW;</ulink> in the <emphasis>&guide-cf-dev;</emphasis>.</para>
	
		<note>
    		<para>Metrics for &CF; are available only in the &region-us-east-1; region. When you request 
    		metrics for &CF;, you also need to specify a <code>Region</code> dimension; the value of this 
    		dimension must always be <code>Global</code>.</para>
		</note>	
	
	<section id="cloudfront-metrics">
		<title id="cloudfront-metrics.title">&CFlong; Metrics</title>
		
		<note>
            <para>Only one statistic, Average or Sum, is applicable for each metric. However, all 
    		statistics are available through the console, API, and &CLIlong;. In the following table, each
    		metric specifies the statistic that is applicable to that metric.</para>
		</note>
		
		<informaltable>
			<tgroup cols="2">
				<colspec colname="c1" colnum="1" colwidth="2*"/>
				<colspec colname="c2" colnum="2" colwidth="2.5*"/>
				<thead>
					<row>
						<entry>Metric</entry>
						<entry>Description</entry>
				  </row>
				</thead>
				<tbody>
					<row>
						<entry>
						  <para><code>Requests</code></para></entry>
						<entry>
						  <para>The number of requests for all HTTP methods and for both HTTP and 
						  HTTPS requests.</para>
						  <para>Valid Statistic: Sum</para>
						  <para>Units: Count</para>
						</entry>
					</row>
					<row>
						<entry>
						      <para><code>BytesDownloaded</code></para></entry>
						<entry>
						     <para>The number of bytes downloaded by viewers for <code>GET</code>, 
					         <code>HEAD</code>, and <code>OPTIONS</code> requests.</para>
						     <para>Valid Statistic: Sum</para>
							 <para>Units: Bytes</para>
						</entry>
					</row>
					<row>
						<entry><para><code>BytesUploaded</code></para></entry>
						<entry><para>The number of bytes uploaded to your origin with &CF; using <code>POST</code> and <code>PUT</code> requests.</para>
							<para>Valid Statistic: Sum</para>
							<para>Units: Bytes</para>
						</entry>
					</row>
					<row>
						<entry><para><code>TotalErrorRate</code></para></entry>
						<entry><para>The percentage of all requests for which the HTTP status code is <code>4xx</code> or <code>5xx</code>.</para>
							<para>Valid Statistic: Average</para>
							<para>Units: Percent</para>
						</entry>
					</row>
					<row>
						<entry><para><code>4xxErrorRate</code></para></entry>
						<entry><para>The percentage of all requests for which the HTTP status code is <code>4xx</code>.</para>
							<para>Valid Statistic: Average</para>
							<para>Units: Percent</para>
						</entry>
					</row>
					<row>
						<entry><para><code>5xxErrorRate</code></para></entry>
						<entry><para>The percentage of all requests for which the HTTP status code is <code>5xx</code>.</para>
							<para>Valid Statistic: Average</para>
							<para>Units: Percent</para>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
	</section>

	<section id="cloudfront-metricdimensions">
		<title id="cloudfront-metricdimensions.title">Dimensions for &CF; Metrics</title>

		<para>&CF; metrics use the &CF; namespace and provide metrics for two dimensions:</para>

		<informaltable>
			<tgroup cols="2">
				<colspec colname="c1" colnum="1" colwidth="2*"/>
				<colspec colname="c2" colnum="2" colwidth="2.5*"/>
				<thead>
				  <row>
						<entry>Dimension</entry>
						<entry>Description</entry>
				  </row>
				</thead>
				<tbody>
					<row>
						<entry><para><code>DistributionId</code></para></entry>
						<entry><para>The &CF; ID of the distribution for which you want to display metrics.</para></entry>
				  </row>
					<row>
						<entry><para><code>Region</code></para></entry>
						<entry><para>The region for which you want to display metrics. This value must be <code>Global</code>.
							The <code>Region</code> dimension is different from the region in which &CF; metrics are stored, which is 
							&region-us-east-1;.</para>
						</entry>
				  </row>
				</tbody>
			</tgroup>
		</informaltable>
	</section>
</section>
'>

<!ENTITY cloudwatch_viewing_dynamodb '
<section id="DynamoDB-groupings">
            <title id="DynamoDB-groupings.title">&DDB; Viewing Options</title>
            <para>The metric options in the <guilabel>Viewing</guilabel> list serve as a filter for
                refining your results. The options differentiate metrics at the account level versus
                metrics at table level or operation level. </para>
            <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Viewing Option</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>All Metrics</code></entry>
                            <entry>Account level metrics for all of your services.</entry>
                        </row>
                        <row>
                            <entry><code>AWS/DynamoDB</code></entry>
                            <entry>Account level metrics for all of your &DDB; tables, such as
                                    <code>UserErrors</code>.</entry>
                        </row>
                        <row>
                            <entry><code>AWS/DynamoDB, TableName</code></entry>
                            <entry>Table level metrics, such as
                                    <code>ConsumedReadCapacityUnits</code> over a specified period
                                of time.</entry>
                        </row>
                        <row>
                            <entry><code>AWS/DynamoDB, TableName, Operation</code></entry>
                            <entry>
                                <para>Metrics for a specified operation on the specified table, such
                                    as the <code>SuccessfulRequestLatency</code> for Scan operations
                                    over a specified period of time on a single table.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>AWS/DynamoDB, Operation</code></entry>
                            <entry>Metrics for API calls across tables, such as
                                    <code>ThrottledRequests</code> for all BatchGetItem operations
                                across several tables over a specified period of time. <note>
                                    <simpara>A single BatchGetItem request on a single table does
                                        not show in these results. Use <code>AWS/DynamoDB,
                                            TableName, Operation</code> for a single operation on a
                                        single table.</simpara>
                                </note></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>
'>

<!ENTITY cloudwatch_metrics_dynamodb '
    <section id="dynamodb-metrics">
        <title id="dynamodb-metrics.title">&DDB; Metrics</title>
        <para>The following metrics are available from &DDBlong;. Note that &DDB; only sends metrics
            to &CW; when they have a non-zero value. For example, the <code>UserErrors</code> metric
            is incremented whenever a request generates an HTTP 400 status code. If no HTTP 400
            errors were encountered during a time period, &CW; will not provide metrics for
                <code>UserErrors</code> during that period.</para>
        <note>
            <!--these changed from 5 min to 1 min, effective Aug. 2015 -->
            <para>&CWlong; aggregates the following &DDB; metrics at one-minute intervals:</para>
            <itemizedlist>
                <listitem>
                    <para><code>ConditionalCheckFailedRequests</code></para>
                </listitem>
                <listitem>
                    <para><code>ConsumedReadCapacityUnits</code></para>
                </listitem>
                <listitem>
                    <para><code>ConsumedWriteCapacityUnits</code></para>
                </listitem>
                <listitem>
                    <para><code>ReadThrottleEvents</code></para>
                </listitem>
                <listitem>
                    <para><code>ReturnedBytes</code></para>
                </listitem>
                <listitem>
                    <para><code>ReturnedItemCount</code></para>
                </listitem>
                <listitem>
                    <para><code>ReturnedRecordsCount</code></para>
                </listitem>
                <listitem>
                    <para><code>SuccessfulRequestLatency</code></para>
                </listitem>
                <listitem>
                    <para><code>SystemErrors</code></para>
                </listitem>
                <listitem>
                    <para><code>ThrottledRequests</code></para>
                </listitem>
                <listitem>
                    <para><code>UserErrors</code></para>
                </listitem>
                <listitem>
                    <para><code>WriteThrottleEvents</code></para>
                </listitem>
            </itemizedlist>
            <para>For all other &DDB; metrics, the aggregation granularity is five minutes.</para>
        </note>
        <para>Not all statistics, such as <emphasis>Average</emphasis> or <emphasis>Sum</emphasis>, are applicable for every metric. However, all of these values are available through the &DDBlong; console, or by using the &CW; console, &CLI;, or AWS SDKs for all metrics. In the following table, each metric has a list of Valid Statistics that is applicable to that metric.</para>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="1.91*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>ConditionalCheckFailedRequests</code></entry>
                        <entry>
                            <para>The number of failed attempts to perform conditional writes. The
                                <function>PutItem</function>, <function>UpdateItem</function>,
                                and <function>DeleteItem</function> operations let you provide a
                                logical condition that must evaluate to true before the operation
                                can proceed. If this condition evaluates to false, 
                                <code>ConditionalCheckFailedRequests</code> is incremented by
                                one.</para>
                            <note>
                                <para>A failed conditional write will result in an HTTP 400 error
                                    (Bad Request). These events are reflected in the
                                    <code>ConditionalCheckFailedRequests</code> metric, but not
                                    in the <code>UserErrors</code> metric.</para>
                            </note>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ConsumedReadCapacityUnits</code></entry>
                        <entry>
                            <para>The number of read capacity units consumed over the specified time
                                period, so you can track how much of your provisioned throughput is
                                used. You can retrieve the total consumed read capacity for a table
                                and all of its local secondary indexes, or for a particular global
                                secondary index. For more information, see <ulink
                                    url="&url-ddb-dev;ProvisionedThroughputIntro.html"
                                    >Provisioned Throughput in Amazon DynamoDB</ulink>.</para>
                            <note>
                                <para>Use the <code>Sum</code> statistic to calculate the consumed
                                    throughput. For example, get the <code>Sum</code> value over a
                                    span of one minute, and divide it by the number of seconds in a
                                    minute (60) to calculate the average
                                    <code>ConsumedReadCapacityUnits</code> per second
                                    (recognizing that this average will not highlight any large but
                                    brief spikes in read activity that occurred during that minute).
                                    You can compare the calculated value to the provisioned
                                    throughput value you provide &DDB;.</para>
                            </note>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code> &ndash; Minimum number of read
                                        capacity units consumed by any individual request to the
                                        table or index.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code> &ndash; Maximum number of read
                                        capacity units consumed by any individual request to the
                                        table or index.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code> &ndash; Average per-request read
                                        capacity consumed.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code> &ndash; Total read capacity units
                                        consumed. This is the most useful statistic for the
                                        <code>ConsumedReadCapacityUnits</code> metric.</para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code> &ndash; Number of requests to
                                        &DDB; that consumed read capacity.</para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ConsumedWriteCapacityUnits</code></entry>
                        <entry>
                            <para>The number of write capacity units consumed over the specified
                                time period, so you can track how much of your provisioned
                                throughput is used. You can retrieve the total consumed write
                                capacity for a table and all of its global secondary indexes, or for
                                a particular global secondary index. For more information, see
                                <ulink
                                    url="&url-ddb-dev;ProvisionedThroughputIntro.html"
                                    >Provisioned Throughput in Amazon DynamoDB</ulink>.</para>
                            <note>
                                <para>Use the <code>Sum</code> statistic to calculate the consumed
                                    throughput. For example, get the <code>Sum</code> value over a
                                    span of one minute, and divide it by the number of seconds in a
                                    minute (60) to calculate the average
                                    <code>ConsumedWriteCapacityUnits</code> per second
                                    (recognizing that this average will not highlight any large but
                                    brief spikes in write activity that occurred during that
                                    minute). You can compare the calculated value to the provisioned
                                    throughput value you provide &DDB;.</para>
                            </note>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics: </para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code> &ndash; Minimum number of write
                                        capacity units consumed by any individual request to the
                                        table or index.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code> &ndash; Maximum number of write
                                        capacity units consumed by any individual request to the
                                        table or index.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code> &ndash; Average per-request write
                                        capacity consumed.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code> &ndash; Total write capacity units
                                        consumed. This is the most useful statistic for the
                                        <code>ConsumedWriteCapacityUnits</code> metric.</para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code> &ndash; Number of requests to
                                        &DDB; that consumed write capacity.</para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>OnlineIndexConsumedWriteCapacity</code></entry>
                        <entry>
                            <para>The number of write capacity units consumed when adding a new
                                global secondary index to a table. If the write capacity of the
                                index is too low, incoming write activity during the backfill
                                phase might be throttled; this can increase the time it takes to
                                create the index. You should monitor this statistic while the index
                                is being built to determine whether the write capacity of the index
                                is underprovisioned.</para>
                            <para>You can adjust the write capacity of the index using the
                                    <function>UpdateTable</function> operation, even while the index
                                is still being built.</para>
                            <para>Note that the <code>ConsumedWriteCapacityUnits</code> metric for
                                the index does not include the write throughput consumed during
                                index creation. </para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>OnlineIndexPercentageProgress</code></entry>
                        <entry>
                            <para>The percentage of completion when a new global secondary index is
                                being added to a table. &DDB; must first allocate resources for the
                                new index, and then backfill attributes from the table into the
                                index. For large tables, this process might take a long time. You
                                should monitor this statistic to view the relative progress as &DDB;
                                builds the index.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>OnlineIndexThrottleEvents</code></entry>
                        <entry>
                            <para>The number of write throttle events that occur when adding a new
                                global secondary index to a table. These events indicate that the
                                index creation will take longer to complete, because incoming write
                                activity is exceeding the provisioned write throughput of the
                                index.</para>
                            <para>You can adjust the write capacity of the index using the
                                    <function>UpdateTable</function> operation, even while the index
                                is still being built.</para>
                            <para>Note that the <code>WriteThrotttleEvents</code> metric for the
                                index does not include any throttle events that occur during index
                                creation. </para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ProvisionedReadCapacityUnits</code></entry>
                        <entry><para>The number of provisioned read capacity units for a table or a
                            global secondary index.</para>The <code>TableName</code> dimension
                            returns the <code>ProvisionedReadCapacityUnits</code> for the table, but
                            not for any global secondary indexes. To view
                            <code>ProvisionedReadCapacityUnits</code> for a global secondary
                            index, you must specify both <code>TableName</code> and
                            <code>GlobalSecondaryIndex</code>.<para>Units:
                                <code>Count</code></para><para>Dimensions: <code>TableName,
                                    GlobalSecondaryIndexName</code></para><para>Valid
                                        Statistics:</para><itemizedlist>
                                            <listitem>
                                                <para><code>Minimum</code> &ndash; Lowest setting for
                                                    provisioned read capacity. If you use
                                                    <function>UpdateTable</function> to increase read
                                                    capacity, this metric shows the lowest value of provisioned
                                                    <parameter>ReadCapacityUnits</parameter> during this
                                                    time period.</para>
                                            </listitem>
                                            <listitem>
                                                <para><code>Maximum</code> &ndash; Highest setting for
                                                    provisioned read capacity. If you use
                                                    <function>UpdateTable</function> to decrease read
                                                    capacity, this metric shows the highest value of provisioned
                                                    <parameter>ReadCapacityUnits</parameter> during this
                                                    time period.</para>
                                            </listitem>
                                            <listitem>
                                                <para><code>Average</code> &ndash; Average provisioned read
                                                    capacity. The <code>ProvisionedReadCapacityUnits</code>
                                                    metric is published at five-minute intervals. Therefore, if you
                                                    rapidly adjust the provisioned read capacity units, this
                                                    statistic might not reflect the true average.</para>
                                            </listitem>
                                        </itemizedlist></entry>
                    </row>
                    <row>
                        <entry><code>ProvisionedWriteCapacityUnits</code></entry>
                        <entry>
                            <para>The number of provisioned write capacity units for a table or a
                                global secondary index</para>
                            <para>The <code>TableName</code> dimension returns the
                                <code>ProvisionedWriteCapacityUnits</code> for the table, but
                                not for any global secondary indexes. To view
                                <code>ProvisionedWriteCapacityUnits</code> for a global
                                secondary index, you must specify both <code>TableName</code> and
                                <code>GlobalSecondaryIndex</code>.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code> &ndash; Lowest setting for
                                        provisioned write capacity. If you use
                                        <function>UpdateTable</function> to increase write
                                        capacity, this metric shows the lowest value of provisioned
                                        <parameter>WriteCapacityUnits</parameter> during this
                                        time period.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code> &ndash; Highest setting for
                                        provisioned write capacity. If you use
                                        <function>UpdateTable</function> to decrease write
                                        capacity, this metric shows the highest value of provisioned
                                        <parameter>WriteCapacityUnits</parameter> during this
                                        time period.</para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code> &ndash; Average provisioned write
                                        capacity. The <code>ProvisionedWriteCapacityUnits</code>
                                        metric is published at five-minute intervals. Therefore, if you
                                        rapidly adjust the provisioned write capacity units, this
                                        statistic might not reflect the true average.</para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReadThrottleEvents</code></entry>
                        <entry>
                            <para>Requests to &DDB; that exceed the provisioned read capacity units
                                for a table or a global secondary index.</para>
                            <para>A single request can result in multiple events. For example, a
                                <function>BatchGetItem</function> that reads 10 items is
                                processed as ten <function>GetItem</function> events. For each
                                event, <code>ReadThrottleEvents</code> is incremented by one if that
                                event is throttled. The <code>ThrottledRequests</code> metric for
                                the entire <function>BatchGetItem</function> is not incremented
                                unless <emphasis>all ten</emphasis> of the
                                <function>GetItem</function> events are throttled.</para>
                            <para>The <code>TableName</code> dimension returns the
                                <code>ReadThrottleEvents</code> for the table, but not for any
                                global secondary indexes. To view <code>ReadThrottleEvents</code>
                                for a global secondary index, you must specify both
                                <code>TableName</code> and <code>GlobalSecondaryIndex</code>. </para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReturnedBytes</code></entry>
                        <entry>
                            <para>The number of bytes returned by <code>GetRecords</code> operations
                                (&DSlong;) during the specified time period.</para>
                            <para>Units: <code>Bytes</code></para>
                            <para>Dimensions: <code>Operation, StreamLabel, TableName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReturnedItemCount</code></entry>
                        <entry>
                            <para>The number of items returned by <code>Query</code> or
                                    <code>Scan</code> operations during the specified time
                                period.</para>
                            <para>Note that the number of items <emphasis>returned</emphasis> is not
                                necessarily the same as the number of items that were evaluated. For
                                example, suppose you requested a <code>Scan</code> on a table that
                                had 100 items, but specified a
                                <parameter>FilterExpression</parameter> that narrowed the
                                results so that only 15 items were returned. In this case, the
                                response from <code>Scan</code> would contain a
                                <code>ScanCount</code> of 100 and a <code>Count</code> of 15
                                returned items.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReturnedRecordsCount</code></entry>
                        <entry>
                            <para>The number of stream records returned by <code>GetRecords</code>
                                operations (&DSlong;) during the specified time period.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>Operation, StreamLabel, TableName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>SuccessfulRequestLatency</code></entry>
                        <entry>
                            <para>Successful requests to &DDB; or &DSlong; during the specified
                                time period. <code>SuccessfulRequestLatency</code> can provide two
                                different kinds of information:</para>
                            <itemizedlist>
                                <listitem>
                                    <para>The elapsed time for successful requests
                                        (<code>Minimum</code>, <code>Maximum</code>,
                                        <code>Sum</code>, or <code>Average</code>).</para>
                                </listitem>
                                <listitem>
                                    <para>The number of successful requests
                                        (<code>SampleCount</code>).</para>
                                </listitem>
                            </itemizedlist>
                            <para><code>SuccessfulRequestLatency</code> reflects activity only
                                within &DDB; or &DSlong;, and does not take into account
                                network latency or client-side activity. </para>
                            <para>Units: <code>Milliseconds</code>
                            </para>
                            <para>Dimensions: <code>TableName, Operation</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Minimum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Maximum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Average</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>SystemErrors</code></entry>
                        <entry>
                            
                            <para>Requests to &DDB; or &DSlong; that generate an HTTP 500
                                status code during the specified time period. An HTTP 500 usually
                                indicates an internal service error.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: All dimensions</para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ThrottledRequests</code></entry>
                        <entry>
                            <para>Requests to &DDB; that exceed the provisioned throughput limits on
                                a resource (such as a table or an index).</para>
                            <para><code>ThrottledRequests</code> is incremented by one if any event
                                within a request exceeds a provisioned throughput limit. For
                                example, if you update an item in a table with global secondary
                                indexes, there are multiple events&mdash;a write to the table, and a
                                write to each index. If one or more of these events are throttled,
                                then <code>ThrottledRequests</code> is incremented by one.</para>
                            <note>
                                <para>In a batch request (<code>BatchGetItem</code> or
                                    <code>BatchWriteItem</code>), <code>ThrottledRequests</code>
                                    is only incremented if <emphasis>every</emphasis> request in the
                                    batch is throttled.</para>
                                <para>If any individual request within the batch is throttled, 
                                    one of the following metrics is incremented:</para>
                                <itemizedlist>
                                    <listitem>
                                        <para><code>ReadThrottleEvents</code> &ndash; For a throttled
                                            <code>GetItem</code> event within
                                            <code>BatchGetItem</code>.</para>
                                    </listitem>
                                    <listitem>
                                        <para><code>WriteThrottleEvents</code> &ndash; For a throttled
                                            <code>PutItem</code> or <code>DeleteItem</code>
                                            event within <code>BatchWriteItem</code>.</para>
                                    </listitem>
                                </itemizedlist>
                            </note>
                            <para>To gain insight into which event is throttling a request, compare
                                <code>ThrottledRequests</code> with the
                                <code>ReadThrottleEvents</code> and
                                <code>WriteThrottleEvents</code> for the table and its
                                indexes.</para>
                            <note>
                                <para>A throttled request will result in an HTTP 400 status code.
                                    All such events are reflected in the
                                    <code>ThrottledRequests</code> metric, but not in the
                                    <code>UserErrors</code> metric.</para>
                            </note>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName, Operation</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>UserErrors</code></entry>
                        <entry>
                            
                            <para>Requests to &DDB; or &DSlong; that generate an HTTP 400
                                status code during the specified time period. An HTTP 400 usually
                                indicates a client-side error such as an invalid combination of
                                parameters, attempting to update a nonexistent table, or an
                                incorrect request signature.</para>
                            <para>All such events are reflected in the <code>UserErrors</code>
                                metric, except for the following:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>ProvisionedThroughputExceededException</emphasis>
                                        &ndash; See the <code>ThrottledRequests</code> metric in
                                        this section.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>ConditionalCheckFailedException</emphasis>
                                        &ndash; See the <code>ConditionalCheckFailedRequests</code>
                                        metric in this section.</para>
                                </listitem>
                            </itemizedlist>
                            <para><code>UserErrors</code> represents the aggregate of HTTP 400
                                errors for &DDB; or &DSlong; requests for the current region
                                and the current AWS account.</para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: All dimensions</para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry><code>WriteThrottleEvents</code></entry>
                        <entry>
                            <para>Requests to &DDB; that exceed the provisioned write capacity units
                                for a table or a global secondary index.</para>
                            <para>A single request can result in multiple events. For example, a
                                <function>PutItem</function> request on a table with three
                                global secondary indexes would result in four events&mdash;the
                                table write, and each of the three index writes. For each event, the
                                <code>WriteThrottleEvents</code> metric is incremented by one if
                                that event is throttled. For single <function>PutItem</function>
                                requests, if any of the events are throttled,
                                <code>ThrottledRequests</code> is also incremented by one. For
                                <function>BatchWriteItem</function>, the
                                <code>ThrottledRequests</code> metric for the entire
                                <function>BatchWriteItem</function> is not incremented unless
                                all of the individual <function>PutItem</function> or
                                <code>DeleteItem</code> events are throttled.</para>
                            <para>The <code>TableName</code> dimension returns the
                                <code>WriteThrottleEvents</code> for the table, but not for any
                                global secondary indexes. To view <code>WriteThrottleEvents</code>
                                for a global secondary index, you must specify both
                                <code>TableName</code> and <code>GlobalSecondaryIndex</code>. </para>
                            <para>Units: <code>Count</code></para>
                            <para>Dimensions: <code>TableName,
                                GlobalSecondaryIndexName</code></para>
                            <para>Valid Statistics:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>Sum</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>SampleCount</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>
'>

<!ENTITY cloudwatch_metrics_dimensions_dynamodb '
    <section id="dynamodb-metric-dimensions">
        <title id="dynamodb-metric-dimensions.title">Dimensions for &DDB; Metrics</title>
        <para>The metrics for &DDB; are qualified by the values for the account, table name, global secondary index name, or
            operation. You can use the &CW; console to retrieve &DDB; data
            along any of the dimensions in the table below.</para>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>GlobalSecondaryIndexName</code>
                        </entry>
                        <entry>
                            <para>This dimension limits the data to a global secondary index on a
                                table. If you specify <code>GlobalSecondaryIndexName</code>, you
                                must also specify <code>TableName</code>.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>Operation</code>
                        </entry>
                        <entry>
                            <para>This dimension limits the data to one of the following &DDB;
                                operations:</para>
                            <itemizedlist>
                                <listitem>
                                    <para><code>PutItem</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>DeleteItem</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>UpdateItem</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>GetItem</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>BatchGetItem</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Scan</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>Query</code></para>
                                </listitem>
                                <listitem>
                                    <para><code>BatchWriteItem</code></para>
                                </listitem>
                            </itemizedlist>
                            <para>In addition, you can limit the data to the following &DSlong; operation:</para>
                                <itemizedlist>
                                <listitem>
                                    <para><code>GetRecords</code></para>
                                </listitem>
                            </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>StreamLabel</code>
                        </entry>
                        <entry>
                            <para>This dimension limits the data to a specific stream label.  It is
                                used with metrics originating from &DSlong; 
                                    <code>GetRecords</code> operations.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>TableName</code>
                        </entry>
                        <entry>
                            <para>This dimension limits the data to a specific table. This value can
                                be any table name in the current region and the current AWS
                                account.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>
'>

<!ENTITY cloudwatch_metrics_dimensions_ecs '
    <section id="ecs-metrics">
            <title id="ecs-metrics.title">&ECS; Metrics</title>
            <para>&ECS; provides metrics for you to monitor the CPU and memory reservation and
                utilization across your cluster as a whole, and the CPU and memory utilization on
                the services in your clusters.</para>
            <informaltable frame="all">
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <para><code>CPUReservation</code></para>
                            </entry>
                            <entry>
                                <para>The percentage of CPU units that are reserved by running tasks
                                    in the cluster.</para>
                                <para>Cluster CPU reservation (this metric can only be filtered by
                                        <literal>ClusterName</literal>) is measured as the total CPU
                                    units that are reserved by &ECS; tasks on the cluster, divided
                                    by the total CPU units that were registered for all of the
                                    container instances in the cluster.</para>
                                <para>Units: Percent</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para><code>MemoryReservation</code></para>
                            </entry>
                            <entry>
                                <para>The percentage of memory that is reserved by running tasks in
                                    the cluster. </para>
                                <para>Cluster memory reservation (this metric can only be filtered
                                    by <literal>ClusterName</literal>) is measured as the total
                                    memory that is reserved by &ECS; tasks on the cluster, divided
                                    by the total amount of memory that was registered for all of the
                                    container instances in the cluster.</para>
                                <para>Units: Percent</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para><code>CPUUtilization</code></para>
                            </entry>
                            <entry>
                                <para>The percentage of CPU units that are used in the cluster
                                    or service.</para>
                                <para>Cluster CPU utilization (metrics that are filtered by
                                    <literal>ClusterName</literal> without
                                    <literal>ServiceName</literal>) is measured as the total CPU
                                    units in use by &ECS; tasks on the cluster, divided by the total
                                    CPU units that were registered for all of the container
                                    instances in the cluster.</para>
                                <para>Service CPU utilization (metrics that are filtered by
                                    <literal>ClusterName</literal> and
                                    <literal>ServiceName</literal>) is measured as the total CPU
                                    units in use by the tasks that belong to the service, divided by
                                    the total number of CPU units that are reserved for the tasks
                                    that belong to the service.</para>
                                <para>Units: Percent</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para><code>MemoryUtilization</code></para>
                            </entry>
                            <entry>
                                <para>The percentage of memory that is used in the cluster or
                                    service. </para>
                                <para>Cluster memory utilization (metrics that are filtered by
                                    <literal>ClusterName</literal> without
                                    <literal>ServiceName</literal>) is measured as the total
                                    memory in use by &ECS; tasks on the cluster, divided by the
                                    total amount of memory that was registered for all of the
                                    container instances in the cluster.</para>
                                <para>Service memory utilization (metrics that are filtered by
                                    <literal>ClusterName</literal> and
                                    <literal>ServiceName</literal>) is measured as the total
                                    memory in use by the tasks that belong to the service, divided
                                    by the total memory that is reserved for the tasks that belong
                                    to the service.</para>
                                <para>Units: Percent</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>
        <section id="ecs-metric-dimensions">
            <title id="ecs-metric-dimensions.title">Dimensions for &ECS; Metrics</title>
            <para>You can use the dimensions in the following table to refine the metrics returned
                for your &ECS; resources. </para>
            <informaltable frame="all">
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Dimension</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <para><code>ClusterName</code></para>
                            </entry>
                            <entry>
                                <para>This dimension filters the data you request for all resources
                                    in a specified cluster. All &ECS; metrics are filtered by
                                    <literal>ClusterName</literal>.</para>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <para><code>ServiceName</code></para>
                            </entry>
                            <entry>
                                <para>This dimension filters the data you request for all resources
                                    in a specified service within a specified cluster.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>'>

<!ENTITY cloudwatch_metrics_dimensions_elasticache '
        <section id="CacheMetrics.DimensionsAndSets" role="topic">
            <title id="CacheMetrics.DimensionsAndSets.title">Dimensions for &ELC; Metrics</title>
            <para> All &ELC; metrics use the <code>AWS/ElastiCache</code> namespace and provide
                metrics for a single dimension, the <code>CacheNodeId</code>, which is the
                automatically-generated identifier for each cache node in the cache cluster. You can
                find out what these values are for your cache nodes by using the
                <code>DescribeCacheClusters</code> API or <command>describe-cache-clusters
                </command>command line utility. For more information, see 
                <ulink url="&url-elc-api;API_DescribeCacheClusters.html">DescribeCacheClusters
                </ulink> in the <emphasis>&guide-elc-api;</emphasis> and <ulink url="&url-cli-ref;elasticache/describe-cache-clusters.html">
                describe-cache-clusters</ulink> in the <emphasis>&guide-cli-ref;</emphasis>.</para>
            <para>Each metric is published under a single set of dimensions. When retrieving
                metrics, you must supply both the <code>CacheClusterId</code> and <code>CacheNodeId</code> dimensions. </para>

            <para><phrase role="topcom">Topics</phrase></para>
           <itemizedlist>
              <listitem><para><link linkend="CacheMetrics.HostLevel" endterm="CacheMetrics.HostLevel.title"/></para></listitem>
              <listitem><para><link linkend="CacheMetrics.Memcached" endterm="CacheMetrics.Memcached.title"/></para></listitem>
              <listitem><para><link linkend="CacheMetrics.Redis" endterm="CacheMetrics.Redis.title"/></para></listitem>
              <listitem><para><ulink url="&url-elc-user;CacheMetrics.WhichShouldIMonitor.html">Which Metrics Should I Monitor?</ulink></para></listitem>
           </itemizedlist>

        </section>
'>

    <!ENTITY cloudwatch_metrics_elasticache_host_level '
    <section id="CacheMetrics.HostLevel" role="topic">
        <title id="CacheMetrics.HostLevel.title">Host-Level Metrics</title>

        <para>The following table lists host-level metrics provided by &ELC; for individual cache
            nodes.</para>

            <para><phrase role="topcom">See Also</phrase></para>
           <itemizedlist>
              <listitem><para><link linkend="CacheMetrics.Memcached" endterm="CacheMetrics.Memcached.title"/></para></listitem>
              <listitem><para><link linkend="CacheMetrics.Redis" endterm="CacheMetrics.Redis.title"/></para></listitem>
           </itemizedlist>

        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                        <entry>Unit</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>CPUUtilization</code></entry>
                        <entry> The percentage of CPU utilization. </entry>
                        <entry> Percent </entry>
                    </row>
                    <row>
                        <entry><code>FreeableMemory</code> </entry>
                        <entry> The amount of free memory available on the host. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>NetworkBytesIn</code></entry>
                        <entry> The number of bytes the host has read from the network. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>NetworkBytesOut</code></entry>
                        <entry> The number of bytes the host has written to the network. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>SwapUsage</code></entry>
                        <entry> The amount of swap used on the host. </entry>
                        <entry> Bytes </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
    '>

    <!ENTITY cloudwatch_metrics_elasticache_memcached '
    <section id="CacheMetrics.Memcached" role="topic">
        <title id="CacheMetrics.Memcached.title">Metrics for Memcached</title>

        <para>The following table lists the metrics provided by &ELC; that are derived from the
            Memcached <command>stats</command> command. Each metric is calculated at the cache
            node level. </para>

        <para>For complete documentation of the Memcached <command>stats</command> command, go
                to <ulink url="https://github.com/memcached/memcached/blob/master/doc/protocol.txt">
                    https://github.com/memcached/memcached/blob/master/doc/protocol.txt</ulink>.
            </para>

        <para><phrase role="topcom">See Also</phrase></para>
           <itemizedlist>
              <listitem><para><link linkend="CacheMetrics.HostLevel" endterm="CacheMetrics.HostLevel.title"/></para></listitem>
        </itemizedlist>

        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric </entry>
                        <entry>Description </entry>
                        <entry>Unit </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>BytesReadIntoMemcached</code></entry>
                        <entry> The number of bytes that have been read from the network by the
                            cache node. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>BytesUsedForCacheItems</code> </entry>
                        <entry> The number of bytes used to store cache items. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>BytesWrittenOutFromMemcached</code> </entry>
                        <entry> The number of bytes that have been written to the network by the
                            cache node. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>CasBadval</code></entry>
                        <entry> The number of CAS (check and set) requests the cache has received
                            where the Cas value did not match the Cas value stored. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CasHits</code></entry>
                        <entry> The number of Cas requests the cache has received where the
                            requested key was found and the Cas value matched. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CasMisses</code></entry>
                        <entry> The number of Cas requests the cache has received where the key
                            requested was not found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CmdFlush</code></entry>
                        <entry> The number of <command>flush</command> commands the cache has received. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CmdGet</code></entry>
                        <entry> The number of <command>get</command> commands the cache has received. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CmdSet</code></entry>
                        <entry> The number of <command>set</command> commands the cache has received. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CurrConnections</code></entry>
                        <entry> A count of the number of connections connected to the cache at an
                            instant in time. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CurrItems</code></entry>
                        <entry> A count of the number of items currently stored in the cache. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>DecrHits</code></entry>
                        <entry> The number of decrement requests the cache has received where the
                            requested key was found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>DecrMisses</code></entry>
                        <entry> The number of decrement requests the cache has received where the
                            requested key was not found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>DeleteHits</code></entry>
                        <entry> The number of delete requests the cache has received where the
                            requested key was found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>DeleteMisses</code></entry>
                        <entry> The number of delete requests the cache has received where the
                            requested key was not found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>Evictions</code></entry>
                        <entry> The number of non-expired items the cache evicted to allow space for
                            new writes. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>GetHits</code></entry>
                        <entry> The number of get requests the cache has received where the key
                            requested was found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>GetMisses</code></entry>
                        <entry> The number of get requests the cache has received where the key
                            requested was not found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>IncrHits</code></entry>
                        <entry> The number of increment requests the cache has received where the
                            key requested was found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>IncrMisses</code></entry>
                        <entry> The number of increment requests the cache has received where the
                            key requested was not found. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>Reclaimed</code></entry>
                        <entry> The number of expired items the cache evicted to allow space for new
                            writes. </entry>
                        <entry> Count </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <para>For Memcached 1.4.14, the following additional metrics are provided.</para>
        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                        <entry>Unit</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>BytesUsedForHash</code></entry>
                        <entry> The number of bytes currently used by hash tables. </entry>
                        <entry> Bytes </entry>
                    </row>
                    <row>
                        <entry><code>CmdConfigGet</code></entry>
                        <entry> The cumulative number of <command>config get</command> requests. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CmdConfigSet</code></entry>
                        <entry> The cumulative number of <command>config set</command> requests. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CmdTouch</code></entry>
                        <entry> The cumulative number of <command>touch</command> requests. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>CurrConfig</code></entry>
                        <entry> The current number of configurations stored. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>EvictedUnfetched</code></entry>
                        <entry> The number of valid items evicted from the least recently used cache
                            (LRU) which were never touched after being set. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>ExpiredUnfetched</code></entry>
                        <entry> The number of expired items reclaimed from the LRU which were never
                            touched after being set. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>SlabsMoved</code></entry>
                        <entry> The total number of slab pages that have been moved. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>TouchHits</code></entry>
                        <entry> The number of keys that have been touched and were given a new
                            expiration time. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>TouchMisses</code></entry>
                        <entry> The number of items that have been touched, but were not found. </entry>
                        <entry> Count </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <para>The following table describes the available calculated cache-level metrics.</para>
        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                        <entry>Unit</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>NewConnections</code></entry>
                        <entry> The number of new connections the cache has received. This is
                            derived from the memcached <code>total_connections</code> statistic by recording the
                            change in <code>total_connections</code> across a period of time. This will always be
                            at least 1, due to a connection reserved for a &ELC;. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>NewItems</code></entry>
                        <entry> The number of new items the cache has stored. This is derived from
                            the memcached <code>total_items</code> statistic by recording the change in
                            <code>total_items</code> across a period of time. </entry>
                        <entry> Count </entry>
                    </row>
                    <row>
                        <entry><code>UnusedMemory</code></entry>
                        <entry><para>The amount of memory not used by data.
                         This is derived from the Memcached statistics
                         <code>limit_maxbytes</code> and <code>bytes</code>
                         by subtracting <code>bytes</code> from
                         <code>limit_maxbytes</code>.</para>
                         <para>Because Memcached overhead uses memory in addition
                         to that used by data, <code>UnusedMemory</code> should
                         not be considered to be the amount of memory available
                         for additional data. You may experience evictions even
                         though you still have some unused memory.</para>
                         <para>For more detailed information, see <ulink 
        url="http://www.deplication.net/2016/02/memcached-item-memory-usage.html"
        >Memcached item memory usage</ulink>.</para>
                        </entry>
                        <entry> Bytes </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

    </section>
        '>

    <!ENTITY cloudwatch_metrics_elasticache_redis '
    <section id="CacheMetrics.Redis" role="topic">
        <title id="CacheMetrics.Redis.title">Metrics for Redis</title>
        <para>The following table lists the metrics provided by &ELC;. With the exception of
                <code>ReplicationLag</code>, these metrics are derived from the Redis
                <command>info</command> command. Each metric is calculated at the cache node
            level. </para>

            <para>For complete documentation of the Redis <command>info</command> command, go to
                    <ulink url="http://redis.io/commands/info">
                    http://redis.io/commands/info</ulink>. </para>


        <para><phrase role="topcom">See Also</phrase></para>
           <itemizedlist>
              <listitem><para><link linkend="CacheMetrics.HostLevel" endterm="CacheMetrics.HostLevel.title"/></para></listitem>
        </itemizedlist>

        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric </entry>
                        <entry>Description </entry>
                        <entry>Unit </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>BytesUsedForCache</code></entry>
                        <entry>The total number of bytes allocated by Redis.</entry>
                        <entry>Bytes</entry>
                    </row>
                    <row>
                        <entry><code>CacheHits</code></entry>
                        <entry>The number of successful key lookups.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>CacheMisses</code></entry>
                        <entry>The number of unsuccessful key lookups.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>CurrConnections</code></entry>
                        <entry>The number of client connections, excluding connections from read
                            replicas.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>Evictions</code></entry>
                        <entry>The number of keys that have been evicted due to the
                                <code>maxmemory</code> limit.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>HyperLogLogBasedCmds</code></entry>
                        <entry>The total number of <code>HyperLogLog</code> based commands. 
                        This is derived from the Redis <code>commandstats</code> statistic 
                        by summing all of the <command>pf</command> type of commands 
                        (<command>pfadd</command>, <command>pfcount</command>, 
                        <command>pfmerge</command>).<!-- This metric is available in Redis 
                        version 2.8.19 and above. --></entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>NewConnections</code></entry>
                        <entry>The total number of connections that have been accepted by the server
                            during this period.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>Reclaimed</code></entry>
                        <entry>The total number of key expiration events.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>ReplicationBytes</code></entry>
                        <entry>For primaries with attached replicas, <code>ReplicationBytes</code> 
                        reports the number of bytes that the primary is sending to all of its replicas. 
                        This metric is representative of the write load on the replication group. For 
                        replicas and standalone primaries, <code>ReplicationBytes</code> is always 0. 
                        
                        <!-- <para>This metric is supported on all Redis 2.8 versions.</para> --></entry>
                        <entry>Bytes</entry>
                    </row>  
                    <row>
                        <entry><code>ReplicationLag</code></entry>
                        <entry>This metric is only applicable for a cache node running as a read
                            replica. It represents how far behind, in seconds, the replica is in
                            applying changes from the primary cache cluster.</entry>
                        <entry>Seconds</entry>
                    </row>
                    <row>
                        <entry><code>SaveInProgress</code></entry>
                        <entry>This binary metric returns 1 whenever a background save 
                        (forked or forkless) is in progress, and 0 otherwise. A background 
                        save process is typically used during snapshots and syncs. These 
                        operations can cause degraded performance. Using the <code>
                        SaveInProgress</code> metric, you can diagnose whether or not 
                        degraded performance was caused by a background save process.</entry>
                        <entry>Count</entry>
                    </row>
               </tbody>
            </tgroup>
        </table>


        <para>These are aggregations of certain kinds of commands, derived from <command>info
                commandstats</command>:</para>
        <table>
            <tgroup cols="3">
                <colspec colnum="1" colname="col1" colwidth="2*"/>
                <colspec colnum="2" colname="col2" colwidth="3*"/>
                <colspec colnum="3" colname="col3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric </entry>
                        <entry>Description </entry>
                        <entry>Unit </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>CurrItems</code></entry>
                        <entry>The number of items in the cache. This is derived from the Redis
                            <code>keyspace</code> statistic, summing all of the keys in the entire
                            keyspace.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>GetTypeCmds</code></entry>
                        <entry>The total number of <command>get</command> types of commands. This
                            is derived from the Redis <code>commandstats</code> statistic by summing all of the
                                <command>get</command> types of commands
                            (<command>get</command>, <command>mget</command>,
                                <command>hget</command>, etc.)</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>HashBasedCmds</code></entry>
                        <entry>The total number of commands that are hash-based. This is derived
                            from the Redis <code>commandstats</code> statistic by summing all of the commands
                            that act upon one or more hashes.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>KeyBasedCmds</code></entry>
                        <entry>The total number of commands that are key-based. This is derived from
                            the Redis <code>commandstats</code> statistic by summing all of the commands that act
                            upon one or more keys.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>ListBasedCmds</code></entry>
                        <entry>The total number of commands that are list-based. This is derived
                            from the Redis <code>commandstats</code> statistic by summing all of the commands
                            that act upon one or more lists.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>SetBasedCmds</code></entry>
                        <entry>The total number of commands that are set-based. This is derived from
                            the Redis <code>commandstats</code> statistic by summing all of the commands that act
                            upon one or more sets.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>SetTypeCmds</code></entry>
                        <entry>The total number of <command>set</command> types of commands. This
                            is derived from the Redis <code>commandstats</code> statistic by summing all of the
                                <command>set</command> types of commands
                            (<command>set</command>, <command>hset</command>, etc.)</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>SortedSetBasedCmds</code></entry>
                        <entry>The total number of commands that are sorted set-based. This is
                            derived from the Redis <code>commandstats</code> statistic by summing all of the
                            commands that act upon one or more sorted sets.</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>StringBasedCmds</code></entry>
                        <entry>The total number of commands that are string-based. This is derived
                            from the Redis <code>commandstats</code> statistic by summing all of the commands
                            that act upon one or more strings.</entry>
                        <entry>Count</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

    </section>
'>


<!ENTITY cloudwatch_metrics_es '
<section id="elasticsearch-metrics">
    <title id="elasticsearch-metrics.title">&ESlong; Metrics</title>
    <para>&ESbrief; sends the following metrics to &CWlong;. </para>
    <informaltable frame="all">
    <tgroup cols="2">
        <colspec colname="c1" colnum="1" colwidth="1*"/>
        <colspec colname="c2" colnum="2" colwidth="3*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row>
                     <entry><guilabel>ClusterStatus.green</guilabel></entry>
                     <entry>Indicates whether all index shards are allocated to nodes in the cluster.<para>Relevant statistics: Minimum,Maximum</para></entry>
                 </row>
                 <row>
                      <entry><guilabel>ClusterStatus.yellow</guilabel></entry>
                      <entry>Indicates whether replica shards are not allocated to nodes in a cluster. Note that single node clusters always initialize with this cluster status because
                      there is no second node to which a replica can be assigned. You can either increase your
                      node count to obtain a green cluster status, or you can use the
                      &ESbrief; API to set the <code>number_of_replicas</code> setting for
                      your index to <code>0</code>. For more information, see <ulink url="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/indices-update-settings.html">
                      Update Indices Settings</ulink> in the &ESbrief; documentation.<para>Relevant statistics: Minimum, Maximum</para></entry>
                  </row>
                  <row>
                       <entry><guilabel>ClusterStatus.red</guilabel></entry>
                       <entry>Indicates whether both primary and replica shards of at least one index are not allocated to nodes in a cluster. See 
                       <ulink url="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-handling-errors.html#aes-handling-errors-red-cluster-status">Red Cluster Status</ulink> in
                       Handling AWS Service Errors for recovery instructions.<para>Relevant statistics: Minimum, Maximum</para></entry>
                   </row>
                   <row>
                         <entry><guilabel>Nodes</guilabel></entry>
                         <entry>Specifies the number of nodes in the &ESbrief; cluster. <para>Relevant Statistics: Minimum, Maximum, Average</para></entry>
                   </row>
                   <row>
                         <entry><guilabel>SearchableDocuments</guilabel></entry>
                         <entry>Specifies the total number of searchable documents across all indices in the cluster.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                   </row>
                   <row>
                          <entry><guilabel>DeletedDocuments</guilabel></entry>
                          <entry>Specifies the total number of deleted documents across all indices in the cluster.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                    </row>
                    <row>
                          <entry><guilabel>CPUUtilization</guilabel></entry>
                          <entry>Specifies the maximum percentage of CPU resources used for data nodes in the cluster.<para>Relevant statistics: Maximum, Average</para></entry>
                    </row>
                    <row>
                          <entry><guilabel>FreeStorageSpace</guilabel></entry>
                          <entry>Specifies the free space, in megabytes, for all data nodes in the cluster.<para>Relevant statistics: Minimum</para></entry>
                    </row>
                    <row>
                          <entry><guilabel>ClusterUsedSpace</guilabel></entry>
                          <entry>Specifies the total used space, in megabytes, for a cluster.
                                    You can view this metric in the Amazon Cloudwatch console, but
                                    not in the Amazon ES console.<para>Relevant statistics: Minimum,
                                        Maximum</para></entry>
                    </row>
                    <row>
                          <entry><guilabel>JVMMemoryPressure</guilabel></entry>
                          <entry>Specifies the maximum percentage of the Java heap used for all data nodes in the cluster.<para>Relevant statistics:
                                        Maximum</para></entry>
                    </row>
                    <row>
                          <entry><guilabel>AutomatedSnapshotFailure</guilabel></entry>
                          <entry>Specifies the number of failed automated snapshots for the cluster. A value of <code>1</code> indicates that no automated snapshot was taken for the domain in the previous 36 hours.<para>Relevant statistics: Minimum, Maximum</para></entry>
                     </row>
                     <row>
                           <entry><guilabel>MasterCPUUtilization</guilabel></entry>
                           <entry>Specifies the maximum percentage of CPU resources used by the dedicated master nodes. We recommend increasing the size of the instance type when this metric reaches 60 percent.<para>Relevant statistics: Average</para></entry>
                     </row>
                     <row>
                           <entry><guilabel>MasterFreeStorageSpace</guilabel></entry>
                           <entry>This metric is not relevant and can be ignored. The service does not use master nodes as data nodes.</entry>
                     </row>
                     <row>
                           <entry><guilabel>MasterJVMMemoryPressure</guilabel></entry>
                           <entry>Specifies the maximum percentage of the Java heap used for all dedicated master nodes in the cluster. We recommend moving to a larger instance type
                           when this metric reaches 85 percent.<para>Relevant statistics: Maximum</para></entry>
                      </row>
                      <row>
                           <entry><guilabel>ReadLatency</guilabel></entry>
                           <entry>Specifies the latency, in seconds, for read operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                           <entry><guilabel>WriteLatency</guilabel></entry>
                           <entry>Specifies the latency, in seconds, for write operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                           <entry><guilabel>ReadThroughput</guilabel></entry>
                           <entry>Specifies the throughput, in bytes per second, for read operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                          <entry><guilabel>WriteThroughput</guilabel></entry>
                          <entry>Specifies the throughput, in bytes per second, for write operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                          <entry><guilabel>DiskQueueLength</guilabel></entry>
                          <entry>Specifies the number of pending input and output (I/O) requests for an EBS volume.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                          <entry><guilabel>ReadIOPS</guilabel></entry>
                          <entry>Specifies the number of input and output (I/O) operations per second for read operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
                      <row>
                          <entry><guilabel>WriteIOPS</guilabel></entry>
                          <entry>Specifies the number of input and output (I/O) operations per second for write operations on EBS volumes.<para>Relevant statistics: Minimum, Maximum, Average</para></entry>
                      </row>
             </tbody>
    </tgroup>
    </informaltable>
</section>
'>

<!ENTITY cloudwatch_metrics_dimensions_es '
<section id="elasticsearch-metric-dimensions">
    <title id="elasticsearch-metric-dimensions.title">Dimensions for &ESlong; Metrics</title>
    <para>&ESlong; sends the ClientId and DomainName dimensions to &CW;.</para>
       <informaltable>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
              <row>
                <entry>Dimension</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para><code>ClientId</code></para></entry>
                <entry>
                  <para>The AWS account ID.</para>
                </entry>
              </row>
              <row>
                <entry><para><code>DomainName</code></para></entry>
                <entry>
                   <para>The name of the search domain.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
</section>    
'>

<!ENTITY cloudwatch_metrics_lambda '
<section id="lambda-cloudwatch-metrics">
    <sectioninfo>
        <abstract>
            <para>List of &LAMlong; metrics for &CWlong;.</para>
        </abstract>
    </sectioninfo>
    <title id="lambda-cloudwatch-metrics.title">&LAMlong; &CW; Metrics</title>
    <titleabbrev>&CW; Metrics</titleabbrev>
    <para>The &LAMlong; namespace for &CW; is <emphasis role="bold">AWS/&LAM;</emphasis>.</para>
    
    <para>The following metrics are available from the &LAMlong; service. </para>
    <informaltable frame="all">
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1*"/>
            <colspec colname="c2" colnum="2" colwidth="3*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <code>Invocations</code></entry>
                    <entry>
                        <para>Measures the number of times a function is invoked in
                            response to an event or invocation API call. This replaces the
                            deprecated RequestCount metric. This includes successful and
                            failed invocations, but does not include throttled attempts.
                            This equals the billed requests for the function. Note that
                            &LAMlong; only sends these metrics to &CW; if they have a
                            nonzero value.</para>
                        <para>Units: Count</para>
                    </entry>
                </row>
                <row>
                    <entry><code>Errors</code></entry>
                    <entry>
                        <para>Measures the number of invocations that failed due to
                            errors in the function (response code 4XX). This replaces the
                            deprecated ErrorCount metric. Failed invocations may trigger a
                            retry attempt that succeeds. This includes: <itemizedlist>
                                <listitem>
                                    <para>Handled exceptions (e.g., context.fail(error)) </para>
                                </listitem>
                                <listitem>
                                    <para>Unhandled exceptions causing the code to
                                        exit</para>
                                </listitem>
                                <listitem>
                                    <para>Out of memory exceptions</para>
                                </listitem>
                                <listitem>
                                    <para>Timeouts</para>
                                </listitem>
                                <listitem>
                                    <para>Permissions errors</para>
                                </listitem>
                            </itemizedlist>This does <emphasis role="bold">not</emphasis>
                            include invocations that fail due to invocation rates exceeding
                            default concurrent limits (error code 429) or failures due to
                            internal service errors (error code 500). </para>
                        <para>Units: Count</para>
                    </entry>
                </row>
                <row>
                    <entry><code>Duration</code></entry>
                    <entry>
                        <para>Measures the elapsed wall clock time from when the function
                            code starts executing as a result of an invocation to when it
                            stops executing. This replaces the deprecated Latency metric.
                            The maximum data point value possible is the function timeout
                            configuration. The billed duration will be rounded up to the
                            nearest 100 millisecond. Note that &LAMlong; only sends these
                            metrics to &CW; if they have a nonzero value.</para>
                        <para>Units: Milliseconds</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <code>Throttles </code></entry>
                    <entry>
                        <para>Measures the number of &LAM; function invocation attempts
                            that were throttled due to invocation rates exceeding the
                            customer’s concurrent limits (error code 429). Failed
                            invocations may trigger a retry attempt that succeeds. </para>
                        <para>Units: Count</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <code>IteratorAge</code></entry>
                    <entry>
                        <para>Emitted for stream-based invocations only (functions triggered 
                        by an &DDBlong; stream or &AK; stream). 
                        Measures the age of the last record for each batch of records processed. 
                        Age is the difference between the time &LAM; received the batch, 
                        and the time the last record in the batch was written to the stream.</para>
                        <para>Units: Milliseconds</para>
                    </entry>
                </row>            
            </tbody>
        </tgroup>
    </informaltable>

                <note>
                    <title>Errors/Invocations Ratio</title>
                        <para>When calculating the error rate on &LAM; function invocations, 
                        it’s important to distinguish between an invocation request and an actual invocation. 
                        It is possible for the error rate to exceed the number of billed &LAM; function invocations. 
                        &LAM; reports an invocation metric only if the &LAM; function code is executed. If the 
                        invocation request yields a throttling or other initialization error that prevents the &LAM; 
                        function code from being invoked, &LAM; will report an error, but it does not log an invocation metric.</para>
                        <itemizedlist>
                                <listitem>
                                    <para>&LAM; emits <code>Invocations=1</code> when the function is executed. If the &LAM; function is 
                                    not executed, nothing is emitted.</para>
                                </listitem>
                                <listitem>
                                    <para>&LAM; emits a data point for <code>Errors</code> for each invoke request. 
                                    <code>Errors=0</code> means that there is no function execution error. <code>Errors=1</code> means that there is a function execution error.</para>
                                </listitem>
                                <listitem>
                                    <para>&LAM; emits a data point for <code>Throttles</code> for each invoke request. 
                                    <code>Throttles=0</code> means there is no invocation throttle. <code>Throttles=1</code> means there is an invocation throttle.</para>
                                </listitem>
                            </itemizedlist>
                    </note>

</section>
'>

<!ENTITY cloudwatch_dimensions_lambda '
<section id="lambda-cloudwatch-dimensions">
    <sectioninfo>
        <abstract>
            <para>List of &LAMlong; dimensions for &CWlong;.</para>
        </abstract>
    </sectioninfo>
    <title id="lambda-cloudwatch-dimensions.title">&LAMlong; &CW; Dimensions</title>
    <titleabbrev>&CW; Dimensions</titleabbrev>
    <para>You can use the dimensions in the following table to refine the metrics returned
        for your &LAM; functions. </para>
    <informaltable frame="all">
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1*"/>
            <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Dimension</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>FunctionName</code></entry>
                            <entry>
                                <para>Filters the data you request for a &LAM; function.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>Resource</code></entry>
                            <entry>
                                <para>Filters the data you request for a &LAM; function resource.</para>
                            </entry>
                        </row>
                    </tbody>
        </tgroup>
    </informaltable>
</section>
'>

<!ENTITY cloudwatch_viewing_opsworks '
<section id="opsworks-metrics">
    <title id="opsworks-metrics.title">&OPS; Metrics</title>
    <para>&OPS; sends the following metrics to &CW; every five minutes.</para>
    <informaltable>
        <tgroup cols="2" title="CPU metrics">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <!-- Copy this row as needed -->
                <row>
                    <entry>
                        <para><code>cpu_idle</code></para></entry>
                    <entry>
                        <para>The percentage of time that the CPU is idle.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>cpu_nice</code></para></entry>
                    <entry>
                        <para>The percentage of time that the CPU is handling processes with a positive <code>nice</code> value, which have a lower scheduling priority. For more information about what this measures, see <ulink url="https://en.wikipedia.org/wiki/Nice_&#40;Unix&#41;">nice(Unix)</ulink>.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>cpu_steal</code></para></entry>
                    <entry>
                        <para>As AWS allocates hypervisor CPU resources among increasing numbers of instances, virtualization load rises, 
                            and can affect how often the hypervisor can perform requested work on an instance. <code>cpu_steal</code> measures the percentage 
                            of time that an instance is waiting for the hypervisor to allocate physical CPU resources.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>cpu_system</code></para></entry>
                    <entry>
                        <para>The percentage of time that the CPU is handling system operations.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>cpu_user</code></para></entry>
                    <entry>
                        <para>The percentage of time that the CPU is handling user operations.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>cpu_waitio</code></para></entry>
                    <entry>
                        <para>The percentage of time that the CPU is waiting for input/output operations.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Percent</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <informaltable>
        <tgroup cols="2" title="Memory metrics">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <!-- Copy this row as needed -->
                <row>
                    <entry>
                        <para><code>memory_buffers</code></para></entry>
                    <entry>
                        <para>The amount of buffered memory.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>memory_cached</code></para></entry>
                    <entry>
                        <para>The amount of cached memory.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>memory_free</code></para></entry>
                    <entry>
                        <para>The amount of free memory.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>memory_swap</code></para></entry>
                    <entry>
                        <para>The amount of swap space.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>memory_total</code></para></entry>
                    <entry>
                        <para>The total amount of memory.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>memory_used</code></para></entry>
                    <entry>
                        <para>The amount of memory in use.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Kilobytes</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <informaltable>
        <tgroup cols="2" title="Load metrics">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <!-- Copy this row as needed -->
                <row>
                    <entry>
                        <para><code>load_1</code></para></entry>
                    <entry>
                        <para>The load averaged over a one-minute window.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Unix load units></para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>load_5</code></para></entry>
                    <entry>
                        <para>The load averaged over a five-minute window.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Unix load units></para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>load_15</code></para></entry>
                    <entry>
                        <para>The load averaged over a 15-minute window.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Unix load units></para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <informaltable>
        <tgroup cols="2" title="Process metrics">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <!-- Copy this row as needed -->
                <row>
                    <entry>
                        <para><code>procs</code></para></entry>
                    <entry>
                        <para>The number of active processes.</para>
                        <para>Valid Dimensions: The IDs of the individual resources for which you are viewing metrics:  StackId, LayerId, or InstanceId.</para>
                        <para>Valid Statistics: <code>Average</code>, <code>Minimum</code>, <code>Maximum</code>, <code>Sum</code>, or <code>Data Samples</code>.</para>
                        <para>Unit: Count</para>
                    </entry>
                </row>
                
            </tbody>
        </tgroup>
    </informaltable>
</section>

<section id="opsworks-metricdimensions">
    <title id="opsworks-metricdimensions.title">Dimensions for &OPS; Metrics</title>
    
    <para>&OPS; metrics use the
        &OPS; namespace, and provide metrics for the following
        dimensions:</para>
    
    <informaltable>
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
                <row>
                    <entry>Dimension</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <!-- Copy this row as needed -->
                <row>
                    <entry>
                        <para><code>StackId</code></para>
                    </entry>
                    <entry>
                        <para>Average values for a stack.</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>LayerId</code></para>
                    </entry>
                    <entry>
                        <para>Average values for a layer.</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>InstanceId</code></para>
                    </entry>
                    <entry>
                        <para>Average values for an instance.</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
</section>
'>

<!ENTITY cloudwatch_metrics_storagegateway '
    <section id="storagegateway-metrics">
        <title>AWS Storage Gateway Metrics</title>
        <para>The following metrics are available from the &AWSSGlong; service.</para>
        <para>The following table describes the AWS Storage Gateway metrics that you can use to get
            information about your gateways. Specify the <code>GatewayId</code> or
                <code>GatewayName</code> dimension for each metric to view the data for a
            gateway. Note that these metrics are measured in 5-minute intervals.</para>

        <informaltable>
                <tgroup cols="5">
                    <colspec colnum="1" colname="col1" colwidth="1.0*"/>
                    <colspec colnum="2" colname="col3" colwidth="2.87*"/>
                    <colspec colnum="3" colname="col3" colwidth="2.87*"/>
                    <colspec colnum="4" colname="col3" colwidth="2.87*"/>
                    <colspec colnum="5" colname="col3" colwidth="2.87*"/>
                   <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                            <entry>Gateway-Cached</entry>
                            <entry>Gateway-Stored</entry>
                            <entry>Gateway-VTL</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>CacheHitPercent</code></entry>
                            <entry>
                                <para>Percent of application reads served from the cache. This
                                    metric applies only to the gateway-cached volume setup. The
                                    sample is taken at the end of the reporting period.</para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CachePercentUsed</code></entry>
                            <entry>
                                <para>Percent use of the gateway&apos;s cache storage. This metric
                                    applies only to the gateway-cached volume setup. The sample is
                                    taken at the end of the reporting period.</para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CachePercentDirty</code></entry>
                            <entry>
                                <para>Percent of the gateway&apos;s cache that has not been persisted to
                                    &AWS;. This metric applies only to the gateway-cached volume
                                    setup. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CloudBytesDownloaded</code></entry>
                            <entry>
                                <para>The total number of compressed bytes that the gateway
                                    downloaded from &AWS; during the reporting period. </para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure input/output operations per second (IOPS).</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CloudDownloadLatency</code></entry>
                            <entry>
                                <para>The total number of milliseconds spent reading data from &AWS;
                                    during the reporting period.</para>
                                <para>Use this metric with the <code>Average</code> statistic to
                                    measure latency.</para>
                                <para>Units: Milliseconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CloudBytesUploaded</code></entry>
                            <entry>
                                <para>The total number of compressed bytes that the gateway uploaded to &AWS; during the reporting period. </para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure IOPS. </para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>UploadBufferFree</code></entry>
                            <entry>
                                <para>The total amount of unused space in the gateway&apos;s upload
                                    buffer. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        
                        <row>
                            <entry><code>CacheFree</code></entry>
                            <entry>
                                <para>The total amount of unused space in the gateway&apos;s cache
                                    storage. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        
                        <row>
                            <entry><code>UploadBufferPercentUsed</code></entry>
                            <entry>
                                <para>Percent use of the gateway&apos;s upload buffer. The sample is
                                    taken at the end of the reporting period.</para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>UploadBufferUsed</code></entry>
                            <entry>
                                <para>The total number of bytes being used in the gateway&apos;s upload
                                    buffer. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>CacheUsed</code></entry>
                            <entry>
                                <para>The total number of bytes being used in the gateway&apos;s cache
                                    storage. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>QueuedWrites</code></entry>
                            <entry>
                                <para>The number of bytes waiting to be written to &AWS;, sampled at
                                    the end of the reporting period for all volumes in the gateway.
                                    These bytes are kept in your gateway&apos;s working storage.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        
                        <row>
                            <entry><code>ReadBytes</code>
                            </entry>
                            <entry>
                                <para>The total number of bytes read from your on-premises
                                    applications in the reporting period for all volumes in the
                                    gateway.</para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure IOPS.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        
                        <row>
                            <entry><code>ReadTime</code></entry>
                            <entry>
                                <para>The total number of milliseconds spent to do read operations
                                    from your on-premises applications in the reporting period for
                                    all volumes in the gateway.</para>
                                <para>Use this metric with the <code>Average</code> statistic to
                                    measure latency.</para>
                                <para>Units: Milliseconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        
                        <row>
                            <entry><code>TotalCacheSize</code></entry>
                            <entry>
                                <para>The total size of the cache in bytes. This metric applies only
                                    to the gateway-cached volume setup. The sample is taken at the
                                    end of the reporting period.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>WriteBytes</code></entry>
                            <entry>
                                <para>The total number of bytes written to your on-premises
                                    applications in the reporting period for all volumes in the
                                    gateway.</para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure IOPS.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>WriteTime</code></entry>
                            <entry>
                                <para>The total number of milliseconds spent to do write operations
                                    from your on-premises applications in the reporting period for
                                    all volumes in the gateway. </para>
                                <para>Use this metric with the <code>Average</code> statistic to
                                    measure latency.</para>
                                <para>Units: Milliseconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>yes</entry>  
                        </row>
                        <row>
                            <entry><code>TimeSinceLastRecoveryPoint</code></entry>
                            <entry>
                                <para>The time since the last available recovery point. </para>
                                <para>Units: Seconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                            <entry>no</entry>  
                        </row>
                        <row>
                            <entry><code>WorkingStorageFree</code></entry>
                            <entry>
                                <para>The total amount of unused space in the gateway&apos;s working
                                    storage. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>
                                    <note>
                                        <para>Working storage applies only to the gateway-stored
                                            volume setup. The upload buffer applies to both the
                                            gateway-stored and gateway-cached volume setups. If you
                                            are working with both types of gateway setups, you might
                                            find it more convenient to use just the corresponding
                                            upload buffer metric,
                                            <code>UploadBufferFree</code>.</para>
                                    </note>
                                </para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                        </row>
                        <row>
                            <entry><code>WorkingStoragePercentUsed</code></entry>
                            <entry>
                                <para>Percent use of the gateway&apos;s upload buffer. The sample is
                                    taken at the end of the reporting period.</para>
                                <para>
                                    <note>
                                        <para>Working storage applies only to the gateway-stored
                                            volume setup. The upload buffer applies to both the
                                            gateway-stored and gateway-cached volume setups. If you
                                            are working with both types of gateway setups, you might
                                            find it more convenient to use just the corresponding
                                            upload buffer metric,
                                                <code>UploadBufferPercentUsed</code>.</para>
                                    </note>
                                </para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                        </row>
                        <row>
                            <entry><code>WorkingStorageUsed</code></entry>
                            <entry>
                                <para>The total number of bytes being used in the gateway&apos;s upload
                                    buffer. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>
                                    <note>
                                        <para>Working storage applies only to the gateway-stored
                                            volume setup. The upload buffer applies to both the
                                            gateway-stored and gateway-cached volume setups. If you
                                            are working with both types of gateway setups, you might
                                            find it more convenient to use just the corresponding
                                            upload buffer metric,
                                            <code>UploadBufferUsed</code>.</para>
                                    </note>
                                </para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>no</entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        
        
        
        <para>The following table describes the AWS Storage Gateway metrics that you can use to get
            information about your storage volumes. Specify the <code>VolumeId</code> dimension for
            each metric to view the data for a storage volume.</para>
        
        
         <informaltable>
                <tgroup cols="4">
                    <colspec colnum="1" colname="col1" colwidth="1.54*"/>
                    <colspec colnum="2" colname="col3" colwidth="5.14*"/>
                    <colspec colnum="3" colname="col3" colwidth="5.14*"/>
                    <colspec colnum="4" colname="col3" colwidth="5.14*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                            <entry>Gateway-Cached</entry>
                            <entry>Gateway-Stored</entry>
                            
                            
                        </row>
                    </thead>
                    <tbody>
                        
                        <row>
                            <entry><code>CacheHitPercent</code></entry>
                            <entry>
                                <para>Percent of application read operations from the volume that
                                    are served from cache. This metric applies only to cached
                                    volumes. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>When there are no application read operations from the volume,
                                    this metric reports 100 percent. </para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            
                        </row>
                        <row>
                            <entry><code>CachePercentUsed</code></entry>
                            <entry>
                                <para>The volume&apos;s contribution to the overall percent use of the
                                    gateway&apos;s cache storage. This metric applies only to cached
                                    volumes. The sample is taken at the end of the reporting
                                    period.</para>
                                <para>Use the <code>CachePercentUsed</code> metric of the gateway to
                                    view overall percent use of the gateway&apos;s cache storage.</para>
                                <para>Units: Percent</para>
                                </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            
                        </row>
                        <row>
                            <entry><code>CachePercentDirty</code></entry>
                            <entry>
                                <para>The volume&apos;s contribution to the overall percentage of the
                                    gateway&apos;s cache that has not been persisted to &AWS;. This
                                    metric applies only to volumes in a gateway-cached setup. The
                                    sample is taken at the end of the reporting period.</para>
                                <para>Use the <code>CachePercentDirty</code> metric of the gateway
                                    to view the overall percentage of the gateway&apos;s cache that has
                                    not been persisted to &AWS;.</para>
                                <para>Units: Percent</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>no</entry>
                            
                        </row>
                       
                        <row>
                            <entry><code>ReadBytes</code>
                            </entry>
                            <entry>
                                <para>The total number of bytes read from your on-premises
                                    applications in the reporting period.</para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure IOPS.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>ReadTime</code></entry>
                            <entry>
                                <para>The total number of milliseconds spent to do read operations
                                    from your on-premises applications in the reporting
                                    period.</para>
                                <para>Use this metric with the <code>Average</code> statistic to
                                    measure latency.</para>
                                <para>Units: Milliseconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>WriteBytes</code></entry>
                            <entry>
                                <para>The total number of bytes written to your on-premises
                                    applications in the reporting period.</para>
                                <para>Use this metric with the <code>Sum</code> statistic to measure
                                    throughput and with the <code>Samples</code> statistic to
                                    measure IOPS.</para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>WriteTime</code></entry>
                            <entry>
                                <para>The total number of milliseconds spent to do write operations
                                    from your on-premises applications in the reporting period. </para>
                                <para>Use this metric with the <code>Average</code> statistic to
                                    measure latency.</para>
                                <para>Units: Milliseconds</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>
                        <row>
                            <entry><code>QueuedWrites</code></entry>
                            <entry>
                                <para>The number of bytes waiting to be written to &AWS;, sampled at
                                    the end of the reporting period. </para>
                                <para>Units: Bytes</para>
                            </entry>
                            <entry>yes</entry>
                            <entry>yes</entry>
                        </row>                  
                    </tbody>
                </tgroup>
            </informaltable>
 </section>
'>
<!ENTITY cloudwatch_metrics_dimensions_storagegateway '
    <section id="storagegateway-metric-dimensions">
        <title id="storagegateway-metric-dimensions.title">Dimensions for
            &AWSSGlong; Metrics</title>
        <para>The Amazon CloudWatch namespace for the &AWSSGlong; service is
                <code>AWS/StorageGateway</code>. Data is available automatically in 5-minute periods
            at no charge. </para>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>GatewayId</code>, <code>GatewayName</code></entry>
                        <entry>
                            <para>These dimensions filter the data you request to gateway-specific
                                metrics. You can identify a gateway to work by its
                                    <code>GatewayId</code> or its <code>GatewayName</code>. However,
                                note that if the name of your gateway was changed for the time range
                                that you are interested in viewing metrics, then you should use the
                                    <code>GatewayId</code>. </para>
                            <para>
                                Throughput and latency data
                                of a gateway is based on
                                all the volumes for the gateway.
                                For information about working with gateway metrics,
                                see <ulink url="http://&domain;/storagegateway/latest/userguide/PerfGatewayAWS.html">Measuring Performance Between Your Gateway and AWS</ulink>.
                            </para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>VolumeId</code>
                        </entry>
                        <entry>
                            <para>This dimension filters the data you request to
                                volume-specific metrics. Identify a storage
                                volume to work with by its <code>VolumeId</code>.
                                For information about working with volume metrics,
                                see <ulink url="http://&domain;/storagegateway/latest/userguide/PerfAppGateway.html">Measuring Performance Between Your Application and Gateway</ulink>.
                            </para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>
'>
<!-- If you use this section, you must also use cloudwatch_metrics_ebs because this section xref's ebs-metrics-->

<!ENTITY cloudwatch_metrics_resource_credit '
			<row>
               <entry><simpara><code>CPUCreditUsage</code></simpara></entry>
               <entry>
                  <para>(Only valid for T2 instances) The number of CPU credits consumed during the
                        specified period.</para>
                  <para>This metric identifies the amount of time during which physical CPUs were
                        used for processing instructions by virtual CPUs allocated to the instance.
                  </para>
                  <note>
                        <para>CPU Credit metrics are available at a 5 minute frequency.</para>
                  </note>
                  <para>Units: Count</para>
               </entry>
            </row>
               <row>
                  <entry><simpara><code>CPUCreditBalance</code></simpara></entry>
                  <entry>
                     <para>(Only valid for T2 instances) The number of CPU credits that an instance
                        has accumulated.</para>
                     <para>This metric is used to determine how long an instance can burst beyond
                        its baseline performance level at a given rate.</para>
                     <note>
                        <para>CPU Credit metrics are available at a 5 minute frequency.</para>
                     </note>
                     <para>Units: Count</para>
                  </entry>
               </row>'>
						
<!ENTITY cloudwatch_metrics_ec2 '
      <informaltable>
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="2*"/>
          <thead>
            <row>
              <entry>Metric</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            &cloudwatch_metrics_resource_credit;
            <row>
              <entry><simpara><code>CPUUtilization</code></simpara></entry>
              <entry>
                <para>The percentage of allocated EC2 compute units that are currently in use on the
                  instance. This metric identifies the processing power required to run an application
                  upon a selected instance.</para>
                <note>
                  <para>Depending on the instance type, tools in your operating
                    system may show a lower percentage than &CW; when the instance is
                    not allocated a full processor core.</para>
                </note>
                <para>Units: Percent</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>DiskReadOps</code></simpara></entry>
              <entry>
                <para>Completed read operations from all instance store volumes available to the instance in a specified period of time.</para>
                <note><para>To calculate the average I/O operations per second (IOPS) for the period, divide the total operations in the period 
                  by the number of seconds in that period.</para></note>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>DiskWriteOps</code></simpara></entry>
              <entry>
                <para>Completed write operations to all instance store volumes available to the instance in a specified period of time.</para>
                <note><para>To calculate the average I/O operations per second (IOPS) for the period, divide the total operations in the period 
                  by the number of seconds in that period.</para>
                </note>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>DiskReadBytes</code></simpara></entry>
              <entry>
                <para>Bytes read from all instance store volumes available to the instance.</para>
                <para>This metric is used to determine the volume of the data the application reads from the hard disk of the
                  instance. This can be used to determine the speed of the application.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>DiskWriteBytes</code></simpara></entry>
              <entry>
                <para>Bytes written to all instance store volumes available to the instance.</para>
                <para>This metric is used to determine the volume of the data the application writes onto the hard disk of the
                  instance. This can be used to determine the speed of the application.</para>
                <para> Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>NetworkIn</code></simpara></entry>
              <entry>
                <para>The number of bytes received on all network interfaces by the instance. This
                  metric identifies the volume of incoming network traffic to an application on a
                  single instance.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>NetworkOut</code></simpara></entry>
              <entry>
                <para>The number of bytes sent out on all network interfaces by the instance. This
                  metric identifies the volume of outgoing network traffic to an application on a
                  single instance.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>NetworkPacketsIn</code></simpara></entry>
              <entry>
                <para>The number of packets received on all network interfaces by the instance. This 
                  metric identifies the volume of incoming traffic in terms of the number of packets on 
                  a single instance. This metric is available for basic monitoring only.</para>
                <para>Units: Count</para>
                <para>Statistics: Minimum, Maximum, Average</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>NetworkPacketsOut</code></simpara></entry>
              <entry>
                <para>The number of packets sent out on all network interfaces by the instance. This 
                  metric identifies the volume of outgoing traffic in terms of the number of packets on 
                  a single instance. This metric is available for basic monitoring only.</para>
                <para>Units: Count</para>
                <para>Statistics: Minimum, Maximum, Average</para>
              </entry>
            </row>
            <!--instance status-->
            <row>
              <entry><simpara><code>StatusCheckFailed</code></simpara></entry>
              <entry>
                <para>A combination of StatusCheckFailed_Instance and StatusCheckFailed_System that reports
                  if either of the status checks has failed. Values for this metric are either 0 (zero) or 1
                  (one.)  A zero indicates that the status check passed.  A one indicates a status check failure.</para>
                <note><para>Status check metrics are available at 1 minute frequency. For a newly-launched instance, status check metric data is only 
                  available after the instance has completed the initialization state. Status check metrics
                  become available within a few minutes of the instance being in the running state.</para></note>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>StatusCheckFailed_Instance</code></simpara></entry>
              <entry>
                <para>Reports whether the instance has passed the &EC2; instance status check in the last minute. Values for this metric are either 0 (zero) or 1 (one.) A zero indicates that the  status check passed. A one indicates a status check failure.</para>
                <note><para>Status check metrics are available at 1 minute frequency. For a newly-launched instance, status check metric data is only
                  available after the instance has completed the initialization state. Status check metrics
                  become available within a few minutes of the instance being in the running state.</para></note>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><simpara><code>StatusCheckFailed_System</code></simpara></entry>
              <entry>
                <para>Reports whether the instance has passed the EC2 system status check in the last minute. Values for this metric are either 0 (zero) or 1 (one.) A zero indicates that the status check passed. A one indicates a status check failure.</para>
                <note><para>Status check metrics are available at a 1 minute frequency. For a newly-launched instance, status check metric data is only 
                  available after the instance has completed the initialization state. Status check metrics
                  become available within a few minutes of the instance being in the running state.</para></note>
                <para>Units: Count</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
'>

<!ENTITY cloudwatch_dimensions_ec2 '
        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                                <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <code>AutoScalingGroupName</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for all instances in a specified
                                        capacity group. An <emphasis>Auto Scaling group</emphasis> is a collection of
                                        instances you define if you&apos;re using &AS;. This
                                        dimension is available only for &EC2; metrics when the instances are in such an
                                        Auto Scaling group. Available for instances with Detailed or Basic Monitoring enabled.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <code>ImageId</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for all instances running this &EC2;
                                        Amazon Machine Image (AMI). Available for instances with Detailed Monitoring enabled.</para>
                                </entry>
                            </row>

                            <row>
                                <entry>
                                    <code>InstanceId</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for the identified instance only.
                                        This helps you pinpoint an exact instance from which to monitor data.</para>
                                </entry>
                            </row>

                            <row>
                                <entry>
                                    <code>InstanceType</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for all instances running with
                                        this specified instance type. This helps you categorize your data by the
                                        type of instance running. For example, you might compare data from an m1.small
                                        instance and an m1.large instance to determine which has the better business
                                        value for your application.  Available for instances with Detailed Monitoring enabled.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
'>

<!ENTITY cloudwatch_metrics_ec2spot '
       	<informaltable>
        		<tgroup cols="2">
        			<colspec colname="c1" colnum="1" colwidth="1*"/>
        			<colspec colname="c2" colnum="2" colwidth="2*"/>
        			<thead>
        				<row>
        					<entry>Metric</entry>
        					<entry>Description</entry>
        				</row>
        			</thead>
        			<tbody>
        				<row>
        					<entry><simpara><code>AvailableInstancePoolsCount</code></simpara></entry>
        					<entry>
        						<para>The Spot Instance pools specified in the Spot Fleet request.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>BidsSubmittedForCapacity</code></simpara></entry>
        					<entry>
        						<para>The capacity for which &EC2; has submitted bids.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>EligibleInstancePoolCount</code></simpara></entry>
        					<entry>
        						<para>The Spot Instance pools specified in the Spot Fleet request where 
        							&EC2; can fulfill bids. &EC2; will not fulfill bids in pools where 
        							your bid price is less than the Spot price or the Spot price is 
        							greater than the price for On-Demand instances.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>FulfilledCapacity</code></simpara></entry>
        					<entry>
        						<para>The capacity that &EC2; has fulfilled.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>MaxPercentCapacityAllocation</code></simpara></entry>
        					<entry>
        						<para>The maximum value of <code>PercentCapacityAllocation</code> across all 
        							Spot Instance pools specified in the Spot Fleet request.</para>
        						<para><guilabel>Units</guilabel>: Percent</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>PendingCapacity</code></simpara></entry>
        					<entry>
        						<para>The difference between <code>TargetCapacity</code> and <code>FulfilledCapacity</code>.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>PercentCapacityAllocation</code></simpara></entry>
        					<entry>
        						<para>The capacity allocated for the Spot Instance pool for the specified dimensions.
									To get the maximum value recorded across all Spot Instance
									pools, use <code>MaxPercentCapacityAllocation</code>.</para>
        						<para><guilabel>Units</guilabel>: Percent</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>TargetCapacity</code></simpara></entry>
        					<entry>
        						<para>The target capacity of the Spot Fleet request.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>TerminatingCapacity</code></simpara></entry>
        					<entry>
        						<para>The capacity that is being terminated due to Spot Instance
									interruptions.</para>
        						<para><guilabel>Units</guilabel>: Count</para>
        					</entry>
        				</row>
        			</tbody>
        		</tgroup>
        	</informaltable>

        	<para>If the unit of measure for a metric is <code>Count</code>, the most useful statistic 
        		is <code>Average</code>.</para>
'>

<!ENTITY cloudwatch_dimensions_ec2spot '
        	<informaltable>
        		<tgroup cols="2">
        			<colspec colname="c1" colnum="1" colwidth="1*"/>
        			<colspec colname="c2" colnum="2" colwidth="2*"/>
        			<thead>
        				<row>
        					<entry>Dimensions</entry>
        					<entry>Description</entry>
        				</row>
        			</thead>
        			<tbody>
        				<row>
        					<entry><simpara><code>AvailabilityZone</code></simpara></entry>
        					<entry>
        						<para>Filter the data by Availability Zone.</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>FleetRequestId</code></simpara></entry>
        					<entry>
        						<para>Filter the data by Spot Fleet request.</para>
        					</entry>
        				</row>
        				<row>
        					<entry><simpara><code>InstanceType</code></simpara></entry>
        					<entry>
        						<para>Filter the data by instance type.</para>
        					</entry>
        				</row>
        			</tbody>
        		</tgroup>
        	</informaltable>
'>

<!ENTITY  cloudwatch_viewing_elb_alb '
        <section id="load-balancer-metrics-alb">
            <title id="load-balancer-metrics-alb.title">&ALB; Metrics</title>

            <para>The <code>AWS/ApplicationELB</code> namespace includes the following metrics.</para>
            <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="3.0*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                    	<row>
                    		<entry><code>ActiveConnectionCount</code></entry>
                    		<entry><para>The total number of concurrent TCP connections active from clients 
                    			to the load balancer and from the load balancer to targets.</para></entry>
                    	</row>
                    	<row>
                    		<entry><code>ClientTLSNegotiationErrorCount</code></entry>
                    		<entry><para>The number of TLS connections initiated by the client that did not 
                    			establish a session with the load balancer. Possible causes include a mismatch 
                    			of ciphers or protocols.</para></entry>
                    	</row>
                    	<row revision="provisionedCapacity">
                            <entry><code>ConsumedLBCapacityUnits</code></entry>
                            <entry><para>The number of load balancer capacity units (LCU) used.</para></entry>
                        </row>
                        <row>
                            <entry><code>HealthyHostCount</code></entry>
                            <entry><para>The number of targets that are considered healthy.</para></entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_4XX_Count</code></entry>
                            <entry><para>The number of HTTP 4XX client error codes that originate from the load balancer. 
                            	Client errors are generated when requests are malformed or incomplete.
                                These requests have not been received by the target.
                                This count does not include any response codes generated by the targets.</para></entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_5XX_Count</code></entry>
                            <entry><para>The number of HTTP 5XX server error codes that originate from the load balancer. 
                                This count does not include any response codes generated by the targets.</para></entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_Target_2XX_Count</code>,
                                <code>HTTPCode_Target_3XX_Count</code>,
                                <code>HTTPCode_Target_4XX_Count</code>,
                                <code>HTTPCode_Target_5XX_Count</code></entry>
                            <entry><para>The number of HTTP response codes generated by the targets. 
                                This does not include any response codes generated by the load balancer.</para></entry>
                        </row>
                    	<row>
                    		<entry><code>NewConnectionCount</code></entry>
                    		<entry><para>The total number of new TCP connections established from clients 
                    			to the load balancer and from the load balancer to targets.</para></entry>
                    	</row>
                    	<row>
                    		<entry><code>ProcessedBytes</code></entry>
                    		<entry><para>The total number of bytes processed by the load balancer.</para></entry>
                    	</row>
                    	<row>
                            <entry><code>RejectedConnectionCount</code></entry>
                            <entry><para>The number of connections that were rejected because the load balancer
                                could not establish a connection with a healthy target in order to route the request.</para></entry>
                        </row>
                        <row>
                            <entry><code>RequestCount</code></entry>
                            <entry><para>The number of requests received by the load balancer.</para></entry>
                        </row>
                    	<row>
                    		<entry><code>TargetConnectionErrorCount</code></entry>
                    		<entry><para>The number of connections that were not successfully established between the load balancer and target.</para></entry>
                    	</row>
                        <row>
                            <entry><code>TargetResponseTime</code></entry>
                            <entry><para>The time elapsed, in seconds, after the request leaves the load balancer 
                                until a response from the target is received. This is equivalent to the 
                                <code>target_processing_time</code> field in the access logs.</para></entry>
                        </row>
                    	<row>
                    		<entry><code>TargetTLSNegotiationErrorCount</code></entry>
                    		<entry><para>The number of TLS connections initiated by the load balancer that did not 
                    			establish a session with the target. Possible causes include a mismatch of ciphers 
                    			or protocols.</para></entry>
                    	</row>
                        <row>
                            <entry><code>UnhealthyHostCount</code></entry>
                            <entry><para>The number of targets that are considered unhealthy.</para></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>

        <section id="load-balancer-metric-dimensions-alb">
            <title id="load-balancer-metric-dimensions-alb.title">Metric Dimensions</title>
            <para>To filter the metrics for your &ALB;, use the following dimensions.</para>
            <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Dimension</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>AvailabilityZone</code></entry>
                            <entry>
                                <para>Filter the metric data by Availability Zone.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>LoadBalancer</code></entry>
                            <entry>
                                <para>Filter the metric data by load balancer. Specify the load balancer as follows: 
                                	app/<emphasis>load-balancer-name</emphasis>/<emphasis>1234567890123456</emphasis>
                                	(see the final portion of the load balancer ARN).</para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>TargetGroup</code></entry>
                            <entry>
                                <para>Filter the metric data by target group. Specify the target group as follows:
                                	targetgroup/<emphasis>target-group-name</emphasis>/<emphasis>1234567890123456</emphasis>
                                	(see the final portion of the target group ARN).</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>
'>

<!ENTITY cloudwatch_viewing_elb_classic '
<section id="loadbalancing-metrics-clb">
        <title id="loadbalancing-metrics-clb.title">&ELB; Metrics</title>
        <para>&ELB; reports metrics to &CW; only when requests are flowing through the load balancer.
           If there are requests flowing through the load balancer, &ELB; measures and sends its metrics in 60-second intervals. 
           If there are no requests flowing through the load balancer or no data for a metric, the metric is not reported.</para>
        <para>Note that not every statistic available through &CW; applies to every metric for &ELB;, though they are all available. 
           For each metric, be aware of the statistics that provide the most useful information.</para>
        <para>&ELB; provides the following &CW; metrics for &CLB;s</para>
        <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="3.0*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>BackendConnectionErrors</code></entry>
                            <entry>
                                <simpara>The number of connections that were not successfully
                                    established between the load balancer and the registered instances. Because
                                    the load balancer retries the connection when there are errors, this count can
                                    exceed the request rate. Note that this count also includes any connection errors 
                                    related to health checks.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>average</code>, <code>min</code>, and <code>max</code> are reported per load balancer node and are not 
                                    typically useful. However, the difference between the minimum and maximum (or peak to average or 
                                    average to trough) might be useful to determine whether a load balancer node is an outlier.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that attempts to connect to 1 instance in us-west-2a result in back-end connection errors. The sum for us-west-2a
							        includes these connection errors, while the sum for us-west-2b does not include them. Therefore, the sum for
							        the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HealthyHostCount</code>, <code>UnHealthyHostCount</code></entry>
                            <entry>
                                <simpara>The number of healthy and unhealthy instances registered with your load balancer.
                                    A newly registered instance is considered healthy after it passes the first health check. 
                                    An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks.
                                    An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks.
                                    If cross-zone load balancing is enabled, the number of healthy instances for the <code>LoadBalancerName</code> dimension
                                    is calculated across all Availability Zones.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There are registered instances</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistics are <code>average</code>, <code>min</code>, and <code>max</code>. 
                                    These statistics are determined by the load balancer nodes. Note that some load balancer nodes might determine that an instance is 
                                    unhealthy for a brief period while other nodes determine that it is healthy.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a 
						            and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. 
						            With the <code>AvailabilityZone</code> dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, 
						            and an average of 2 healthy and 0 unhealthy instances in us-west-2b.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <simpara><code>HTTPCode_Backend_2XX</code>,
                                         <code>HTTPCode_Backend_3XX</code>,
                                         <code>HTTPCode_Backend_4XX</code>,
                                         <code>HTTPCode_Backend_5XX</code></simpara>
                            </entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP response codes generated by registered instances. 
                                    This count does not include any response codes generated by the load balancer.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that requests sent to 1 instance in us-west-2a result in HTTP 500 responses. The sum for us-west-2a includes these error responses,
                                    while the sum for us-west-2b does not include them. Therefore, the sum for the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_4XX</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer.
                                    Client errors are generated when a request is malformed or incomplete.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
						            Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled,
                                    and that client requests include a malformed request URL. As a result, client errors would likely increase 
                                    in all Availability Zones. The sum for the load balancer is the sum of the values for the Availability Zones.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_5XX</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer.
                                    This count does not include any response codes generated by the registered instances.
                                    The metric is reported if there are no healthy instances registered to the load balancer, 
                                    or if the request rate exceeds the capacity of the instances (spillover) or the load balancer.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and 
			             		    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, 
						            the surge queue for the load balancer nodes in us-west-2a fills and clients receive a 503 error. 
						            If us-west-2b continues to respond normally, the sum for the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>Latency</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The time elapsed, in seconds, after the request leaves the load balancer until the headers
                                    of the response are received.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>average</code>.  
                                    Use <code>max</code> to determine whether some requests are taking substantially longer than the average.
                                    Note that <code>min</code> is typically not useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that requests sent to 1 instance in us-west-2a have a higher latency. The average for us-west-2a has a higher value than
                                    the average for us-west-2b.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>RequestCount</code></entry>
                            <entry>
                                <simpara>The number of requests completed or connections made during the specified interval (1 or 5 minutes).</simpara>
                                <simpara>[HTTP listener] The number of requests received and routed, including HTTP error responses from the registered instances.</simpara>
                                <simpara>[TCP listener] The number of connections made to the registered instances.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> all return 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a 
                                    and 2 instances in us-west-2b, and that 100 requests are sent to the load balancer. There are 60 requests sent to us-west-2a,
                                    with each instance receiving 30 requests, and 40 requests sent to us-west-2b, with each instance receiving 20 requests. 
                                    With the <code>AvailabilityZone</code> dimension, there is a sum of 60 requests in us-west-2a and 40 requests in us-west-2b. 
                                    With the <code>LoadBalancerName</code> dimension, there is a sum of 100 requests.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>SpilloverCount</code></entry>
                            <entry>
                                <simpara>The total number of requests that were rejected because the surge queue is full.</simpara> 
                                <simpara>[HTTP listener] The load balancer returns an HTTP 503 error code.</simpara>
                                <simpara>[TCP listener] The load balancer closes the connection.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>average</code>, <code>min</code>, and <code>max</code> are reported per load balancer node
                                    and are not typically useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and 
                                    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, 
                                    the surge queue for the load balancer node in us-west-2a fills, resulting in spillover.  
                                    If us-west-2b continues to respond normally, the sum for the load balancer will be the same 
                                    as the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>SurgeQueueLength</code></entry>
                            <entry>
                                <simpara>The total number of requests that are pending routing. The load balancer queues
                                    a request if it is unable to establish a connection with a healthy instance in order to route the request.
                                    The maximum size of the queue is 1,024. Additional requests are rejected when the queue is full. 
                                    For more information, see <code>SpilloverCount</code>.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value. <phrase revision="hold">After the queue is full, this metric is not
                                    reported again until a request is removed from the queue.</phrase></simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>max</code>, because it represents the peak 
                                    of queued requests. The <code>average</code> statistic can be useful in combination with <code>min</code> and 
                                    <code>max</code> to determine the range of queued requests. Note that <code>sum</code> is not useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and  
                                    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, the 
                                    surge queue for the load balancer nodes in us-west-2a fills, with clients likely experiencing increased response times. 
                                    If this continues, the load balancer will likely have spillovers (see the <code>SpilloverCount</code> metric). 
                                    If us-west-2b continues to respond normally, the <code>max</code> for the load balancer will be the same as the 
                                    <code>max</code> for us-west-2a.</simpara>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
        </informaltable>
   </section> 

   <section id="load-balancer-metric-dimensions-clb">
            <title id="load-balancer-metric-dimensions-clb.title">Metric Dimensions</title>
            <para>To filter the metrics for your &CLB;, use the following dimensions.</para>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>AvailabilityZone</code>
                        </entry>
                        <entry>
                            <para>Filter the metric data by the specified Availability Zone.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>LoadBalancerName</code>
                        </entry>
                        <entry>
                            <para>Filter the metric data by the specified load balancer.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
   </section>
'>

<!ENTITY cloudwatch_metrics_elb '
<section id="loadbalancing-metrics">
        <title id="loadbalancing-metrics.title">Elastic Load Balancing Metrics</title>
        <para>&ELB; reports metrics to &CW; only when requests are flowing through the load balancer.
           If there are requests flowing through the load balancer, &ELB; measures and sends its metrics in 60-second intervals. 
           If there are no requests flowing through the load balancer or no data for a metric, the metric is not reported.</para>
        <para>Note that not every statistic available through &CW; applies to every metric for &ELB;, though they are all available. 
           For each metric, be aware of the statistics that provide the most useful information.</para>
        <para>&ELB; provides the following &CW; metrics.</para>
        <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="3.0*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>HealthyHostCount</code>, <code>UnHealthyHostCount</code></entry>
                            <entry>
                                <simpara>The number of healthy and unhealthy instances registered with your load balancer.
                                    A newly registered instance is considered healthy after it passes the first health check. 
                                    An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks.
                                    An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks.
                                    If cross-zone load balancing is enabled, the number of healthy instances for the <code>LoadBalancerName</code> dimension
                                    is calculated across all Availability Zones.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There are registered instances</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistics are <code>average</code>, <code>min</code>, and <code>max</code>. 
                                    These statistics are determined by the load balancer nodes. Note that some load balancer nodes might determine that an instance is 
                                    unhealthy for a brief period while other nodes determine that it is healthy.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a 
						            and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. 
						            With the <code>AvailabilityZone</code> dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, 
						            and an average of 2 healthy and 0 unhealthy instances in us-west-2b.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>RequestCount</code></entry>
                            <entry>
                                <simpara>The number of requests completed or connections made during the specified interval (1 or 5 minutes).</simpara>
                                <simpara>[HTTP listener] The number of requests received and routed, including HTTP error responses from the registered instances.</simpara>
                                <simpara>[TCP listener] The number of connections made to the registered instances.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> all return 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a 
                                    and 2 instances in us-west-2b, and that 100 requests are sent to the load balancer. There are 60 requests sent to us-west-2a,
                                    with each instance receiving 30 requests, and 40 requests sent to us-west-2b, with each instance receiving 20 requests. 
                                    With the <code>AvailabilityZone</code> dimension, there is a sum of 60 requests in us-west-2a and 40 requests in us-west-2b. 
                                    With the <code>LoadBalancerName</code> dimension, there is a sum of 100 requests.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>Latency</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The time elapsed, in seconds, after the request leaves the load balancer until the headers
                                    of the response are received.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>average</code>.  
                                    Use <code>max</code> to determine whether some requests are taking substantially longer than the average.
                                    Note that <code>min</code> is typically not useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that requests sent to 1 instance in us-west-2a have a higher latency. The average for us-west-2a has a higher value than
                                    the average for us-west-2b.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>SurgeQueueLength</code></entry>
                            <entry>
                                <simpara>The total number of requests that are pending routing. The load balancer queues
                                    a request if it is unable to establish a connection with a healthy instance in order to route the request.
                                    The maximum size of the queue is 1,024. Additional requests are rejected when the queue is full. 
                                    For more information, see <code>SpilloverCount</code>.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value. <phrase revision="hold">After the queue is full, this metric is not
                                    reported again until a request is removed from the queue.</phrase></simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>max</code>, because it represents the peak 
                                    of queued requests. The <code>average</code> statistic can be useful in combination with <code>min</code> and 
                                    <code>max</code> to determine the range of queued requests. Note that <code>sum</code> is not useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and  
                                    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, the 
                                    surge queue for the load balancer nodes in us-west-2a fills, with clients likely experiencing increased response times. 
                                    If this continues, the load balancer will likely have spillovers (see the <code>SpilloverCount</code> metric). 
                                    If us-west-2b continues to respond normally, the <code>max</code> for the load balancer will be the same as the 
                                    <code>max</code> for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>SpilloverCount</code></entry>
                            <entry>
                                <simpara>The total number of requests that were rejected because the surge queue is full.</simpara> 
                                <simpara>[HTTP listener] The load balancer returns an HTTP 503 error code.</simpara>
                                <simpara>[TCP listener] The load balancer closes the connection.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>average</code>, <code>min</code>, and <code>max</code> are reported per load balancer node
                                    and are not typically useful.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and 
                                    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, 
                                    the surge queue for the load balancer node in us-west-2a fills, resulting in spillover.  
                                    If us-west-2b continues to respond normally, the sum for the load balancer will be the same 
                                    as the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_4XX</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer.
                                    Client errors are generated when a request is malformed or incomplete.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
						            Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled,
                                    and that client requests include a malformed request URL. As a result, client errors would likely increase 
                                    in all Availability Zones. The sum for the load balancer is the sum of the values for the Availability Zones.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HTTPCode_ELB_5XX</code></entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer.
                                    This count does not include any response codes generated by the registered instances.
                                    The metric is reported if there are no healthy instances registered to the load balancer, 
                                    or if the request rate exceeds the capacity of the instances (spillover) or the load balancer.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has us-west-2a and us-west-2b enabled, and 
			             		    that instances in us-west-2a are experiencing high latency and are slow to respond to requests. As a result, 
						            the surge queue for the load balancer nodes in us-west-2a fills and clients receive a 503 error. 
						            If us-west-2b continues to respond normally, the sum for the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <simpara><code>HTTPCode_Backend_2XX</code>,
                                         <code>HTTPCode_Backend_3XX</code>,
                                         <code>HTTPCode_Backend_4XX</code>,
                                         <code>HTTPCode_Backend_5XX</code></simpara>
                            </entry>
                            <entry>
                                <simpara>[HTTP listener] The number of HTTP response codes generated by registered instances. 
                                    This count does not include any response codes generated by the load balancer.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>min</code>, <code>max</code>, and <code>average</code> are all 1.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that requests sent to 1 instance in us-west-2a result in HTTP 500 responses. The sum for us-west-2a includes these error responses,
                                    while the sum for us-west-2b does not include them. Therefore, the sum for the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                        <row>
                            <entry><code>BackendConnectionErrors</code></entry>
                            <entry>
                                <simpara>The number of connections that were not successfully
                                    established between the load balancer and the registered instances. Because
                                    the load balancer retries the connection when there are errors, this count can
                                    exceed the request rate. Note that this count also includes any connection errors 
                                    related to health checks.</simpara>
                                <simpara><guilabel>Reporting criteria</guilabel>: There is a nonzero value</simpara>
                                <simpara><guilabel>Statistics</guilabel>: The most useful statistic is <code>sum</code>.
                                    Note that <code>average</code>, <code>min</code>, and <code>max</code> are reported per load balancer node and are not 
                                    typically useful. However, the difference between the minimum and maximum (or peak to average or 
                                    average to trough) might be useful to determine whether a load balancer node is an outlier.</simpara>
                                <simpara><guilabel>Example</guilabel>: Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b,
                                    and that attempts to connect to 1 instance in us-west-2a result in back-end connection errors. The sum for us-west-2a
							        includes these connection errors, while the sum for us-west-2b does not include them. Therefore, the sum for
							        the load balancer equals the sum for us-west-2a.</simpara>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
        </informaltable>
</section> '>

<!ENTITY cloudwatch_dimensions_elb '
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>LoadBalancerName</code>
                        </entry>
                        <entry>
                            <para>Filter the metric data by the specified load balancer.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>AvailabilityZone</code>
                        </entry>
                        <entry>
                            <para>Filter the metric data by the specified Availability Zone.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
'>

<!ENTITY cloudwatch_metrics_ebs '
<section id="ebs-metrics"><title id="ebs-metrics.title">&EBS; Metrics</title>
      <para>&EBSlong; (&EBS;) sends data points to &CW; for several metrics. &EBS; General Purpose
        SSD (gp2), Throughput Optimized HDD (st1) , Cold HDD (sc1), and Magnetic (standard) volumes
        automatically send five-minute metrics to &CW;. Provisioned IOPS SSD (io1) volumes
        automatically send one-minute metrics to &CW;. For more information about how
          to monitor &EBS;, see <ulink url="&url-ec2-user;monitoring-volume-status.html">Monitoring the Status of
            Your Volumes</ulink> in the <citetitle>&guide-ec2-user;</citetitle>.</para>
      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="3*"/>
          <thead>
            <row>
              <entry>Metric</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para><code>VolumeReadBytes</code></para>
                <para><code>VolumeWriteBytes</code></para>
              </entry>
              <entry>
                <para>Provides information on the I/O operations in a specified period of time. The
                  <code>Sum</code> statistic reports the total number of bytes transferred during the period.
                  The <code>Average</code> statistic reports the average size of each I/O operation during the
                  period. The <code>SampleCount</code> statistic reports the total number of I/O operations during
                  the period. The <code>Minimum</code> and <code>Maximum</code> statistics are not relevant for this metric.
                  Data is only reported to &CWlong; when the volume is active. If the volume is idle,
                  no data is reported to &CWlong;.
                </para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeReadOps</code></para>
                <para><code>VolumeWriteOps</code></para>
              </entry>
              <entry>
                <para>The total number of I/O operations in a specified period of time. <note>
                  <para>To calculate the average I/O operations per second (IOPS) for the period,
                    divide the total operations in the period by the number of seconds in that
                    period.</para>
                </note></para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeTotalReadTime</code></para>
                <para><code>VolumeTotalWriteTime</code></para>
              </entry>
              <entry>
                <para>The total number of seconds spent by all operations that completed in a
                  specified period of time. If multiple requests are submitted at the same time, this
                  total could be greater than the length of the period. For example, for a period of 5
                  minutes (300 seconds): if 700 operations completed during that period, and each
                  operation took 1 second, the value would be 700 seconds. </para>
                <para>Units: Seconds</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeIdleTime</code></para>
              </entry>
              <entry>
                <para>The total number of seconds in a specified period of time when no read or write
                  operations were submitted.</para>
                <para>Units: Seconds</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeQueueLength</code></para>
              </entry>
              <entry>
                <para>The number of read and write operation requests waiting to be completed in a
                  specified period of time.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeThroughputPercentage</code></para>
              </entry>
              <entry>
                <para>Used with &PIOPStitle; volumes only. The percentage of I/O operations per
                  second (IOPS) delivered of the total IOPS provisioned for an Amazon EBS volume. &PIOPStitle; 
                  volumes deliver within 10 percent of the provisioned IOPS performance 99.9
                  percent of the time over a given year.</para>
                
                <note><para>During a write, if there are no other pending I/O requests
                  in a minute, the metric value will be 100 percent. Also, a volume&apos;s I/O performance
                  may become degraded temporarily due to an action you have taken (e.g.,
                  creating a snapshot of a volume during peak usage, running the volume on
                  a non-EBS-optimized instance, accessing data on the volume for the first time).</para></note>
                
                <para>Units: Percent</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><code>VolumeConsumedReadWriteOps</code></para>
              </entry>
              <entry>
                <para>Used with &PIOPStitle; volumes only. The total amount of read and
                  write operations (normalized to 256K capacity units) consumed in a
                  specified period of time.</para>
                <para>I/O operations that are smaller than 256K each count as 1 consumed
                  IOPS. I/O operations that are larger than 256K are counted in 256K
                  capacity units. For example, a 1024K I/O would count as 4 consumed
                  IOPS.</para>
                <para>Units: Count</para>
              </entry>
            </row> 
            <row>
              <entry><simpara><code>BurstBalance</code></simpara></entry>
              <entry>
                <para>Used with &Throughput; (&st1;) and &Cold; (&sc1;) volumes only. Provides information on the balance available 
                  in the burst bucket. Data is only reported to &CW; when the volume is active. If the volume is not attached, 
                  no data is reported.</para>               
                <para>Units: Percent</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
   </section>
'>
      

<!ENTITY cloudwatch_dimensions_ebs '
        <section id="ebs-metric-dimensions">
          <title id="ebs-metric-dimensions.title">Dimensions for &EBS; Metrics</title>
          
          <para>The only dimension that &EBS; sends to &CW; is the volume ID. This means that
            all available statistics are filtered by volume ID. </para>
        </section>
'>


<!ENTITY cloudwatch_metrics_machinelearning '
<section id="machinelearning-metrics"><title id="machinelearning-metrics.title">&ML; Metrics</title>
 
  <para>&MLlong; sends the following metrics to &CW;.</para>
  <informaltable frame="all">
    <tgroup cols="2">
      <colspec colname="c1" colnum="1" colwidth="1*"/>
      <colspec colname="c2" colnum="2" colwidth="3*"/>
      <thead>
        <row>
          <entry>Metric</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry><code>PredictCount</code></entry>
          <entry>
            <para>The number of observations received by &ML;, measured over the specified time period. </para>
            <para>Units: Count</para>
          </entry>
        </row>
        <row>
          <entry><code>PredictFailureCount</code></entry>
          <entry>
            <para>The number of invalid or malformed observations received by &ML;, measured over the specified time period.</para>
            <para>Units: Count</para>
          </entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>
</section>
'>
 
<!ENTITY cloudwatch_dimensions_machinelearning '
 
        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                               <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <code>MLModelId</code>
                                </entry>
                                <entry>
                                    <para>The identifier of an &ML; model. All available statistics are filtered by <code>MLModelId</code>. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <code>RequestMode</code>
                                </entry>
                                <entry>
                                    <para>An indicator specifying whether observations were received as part of a batch prediction request or as real-time predict requests. All available statistics are filtered by <code>RequestMode</code>. </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
'>
 

<!ENTITY cloudwatch_metrics_rds '
<section id="rds-metrics"><title id="rds-metrics.title">Amazon RDS Metrics</title>
        <para>The following metrics are available from Amazon Relational Database
            Service.</para><informaltable frame="all">
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>BinLogDiskUsage</code></entry>
                        <entry>
                            <para>The amount of disk space occupied by binary logs on the master. Applies to MySQL read replicas.</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>CPUUtilization</code></entry>
                        <entry>
                            <para>The percentage of CPU utilization.</para>
                            <para>Units: Percent</para>
                        </entry>
                    </row>
                    &cloudwatch_metrics_resource_credit;
                    <row>
                        <entry><code>DatabaseConnections</code></entry>
                        <entry>
                            <para>The number of database connections in use.</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                     <row>
                        <entry><code>DiskQueueDepth</code></entry>
                        <entry>
                            <para>The number of outstanding IOs (read/write requests) waiting to access the disk.</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>FreeableMemory</code></entry>
                        <entry>
                            <para>The amount of available random access memory.</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>FreeStorageSpace</code></entry>
                        <entry>
                            <para>The amount of available storage space.</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReplicaLag</code></entry>
                        <entry>
                            <para>The amount of time a Read Replica DB instance lags behind the source DB instance. Applies to MySQL, MariaDB, and PostgreSQL Read Replicas.</para>
                            <para>Units: Seconds</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>SwapUsage</code></entry>
                        <entry>
                            <para>The amount of swap space used on the DB instance.</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>                    <row>
                        <entry><code>ReadIOPS</code></entry>
                        <entry>
                            <para>The average number of disk I/O operations per second.</para>
                            <para>Units: Count/Second</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>WriteIOPS</code></entry>
                        <entry>
                            <para>The average number of disk I/O operations per second.</para>
                            <para>Units: Count/Second</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReadLatency</code></entry>
                        <entry>
                            <para>The average amount of time taken per disk I/O operation.</para>
                            <para>Units: Seconds</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>WriteLatency</code></entry>
                        <entry>
                            <para>The average amount of time taken per disk I/O operation.</para>
                            <para>Units: Seconds</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>ReadThroughput</code></entry>
                        <entry>
                            <para>The average number of bytes read from disk per second.</para>
                            <para>Units: Bytes/Second</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>WriteThroughput</code></entry>
                        <entry>
                            <para>The average number of bytes written to disk per second.</para>
                            <para>Units: Bytes/Second</para>
                        </entry>
                    </row>
                    
                    <row>                        
                        <entry><code>NetworkReceiveThroughput</code></entry>
                        <entry>
                            <para>The incoming (Receive) network traffic on the DB instance, 
                            including both customer database traffic and Amazon RDS traffic 
                            used for monitoring and replication.</para>
                            <para>Units: Bytes/second</para>
                        </entry>
                    </row>
                    <row>
                        <entry><code>NetworkTransmitThroughput</code></entry>
                        <entry>
                            <para>The outgoing (Transmit) network traffic on the DB instance,
                            including both customer database traffic and Amazon RDS traffic 
                            used for monitoring and replication.</para>
                            <para>Units: Bytes/second</para>
                        </entry>
                    </row> 

                    
                </tbody>
            </tgroup>
            </informaltable></section>
'>

<!ENTITY cloudwatch_dimensions_rds '

        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                                <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <code>DBInstanceIdentifier</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for a specific database instance.</para>
                                </entry>
                            </row>
                           <row>
                                <entry>
                                    <code>DBClusterIdentifier</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for a specific Amazon Aurora DB cluster.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <code>DatabaseClass</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for all instances in a database class.
                                    For example, you can aggregate metrics for all instances that
                                    belong to the database class <code>db.m1.small</code></para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <code>EngineName</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for the identified engine name only.
                                        For example, you can aggregate metrics for all instances that have the engine name
                                        <code>mysql</code>.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>

'>

<!ENTITY cloudwatch_metrics_redshift '
<section id="redshift-metrics"><title id="redshift-metrics.title">&RS; Metrics</title>
        <para>The following metrics are available from &RS;.</para><informaltable frame="all">
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                                   <tbody>
                        <row>
                            <entry><code>CPUUtilization</code></entry>
                            <entry>
                                <para>The percentage of CPU utilization. For clusters, this
                                    metric represents an aggregation of all nodes (leader and
                                    compute) CPU utilization values.</para>
                                <para>Units: Percent</para>
                                <para>Dimensions: <code>NodeID</code>, <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>DatabaseConnections</code></entry>
                            <entry>
                                <para>The number of database connections to a cluster.</para>
                                <para>Units: Count</para>
                                <para>Dimensions: <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>HealthStatus</code></entry>
                            <entry>
                                <para>Indicates the health of the cluster. Every minute the cluster
                                    connects to its database and performs a simple query. If it is
                                    able to perform this operation successfully, the cluster is
                                    considered healthy. Otherwise, the cluster is unhealthy. An
                                    unhealthy status can occur when the cluster database is under
                                    extremely heavy load or if there is a configuration problem with
                                    a database on the cluster. The exception to this is when 
                                    the cluster is undergoing maintenance. Even though 
                                    your cluster might be unavailable due to maintenance tasks, 
                                    the cluster remains in HEALTHY state. For more information, see 
                                    <ulink url="&url-rs-mgmt;working-with-clusters.html#rs-maintenance-windows">
                                    Maintenance Windows</ulink> in the <emphasis>&guide-rs-mgmt;</emphasis>. 
                                    </para>
                                <para>
                                    <note>
                                        <para>In Amazon CloudWatch this metric is reported as 1 or 0
                                            whereas in the &service; console, this metric is
                                            displayed with the words <code>HEALTHY</code> or
                                                <code>UNHEALTHY</code> for convenience. When this
                                            metric is displayed in the &service; console, sampling
                                            averages are ignored and only <code>HEALTHY</code> or
                                                <code>UNHEALTHY</code> are displayed. In Amazon
                                            CloudWatch, values different than 1 and 0 may occur
                                            because of sampling issue. Any value below 1 for
                                                <code>HealthStatus</code> is reported as 0
                                                (<code>UNHEALTHY</code>).</para>
                                    </note>
                                </para>
                                <para>Units: 1/0 (<code>HEALTHY</code>/<code>UNHEALTHY</code> in the
                                    &service; console)</para>
                                <para>Dimensions: <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>MaintenanceMode</code></entry>
                            <entry>
                                <para>Indicates whether the cluster is in maintenance mode.</para>
                                <note>
                                    <para>In Amazon CloudWatch this metric is reported as 1 or 0
                                        whereas in the &service; console, this metric is displayed
                                        with the words <code>ON</code> or <code>OFF</code> for
                                        convenience. When this metric is displayed in the &service;
                                        console, sampling averages are ignored and only
                                            <code>ON</code> or <code>OFF</code> are displayed. In
                                        Amazon CloudWatch, values different than 1 and 0 may occur
                                        because of sampling issues. Any value greater than 0 for
                                            <code>MaintenanceMode</code> is reported as 1
                                            (<code>ON</code>).</para>
                                </note>
                                <para>Units: 1/0 (<code>ON</code>/<code>OFF</code> in the &service;
                                    console).</para>
                                <para>Dimensions: <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>NetworkReceiveThroughput</code></entry>
                            <entry>
                                <para>The rate at which the node or cluster receives data.</para>
                                <para>Units: Bytes/seconds (MB/s in the &service; console)</para>
                                <para>Dimensions: <code>NodeID</code>, <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>NetworkTransmitThroughput</code></entry>
                            <entry>
                                <para>The rate at which the node or cluster writes data.</para>
                                <para>Units: Bytes/second (MB/s in the &service; console)</para>
                                <para>Dimensions: <code>NodeID</code>, <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>PercentageDiskSpaceUsed</code></entry>
                            <entry>
                                <para>The percent of disk space used.</para>
                                <para>Units: Percent</para>
                                <para>Dimensions: <code>NodeID</code>, <code>ClusterIdentifier</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>ReadIOPS</code></entry>
                            <entry>
                                <para>The average number of disk read operations per second.</para>
                                <para>Units: Count/second</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>ReadLatency</code></entry>
                            <entry>
                                <para>The average amount of time taken for disk read I/O
                                    operations.</para>
                                <para>Units: Seconds</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>ReadThroughput</code></entry>
                            <entry>
                                <para>The average number of bytes read from disk per second.</para>
                                <para>Units: Bytes (GB/s in the &service; console)</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>WriteIOPS</code></entry>
                            <entry>
                                <para>The average number of write operations per second.</para>
                                <para>Units: Count/seconds</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>WriteLatency</code></entry>
                            <entry>
                                <para>The average amount of time taken for disk write I/O
                                    operations.</para>
                                <para>Units: Seconds</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>WriteThroughput</code></entry>
                            <entry>
                                <para>The average number of bytes written to disk per second.</para>
                                <para>Units: Bytes (GB/s in the &service; console)</para>
                                <para>Dimensions: <code>NodeID</code></para>
                            </entry>
                        </row>
                    </tbody>
            </tgroup>
            </informaltable></section>
'>

<!ENTITY cloudwatch_dimensions_redshift '

        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                                <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                            <entry>
                                <code>NodeID</code>
                            </entry>
                            <entry>
                                <para>Filters requested data that is specific to the nodes of a cluster.
                                    <code>NodeID</code> will be either "Leader", "Shared", or
                                    "Compute-N" where N is 0, 1, ... for the number of nodes in the
                                    cluster. "Shared" means that the cluster has only one node, i.e. the
                                    leader node and compute node are combined.</para>
                            </entry>
                            </row>
                        <row>
                            <entry>
                                <code>ClusterIdentifier</code>
                            </entry>
                            <entry>
                                <para>Filters requested data that is specific to the cluster.
                                    Metrics that are specific to clusters include
                                        <code>HealthStatus</code>, <code>MaintenanceMode</code>, and
                                        <code>DatabaseConnections</code>. In general metrics in for
                                    this dimension (e.g. <code>ReadIOPS</code>) that are also
                                    metrics of nodes represent an aggregate of the node metric data.
                                    You should take care in interpreting these metrics because they
                                    aggregate behavior of leader and compute nodes.</para>
                            </entry>
                        </row>
                        </tbody>
                    </tgroup>
                </informaltable>

'>

<!ENTITY cloudwatch_metrics_autoscaling '

        <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                    <colspec colname="c2" colnum="2" colwidth="3*"/>
                    <thead>
                        <row>
                            <entry>Metric</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><code>GroupMinSize</code></entry>
                            <entry>
                                <para>The minimum size of the Auto Scaling group.</para>

                            </entry>
                        </row>

                        <row>
                            <entry><code>GroupMaxSize</code></entry>
                            <entry>
                                <para>The maximum size of the Auto Scaling group.</para>

                            </entry>
                        </row>
                        <row>
                            <entry><code>GroupDesiredCapacity</code></entry>
                            <entry>
                                <para>The number of instances that the Auto Scaling group attempts to maintain.</para>

                            </entry>
                        </row>
                        <row>
                            <entry><code>GroupInServiceInstances</code></entry>
                            <entry>
                                <para>The number of instances that are running as part
                                    of the Auto Scaling group. This metric does not include
                                    instances that are pending or terminating.</para>

                            </entry>
                        </row>
                        <row>
                            <entry><code>GroupPendingInstances</code></entry>
                            <entry>
                                <para>The number of instances that are pending.
                                    A pending instance is not yet in service. This metric
                                    does not include instances that are in service or terminating.</para>

                            </entry>
                        </row>
                        
                        <row>
                            <entry><code>GroupStandbyInstances</code></entry>
                            <entry>
                                <para>The number of instances that are in a <code>Standby</code> state.
                                    Instances in this state are still running but are not actively in service.</para>

                            </entry>
                        </row>
                        
                        <row>
                            <entry><code>GroupTerminatingInstances</code></entry>
                            <entry>
                                <para>The number of instances that are in the process of terminating.
                                    This metric does not include instances that are
                                    in service or pending. </para>

                            </entry>
                        </row>
                        <row>
                            <entry><code>GroupTotalInstances</code></entry>
                            <entry>
                                <para>The total number of instances in the Auto Scaling group. This metric identifies
                                    the number of instances that are in service, pending, and terminating.</para>

                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>

'>

<!ENTITY cloudwatch_metrics_emr '
             <note>
    				<para>&EMR; pulls metrics from a &cluster;. If a &cluster; becomes unreachable, no metrics are reported until the &cluster; becomes available again.</para>
			</note>
     <para>The following are Hadoop 1 metrics:</para>
			<informaltable>
				<tgroup cols="2">
					<colspec colname="c1" colnum="1" colwidth="1.5*"/>
					<colspec colname="c2" colnum="2" colwidth="2.5*"/>
					<thead>
						<row>
							<entry>Metric</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>Cluster
									Status</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>IsIdle</para>
							</entry>
							<entry>
								<para>Indicates that a &cluster; is no longer performing
									work, but is still alive and accruing charges. It is set
									to 1 if no tasks are running and no jobs are running,
									and set to 0 otherwise. This value is checked at
									five-minute intervals and a value of 1 indicates only
									that the &cluster; was idle when checked, not that it
									was idle for the entire five minutes. To avoid false
									positives, you should raise an alarm when this value has
									been 1 for more than one consecutive 5-minute check. For
									example, you might raise an alarm on this value if it
									has been 1 for thirty minutes or longer.</para>
								<para>Use case: Monitor &cluster; performance</para>
								<para>Units: <emphasis>Boolean</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>JobsRunning</para>
							</entry>
							<entry>
								<para>The number of jobs in the cluster that are currently
									running.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>JobsFailed</para>
							</entry>
							<entry>
								<para>The number of jobs in the cluster that have failed.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>Map/Reduce</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>MapTasksRunning</para>
							</entry>
							<entry>
								<para>The number of running map tasks for each job. If you have a
								scheduler installed and multiple jobs running, multiple graphs are
								generated.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MapTasksRemaining</para>
							</entry>
							<entry>
								<para>The number of remaining map tasks for each job. If you have a 
								scheduler installed and multiple jobs running, multiple graphs are
								generated. A remaining map task is one that is not in
								any of the following states: Running, Killed, or
								Completed.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MapSlotsOpen</para>
							</entry>
							<entry>
								<para>The unused map task capacity. This is calculated as the maximum 
								number of map tasks for a given cluster, less the total number of map 
								tasks currently running in that cluster.</para>
								<para>Use case: Analyze &cluster; performance</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>RemainingMapTasksPerSlot</para>
							</entry>
							<entry>
								<para>The ratio of the total map tasks remaining to the total map slots 
								available in the cluster.</para>
								<para>Use case: Analyze &cluster; performance</para>
								<para>Units: <emphasis>Ratio</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ReduceTasksRunning</para>
							</entry>
							<entry>
								<para>The number of running reduce tasks for each job. If you have 
								a scheduler installed and multiple jobs running, multiple graphs are 
								generated.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ReduceTasksRemaining</para>
							</entry>
							<entry>
								<para>The number of remaining reduce tasks for each job. If you have a 
								scheduler installed and multiple jobs running, multiple graphs are 
								generated.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ReduceSlotsOpen</para>
							</entry>
							<entry>
								<para>Unused reduce task capacity. This is calculated as the
								maximum reduce task capacity for a given cluster, less
								the number of reduce tasks currently running in that
								cluster.</para>
								<para>Use case: Analyze &cluster; performance</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>Node
									Status</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>CoreNodesRunning</para>
							</entry>
							<entry>
								<para>The number of core nodes working. Data points for this
								metric are reported only when a corresponding instance
								group exists.</para>
    							<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>CoreNodesPending</para>
							</entry>
							<entry>
								<para>The number of core nodes waiting to be assigned. All
								of the core nodes requested may not be immediately
								available; this metric reports the pending requests.
								Data points for this metric are reported only when a
								corresponding instance group exists.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>LiveDataNodes</para>
							</entry>
							<entry>
								<para>The percentage of data nodes that are receiving work
								from Hadoop.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Percent</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TaskNodesRunning</para>
							</entry>
							<entry>
								<para>The number of task nodes working. Data points for this
								metric are reported only when a corresponding instance
								group exists.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TaskNodesPending</para>
							</entry>
							<entry>
								<para>The number of core nodes waiting to be assigned. All
								of the task nodes requested may not be immediately
								available; this metric reports the pending requests.
								Data points for this metric are reported only when a
								corresponding instance group exists.</para>
	       						<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>LiveTaskTrackers</para>
							</entry>
							<entry>
								<para>The percentage of task trackers that are
								functional.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Percent</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>IO</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>S3BytesWritten</para>
							</entry>
							<entry>
								<para>The number of bytes written to &S3;.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
									&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>S3BytesRead</para>
							</entry>
							<entry>
								<para>The number of bytes read from &S3;.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSUtilization</para>
							</entry>
							<entry>
								<para>The percentage of HDFS storage currently used.</para>
								<para>Use case: Analyze &cluster; performance</para>
								<para>Units: <emphasis>Percent</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSBytesRead</para>
							</entry>
							<entry>
								<para>The number of bytes read from HDFS.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSBytesWritten</para>
							</entry>
							<entry>
								<para>The number of bytes written to HDFS.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
									&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MissingBlocks</para>
							</entry>
							<entry>
								<para>The number of blocks in which HDFS has no replicas.
								These might be corrupt blocks.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TotalLoad</para>
							</entry>
							<entry>
								<para>The total number of concurrent data transfers.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>HBase</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>BackupFailed</para>
							</entry>
							<entry>
								<para>Whether the last backup failed. This is set to 0 by
								default and updated to 1 if the previous backup attempt
								failed. This metric is only reported for HBase
								&cluster;s.</para>
								<para>Use case: Monitor HBase backups</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MostRecentBackupDuration</para>
							</entry>
							<entry>
								<para>The amount of time it took the previous backup to complete. This 
								metric is set regardless of whether the last completed backup
								succeeded or failed. While the backup is ongoing, this
								metric returns the number of minutes after the backup
								started. This metric is only reported for HBase
								&cluster;s.</para>
								<para>Use case: Monitor HBase Backups</para>
								<para>Units: <emphasis>Minutes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TimeSinceLastSuccessfulBackup</para>
							</entry>
							<entry>
								<para>The number of elapsed minutes after the last successful HBase backup 								started on your cluster. This metric is only reported for HBase
								&cluster;s.</para>
								<para>Use case: Monitor HBase backups</para>
								<para>Units: <emphasis>Minutes</emphasis></para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>

    <para>The following metrics are available for Hadoop 2 AMIs:</para>
		    <informaltable>
				<tgroup cols="2">
					<colspec colname="c1" colnum="1" colwidth="1.5*"/>
					<colspec colname="c2" colnum="2" colwidth="2.5*"/>
					<thead>
						<row>
							<entry>Metric</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>Cluster
									Status</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>IsIdle</para>
							</entry>
							<entry>
								<para>Indicates that a &cluster; is no longer performing
								work, but is still alive and accruing charges. It is set
								to 1 if no tasks are running and no jobs are running,
								and set to 0 otherwise. This value is checked at
								five-minute intervals and a value of 1 indicates only
								that the &cluster; was idle when checked, not that it
								was idle for the entire five minutes. To avoid false
								positives, you should raise an alarm when this value has
								been 1 for more than one consecutive 5-minute check. For
								example, you might raise an alarm on this value if it
								has been 1 for thirty minutes or longer.</para>
								<para>Use case: Monitor &cluster; performance</para>
								<para>Units: <emphasis>Boolean</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ContainerAllocated</para>
							</entry>
							<entry>
								<para>The number of resource containers allocated by the
								ResourceManager.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ContainerReserved</para>
							</entry>
							<entry>
								<para>The number of containers reserved.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>ContainerPending</para>
							</entry>
							<entry>
								<para>The number of containers in the queue that have not
								yet been allocated.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsCompleted</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN that have
								completed.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsFailed</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN that have
								failed to complete.</para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsKilled</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN that have
								been killed.</para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsPending</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN that are
								in a pending state.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsRunning</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN that are
								running.</para>
	   						<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>AppsSubmitted</para>
							</entry>
							<entry>
								<para>The number of applications submitted to YARN.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>Node
							Status</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>CoreNodesRunning</para>
							</entry>
							<entry>
								<para>The number of core nodes working. Data points for this
								metric are reported only when a corresponding instance
								group exists.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>CoreNodesPending</para>
							</entry>
							<entry>
								<para>The number of core nodes waiting to be assigned. All
								of the core nodes requested may not be immediately
								available; this metric reports the pending requests.
								Data points for this metric are reported only when a
								corresponding instance group exists.</para>
		      					<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>LiveDataNodes</para>
							</entry>
							<entry>
								<para>The percentage of data nodes that are receiving work
								from Hadoop.</para>
	   	       					<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Percent</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRTotalNodes</para>
							</entry>
							<entry>
								<para>The number of nodes presently available to MapReduce
								jobs.</para>
								<para>Use ase: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRActiveNodes</para>
							</entry>
							<entry>
								<para>The number of nodes presently running MapReduce tasks
								or jobs.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRLostNodes</para>
							</entry>
							<entry>
								<para>The number of nodes allocated to MapReduce that have
								been marked in a LOST state.</para>
								<para>Use case: Monitor &cluster; health, Monitor &cluster;
								progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRUnhealthyNodes</para>
							</entry>
							<entry>
								<para>The number of nodes available to MapReduce jobs marked
								in an UNHEALTHY state.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRDecommissionedNodes</para>
							</entry>
							<entry>
								<para>The number of nodes allocated to MapReduce
								applications that have been marked in a DECOMMISSIONED
								state.</para>
								<para>Use ase: Monitor &cluster; health, Monitor &cluster;
								progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MRRebootedNodes</para>
							</entry>
							<entry>
								<para>The number of nodes available to MapReduce that have
								been rebooted and marked in a REBOOTED state.</para>
								<para>Use case: Monitor &cluster; health, Monitor &cluster;
								progress</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>IO</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>S3BytesWritten</para>
							</entry>
							<entry>
								<para>The number of bytes written to &S3;.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
    							<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>S3BytesRead</para>
							</entry>
							<entry>
								<para>The number of bytes read from &S3;.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSUtilization</para>
							</entry>
							<entry>
								<para>The percentage of HDFS storage currently used.</para>
								<para>Use case: Analyze &cluster; performance</para>
								<para>Units: <emphasis>Percent</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSBytesRead</para>
							</entry>
							<entry>
								<para>The number of bytes read from HDFS.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>HDFSBytesWritten</para>
							</entry>
							<entry>
								<para>The number of bytes written to HDFS.</para>
								<para>Use case: Analyze &cluster; performance, Monitor
								&cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MissingBlocks</para>
							</entry>
							<entry>
								<para>The number of blocks in which HDFS has no replicas.
								These might be corrupt blocks.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>CorruptBlocks</para>
							</entry>
							<entry>
								<para>The number of blocks that HDFS reports as
								corrupted.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TotalLoad</para>
							</entry>
							<entry>
								<para>The total number of concurrent data transfers.</para>
								<para>Use case: Monitor &cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MemoryTotalMB</para>
							</entry>
							<entry>
								<para>The total amount of memory in the cluster.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
	       						<para>MemoryReservedMB</para>
							</entry>
							<entry>
								<para>The amount of memory reserved.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MemoryAvailableMB</para>
							</entry>
							<entry>
								<para>The amount of memory available to be allocated.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MemoryAllocatedMB</para>
							</entry>
							<entry>
								<para>The amount of memory allocated to the cluster.</para>
								<para>Use case: Monitor &cluster; progress</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>PendingDeletionBlocks</para>
							</entry>
							<entry>
								<para>The number of blocks marked for deletion.</para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>UnderReplicatedBlocks</para>
							</entry>
							<entry>
								<para>The number of blocks that need to be replicated one or
								more times.</para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>DfsPendingReplicationBlocks</para>
							</entry>
							<entry>
								<para>The status of block replication: blocks being
								replicated, age of replication requests, and
								unsuccessful replication requests.</para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>CapacityRemainingGB</para>
							</entry>
							<entry>
								<para>The amount of remaining HDFS disk capacity. </para>
								<para>Use case: Monitor &cluster; progress, Monitor
								&cluster; health</para>
								<para>Units: <emphasis>Bytes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry namest="c1" nameend="c2"><emphasis>HBase</emphasis></entry>
						</row>
						<row>
							<entry>
								<para>HbaseBackupFailed</para>
							</entry>
							<entry>
								<para>Whether the last backup failed. This is set to 0 by
								default and updated to 1 if the previous backup attempt
								failed. This metric is only reported for HBase
								&cluster;s.</para>
								<para>Use case: Monitor HBase backups</para>
								<para>Units: <emphasis>Count</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>MostRecentBackupDuration</para>
							</entry>
							<entry>
								<para>The amount of time it took the previous backup to
								complete. This metric is set regardless of whether the
								last completed backup succeeded or failed. While the
								backup is ongoing, this metric returns the number of
								minutes after the backup started. This metric is only
								reported for HBase &cluster;s.</para>
								<para>Use case: Monitor HBase Backups</para>
								<para>Units: <emphasis>Minutes</emphasis></para>
							</entry>
						</row>
						<row>
							<entry>
								<para>TimeSinceLastSuccessfulBackup</para>
							</entry>
							<entry>
								<para>The number of elapsed minutes after the last
								successful HBase backup started on your cluster. This
								metric is only reported for HBase &cluster;s.</para>
								<para>Use case: Monitor HBase backups</para>
								<para>Units: <emphasis>Minutes</emphasis></para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
' >

<!ENTITY cloudwatch_dimensions_emr '
            <informaltable>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.42*"/>

                    <thead>
                        <row>
                            <entry>Dimension </entry>
                            <entry>Description </entry>
                        </row>
                    </thead>

                    <tbody>
                        <row>
                            <entry>ClusterId/JobFlowId</entry>
                            <entry>
                                The identifier for a &cluster;. You can find this value by clicking on 
                                the &cluster; in the Amazon EMR console.
                                It takes the form <code>j-XXXXXXXXXXXXX</code>.
                            </entry>
                        </row>
                        <row>
                            <entry>JobId</entry>
                            <entry>
                                The identifier of a job within a &cluster;. You can use this to filter 
                                the metrics returned from a &cluster; down to those that
                                apply to a single job within the &cluster;. JobId takes the form 
                                job_XXXXXXXXXXXX_XXXX.
                            </entry>
                        </row>

                    </tbody>
                </tgroup>
            </informaltable>
'>

<!ENTITY cloudwatch_dimensions_route_53 '
<section id="r53-metricscollected_shared" role="topic" revision="release">
	<title id="r53-metricscollected_shared.title">&R53; Dimensions and Metrics</title>

	<para>This section discusses the metrics and dimensions that &R53; sends to &CW;. &CW; provides detailed monitoring of &R53; by default. 
		&R53; sends one-minute metrics to &CW;. For more information about how to monitor &R53;, see 
		<ulink url="&url-r53-dev;health-checks-monitor-view-status.html#monitoring-health-checks">Monitoring Health Checks Using &CWlong;</ulink> 
		in the <emphasis>&guide-r53-dev;</emphasis>. </para>
			
		<note><para>To get &R53; metrics using &CW;, you must choose &region-us-east-1; as the current region. &R53; metrics are not available 
			if you select any other region. You can also optionally specify a <code>Region</code> dimension. For more information, see 
			<xref linkend="route-53-metrics-dimensions" endterm="route-53-metrics-dimensions.title"/>.</para></note>

	<section id="route-53-metrics-list">
		<title id="route-53-metrics-list.title">&R53; Metrics</title>
			<informaltable>
				<tgroup cols="2">
					<colspec colname="c1" colnum="1" colwidth="1.5*"/>
					<colspec colname="c2" colnum="2" colwidth="2.5*"/>
					<thead>
						<row>
							<entry>Metric</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>
								<para><code>ConnectionTime</code></para>
							</entry>
							<entry>
								<para>The average time, in milliseconds, that it took &R53; health checkers to establish a TCP connection with the endpoint. 
								You can view <code>ConnectionTime</code> for a health check either across all regions or for a selected geographic region.</para>
								<para>Valid statistics: Average (recommended), Minimum, Maximum</para>
								<para>Units: Milliseconds</para>
							</entry>
						</row>
						<row>
							<entry>
								<para><code>HealthCheckPercentageHealthy</code></para>
							</entry>
							<entry>
								<para>The percentage of &R53; health checkers that consider the selected endpoint to be healthy. You can view 
									<code>HealthCheckPercentageHealthy</code> only across all regions; data is not available for a selected region.</para>
								<para>Valid statistics: Average, Minimum, Maximum</para>
								<para>Units: Percent</para>
							</entry>
						</row>
						<row>
							<entry>
								<para><code>HealthCheckStatus</code></para>
							</entry>
							<entry>
								<para>The status of the health check endpoint that &CW; is checking. <guilabel>1</guilabel>
									indicates healthy, and <guilabel>0</guilabel> indicates unhealthy. You can view 
									<code>HealthCheckStatus</code> only across all regions; data is not available for a selected region.</para>
								<para>Valid statistics: Minimum</para>
								<para>Units: none</para>
							</entry>
						</row>
						<row>
							<entry>
								<para><code>SSLHandshakeTime</code></para>
							</entry>
							<entry>
								<para>The average time, in milliseconds, that it took &R53; health checkers to complete the SSL handshake. 
								You can view <code>SSLHandshakeTime</code> for a health check either across all regions or for a selected geographic region.</para>
								<para>Valid statistics: Average (recommended), Minimum, Maximum</para>
								<para>Units: Milliseconds</para>
							</entry>
						</row>
						<row>
							<entry>
								<para><code>TimeToFirstByte</code></para>
							</entry>
							<entry>
								<para>The average time, in milliseconds, that it took &R53; health checkers to receive the first byte of the response 
								to an HTTP or HTTPS request. You can view <code>TimeToFirstByte</code> for a health check either across all regions or 
								for a selected geographic region.</para>
								<para>Valid statistics: Average (recommended), Minimum, Maximum</para>
								<para>Units: Milliseconds</para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
	</section>
	
	<section id="route-53-metrics-dimensions">
		<title id="route-53-metrics-dimensions.title">Dimensions for &R53; Metrics</title>
			<para>&R53; metrics use the <code>AWS/Route53</code> namespace and provide metrics for <code>HealthCheckId</code>. When retrieving metrics, 
				you must supply the <code>HealthCheckId</code> dimension.</para>
			<para>In addition, for <code>ConnectionTime</code>, <code>SSLHandshakeTime</code>, and <code>TimeToFirstByte</code>, you can optionally 
				specify <code>Region</code>. If you omit <code>Region</code>, &CW; returns metrics across all regions. If you include <code>Region</code>, 
				&CW; returns metrics only for the specified region.</para>
			<para>For more information, see
				<ulink url="&url-r53-dev;monitoring-health-checks.html">Monitoring Health Checks Using &CW;</ulink> in the <emphasis>&guide-r53-dev;</emphasis>.</para>
	</section>
</section>
'>

<!ENTITY cloudwatch_metrics_sns '

    <section id="sns-metrics">
        <title id="sns-metrics.title">&SNSlong; Metrics</title>
        <para>This section discusses the metrics that &SNS; sends to &CW;.</para>
        
        
        <!-- ############ SNS section defined in phrases-shared-cw.ent ############ -->
        
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="2*"/>
                <colspec colname="c2" colnum="2" colwidth="2.5*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><para><code>NumberOfMessagesPublished</code></para></entry>
                        <entry>
                            <para>The number of messages published.</para>
                            <para>Units: Count</para>
                            <para>Valid Statistics: Sum</para>
                        </entry>
                    </row>
                    
                    <row>
                        <entry><para><code>PublishSize</code></para></entry>
                        <entry>
                            <para>The size of messages published.</para>
                            <para>Units: Bytes</para>
                            <para>Valid Statistics: Minimum, Maximum, Average and Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry><para><code>NumberOfNotificationsDelivered</code></para></entry>
                        <entry>
                            <para>The number of messages successfully delivered.</para>
                            <para>Units: Count</para>
                            <para>Valid Statistics: Sum</para>
                        </entry>
                    </row>
                    <row>
                        <entry><para><code>NumberOfNotificationsFailed</code></para></entry>
                        <entry>
                            <para>The number of messages that &SNS; failed to deliver. This
                                metric is applied after &SNS; stops attempting message
                                deliveries to &SQS;, email, SMS, or mobile push endpoints. Each
                                delivery attempt to an HTTP or HTTPS endpoint adds 1 to the metric.
                                For all other endpoints, the count increases by 1 when the message
                                is not delivered (regardless of the number of attempts). You can
                                control the number of retries for HTTP endpoints; for more
                                information, see <ulink url="&url-sns-dg;DeliveryPolicies.html"
                                    >Setting Amazon SNS Delivery Retry Policies for HTTP/HTTPS
                                    Endpoints</ulink>.</para>
                            <para>Units: Count</para>
                            <para>Valid Statistics: Sum, Average</para>
                        </entry>
                    </row>
                    <row>
                        <entry><para><code>SMSSuccessRate</code></para></entry>
                        <entry>
                            <para>The rate of successful SMS message deliveries.</para>
                            <para>Units: Count</para>
                            <para>Valid Statistics: Sum, Average, Data Samples</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>
    
    <section id="sns-metric-dimensions">
        <title id="sns-metric-dimensions.title">Dimensions for &SNSlong; Metrics</title>
        <para>&SNS; sends the following dimensions to &CW;.</para>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>Application</code>
                        </entry>
                        <entry>
                            <para>Filters on application objects, which represent an app and device registered with one of the supported push notification services, such as APNS and GCM.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>Application,Platform</code>
                        </entry>
                        <entry>
                            <para>Filters on application and platform objects, where the platform objects are for the supported push notification services, such as APNS and GCM.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>Country</code>
                        </entry>
                        <entry>
                            <para>Filters on the destination country of an SMS message. The country is represented by its ISO 3166-1 alpha-2 code.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>Platform</code>
                        </entry>
                        <entry>
                            <para>Filters on platform objects for the push notification services, such as APNS and GCM.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>TopicName</code>
                        </entry>
                        <entry>
                            <para>Filters on &SNS; topic names.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>SMSType</code>
                        </entry>
                        <entry>
                            <para>Filters on the message type of SMS message. Can be <emphasis>promotional</emphasis> or <emphasis>transactional</emphasis>.</para>
                        </entry>
                    </row>
                    
                </tbody>
            </tgroup>
        </informaltable>
        
    </section>
'>




<!ENTITY cloudwatch_metrics_sqs '
<section id="sqs-metrics">
    <info>
      <title id="sqs-metrics.title">&SQS; Metrics</title>
    </info>
    <para>This section discusses the metrics that &SQSlong; (&SQS;) sends to &CW;. </para>
    <!-- ############ SQS section defined in phrases-shared-cw.ent ############ -->
    <!-- Move to shared entities after tech review as &cloudwatch_metrics_sqs; -->
        <informaltable>
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2.5*"/>
            <colspec colname="c2" colnum="2" colwidth="2*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry><para><code>ApproximateNumberOfMessagesDelayed</code></para></entry>
                    <entry>
                        <para>The number of messages in the queue that are delayed and not
                            available for reading immediately. This can happen when the
                            queue is configured as a delay queue or when a message has been
                            sent with a delay parameter.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>ApproximateNumberOfMessagesNotVisible</code></para></entry>
                    <entry>
                        <para>The number of messages that are "in flight." Messages are
                            considered in flight if they have been sent to a client but have
                            not yet been deleted or have not yet reached the end of their
                            visibility window.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>ApproximateNumberOfMessagesVisible</code></para></entry>
                    <entry>
                        <para>The number of messages available for retrieval from the
                            queue.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>NumberOfEmptyReceives</code></para></entry>
                    <entry>
                        <para>The number of <function>ReceiveMessage</function> API calls
                            that did not return a message.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>NumberOfMessagesDeleted</code></para></entry>
                    <entry>
                        <para>The number of messages deleted from the queue.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>NumberOfMessagesReceived</code></para></entry>
                    <entry>
                        <para>The number of messages returned by calls to the
                                <function>ReceiveMessage</function> API action.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                <row>
                    <entry><para><code>NumberOfMessagesSent</code></para></entry>
                    <entry>
                        <para>The number of messages added to a queue.</para>
                        <para>Units: <emphasis>Count</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                    </entry>
                </row>
                
                <row>
                    <entry><para><code>SentMessageSize</code></para></entry>
                    <entry>
                        <para>The size of messages added to a queue. </para>
                        <para>Units: <emphasis>Bytes</emphasis></para>
                        <para>Valid Statistics: Average, Minimum, Maximum, Sum, Data Samples
                            (displays as Sample Count in the &SQS; console)</para>
                        <para>
                            <note><para><code>SentMessageSize</code> does not display as an
                                available metric in the &CW; console until at least one
                                message is sent to the corresponding queue.</para></note>
                        </para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
</section>
<!-- ################################################################### -->
<section id="sqs-metric-dimensions">
    <title id="sqs-metric-dimensions.title">Dimensions for &SQS; Metrics</title>
    <para>The only dimension that &SQS; sends to &CW; is <code>QueueName</code>. This means that all available statistics are filtered by <code>QueueName</code>.</para>
</section>
'>

<!ENTITY cloudwatch_metrics_opsworks '
<section id="opsworks-metrics-dimensions"><title id="opsworks-metrics-dimensions.title">&OPSlong; Metrics</title>
  <para>The following metrics are available from &OPSlong;.</para>
  <informaltable frame="all">
    <tgroup cols="2">
      <colspec colname="c1" colnum="1" colwidth="1*"/>
      <colspec colname="c2" colnum="2" colwidth="3*"/>
      <thead>
        <row>
          <entry>Metric</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry><code>cpu_idle</code></entry>
          <entry>
            <para>The percentage of time that the CPU is idle.</para>
            <para>Units: Percent</para>
          </entry>
        </row>
        <row>
          <entry><code>cpu_nice</code></entry>
          <entry>
            <para>The percentage of time that the CPU is handling processes with a positive nice value,
              which have lower scheduling priority. For information, see <ulink
              url="http://en.wikipedia.org/wiki/Nice_(Unix)">nice (Unix)</ulink>.</para>
            <para>Units: Percent</para>
          </entry>
        </row>
        <row>
          <entry><code>cpu_system</code></entry>
          <entry>
            <para>The percentage of time that the CPU is handling system operations.</para>
            <para>Units: Percent</para>
          </entry>
        </row>
        <row>
          <entry><code>cpu_user</code></entry>
          <entry>
            <para>The percentage of time that the CPU is handling user operations.</para>
            <para>Units: Percent</para>
          </entry>
        </row>
        <row>
          <entry><code>cpu_waitio</code></entry>
          <entry>
            <para>The percentage of time that the CPU is waiting for input/output operations.</para>
            <para>Units: Percent</para>
          </entry>
        </row>
        <row>
          <entry><code>load_1</code></entry>
          <entry>
            <para>The load averaged over a 1-minute window.</para>
            <para>Units: Unix load units</para>
          </entry>
        </row>
        <row>
          <entry><code>load_5</code></entry>
          <entry>
            <para>The load averaged over a 5-minute window.</para>
            <para>Units: Unix load units</para>
          </entry>
        </row>
        <row>
          <entry><code>load_15</code></entry>
          <entry>
            <para>The load averaged over a 15-minute window.</para>
            <para>Units: Unix load units</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_buffers</code></entry>
          <entry>
            <para>The amount of buffered memory.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_cached</code></entry>
          <entry>
            <para>The amount of cached memory.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_free</code></entry>
          <entry>
            <para>The amount of free memory.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_swap</code></entry>
          <entry>
            <para>The amount of swap space.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_total</code></entry>
          <entry>
            <para>The total amount of memory.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>memory_used</code></entry>
          <entry>
            <para>The amount of memory in use.</para>
            <para>Units: Kilobytes</para>
          </entry>
        </row>
        <row>
          <entry><code>procs</code></entry>
          <entry>
            <para>The number of active processes.</para>
            <para>Units: Count</para>
          </entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>
</section>
'>

<!ENTITY cloudwatch_dimensions_opsworks '
<informaltable>
  <tgroup cols="2">
  <colspec colname="c1" colnum="1" colwidth="1.5*"/>
  <colspec colname="c2" colnum="2" colwidth="3*"/>
    <thead>
      <row>
        <entry>
          <para>Dimension</para>
        </entry>
        <entry>
          <para>Description</para>
        </entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>
          <code>StackId</code>
        </entry>
        <entry>
        <para>Average values for a stack.</para>
        </entry>
      </row>
      <row>
        <entry>
          <code>LayerId</code>
        </entry>
        <entry>
        <para>Average values for a layer.</para>
        </entry>
      </row>
      <row>
        <entry>
          <code>InstanceId</code>
        </entry>
        <entry>
          <para>Average values for an instance.</para>
        </entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>
'>

<!ENTITY cw-metrics-swf-workflow '
  <section id="cloudwatch-workflow-metrics">
    <title id="cloudwatch-workflow-metrics.title">Workflow Metrics</title>

    <para>The following metrics are available for &SWF; workflows:</para>

    <table>
      <tgroup cols="2">
        <colspec colwidth="1.5*"/>
        <colspec colwidth="3*"/>
        <thead>
          <row>
            <entry>
              <para>Metric</para>
            </entry>
            <entry>
              <para>Description</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>DecisionTaskScheduleToStartTime</para>
            </entry>
            <entry>
              <para>The time interval, in milliseconds, between the time that the decision task was scheduled and the
                time it was picked up by a worker and started.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DecisionTaskStartToCloseTime</para>
            </entry>
            <entry>
              <para>The time interval, in milliseconds, between the time that the decision task was started and the time
                it was closed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DecisionTasksCompleted</para>
            </entry>
            <entry>
              <para>The count of decision tasks that have been completed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>StartedDecisionTasksTimedOutOnClose</para>
            </entry>
            <entry>
              <para>The count of decision tasks that started but timed out on closing.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowStartToCloseTime</para>
            </entry>
            <entry>
              <para>The time, in milliseconds, between the time the workflow started and the time it closed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsCanceled</para>
            </entry>
            <entry>
              <para>The count of workflows that were canceled.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsCompleted</para>
            </entry>
            <entry>
              <para>The count of workflows that completed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsContinuedAsNew</para>
            </entry>
            <entry>
              <para>The count of workflows that continued as new.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsFailed</para>
            </entry>
            <entry>
              <para>the count of workflows that failed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsTerminated</para>
            </entry>
            <entry>
              <para>the count of workflows that were terminated.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>WorkflowsTimedOut</para>
            </entry>
            <entry>
              <para>The count of workflows that timed out, for any reason.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <section id="cloudwatch-swf-workflow-metrics-dimensions">
      <title id="cloudwatch-swf-workflow-metrics-dimensions.title">Dimensions for &SWF; Workflow Metrics</title>
      <table>
        <tgroup cols="2">
          <colspec colwidth="1.5*"/>
          <colspec colwidth="3*"/>
          <thead>
            <row>
              <entry>
                <para>Dimension</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>Domain</para>
              </entry>
              <entry>
                <para>The &SWF; domain that the workflow is running in.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>WorkflowTypeName</para>
              </entry>
              <entry>
                <para>The name of the workflow type for this workflow execution.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>WorkflowTypeVersion</para>
              </entry>
              <entry>
                <para>The version of the workflow type for this workflow execution.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </section>
'>

<!ENTITY cw-metrics-swf-activity '
  <section id="cloudwatch-activity-metrics">
    <title id="cloudwatch-activity-metrics.title">Activity Metrics</title>

    <para>The following metrics are available for &SWF; activities:</para>

    <table>
      <tgroup cols="2">
        <colspec colwidth="1.5*"/>
        <colspec colwidth="3*"/>
        <thead>
          <row>
            <entry>
              <para>Metric</para>
            </entry>
            <entry>
              <para>Description</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>ActivityTaskScheduleToCloseTime</para>
            </entry>
            <entry>
              <para>The time interval, in milliseconds, between the time when the activity was scheduled to when it
                closed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ActivityTaskScheduleToStartTime</para>
            </entry>
            <entry>
              <para>The time interval, in milliseconds, between the time when the activity task was scheduled and when
                it started.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ActivityTaskStartToCloseTime</para>
            </entry>
            <entry>
              <para>The time interval, in milliseconds, between the time when the activity task started and when it was
                closed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ActivityTasksCanceled</para>
            </entry>
            <entry>
              <para>The count of activity tasks that were canceled.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ActivityTasksCompleted</para>
            </entry>
            <entry>
              <para>The count of activity tasks that completed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ActivityTasksFailed</para>
            </entry>
            <entry>
              <para>The count of activity tasks that failed.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ScheduledActivityTasksTimedOutOnClose</para>
            </entry>
            <entry>
              <para>The count of activity tasks that were scheduled but timed out on close.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ScheduledActivityTasksTimedOutOnStart</para>
            </entry>
            <entry>
              <para>The count of activity tasks that were scheduled but timed out on start.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>StartedActivityTasksTimedOutOnClose</para>
            </entry>
            <entry>
              <para>The count of activity tasks that were started but timed out on close.</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>StartedActivityTasksTimedOutOnHeartbeat</para>
            </entry>
            <entry>
              <para>The count of activity tasks that were started but timed out due to a heartbeat timeout.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <section id="cloudwatch-swf-activity-metrics-dimensions">
      <title id="cloudwatch-swf-activity-metrics-dimensions.title">Dimensions for &SWF; Activity Metrics</title>
      <table>
        <tgroup cols="2">
          <colspec colwidth="1.5*"/>
          <colspec colwidth="3*"/>
          <thead>
            <row>
              <entry>
                <para>Dimension</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>Domain</para>
              </entry>
              <entry>
                <para>The &SWF; domain that the activity is running in.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ActivityTypeName</para>
              </entry>
              <entry>
                <para>The name of the activity type.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ActivityTypeVersion</para>
              </entry>
              <entry>
                <para>The version of the activity type</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </section>
'>

<!ENTITY cloudwatch_metrics_kinesis '
<section id="kinesis-metrics"><title id="kinesis-metrics.title">&AKlong; Metrics</title>

  <para>&AK; sends the following metrics to &CW;.</para>
  <informaltable frame="all">
    <tgroup cols="2">
      <colspec colname="c1" colnum="1" colwidth="1*"/>
      <colspec colname="c2" colnum="2" colwidth="3*"/>
      <thead>
        <row>
          <entry>Metric</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry><code>PutRecord.Bytes</code></entry>
          <entry>
            <para>The number of bytes put to the &AK; stream using the <code>PutRecord</code> operation over the specified time period.</para>
            <para>Units: Bytes</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecord.Latency</code></entry>
          <entry>
            <para>The time taken per <code>PutRecord</code> operation, measured over the specified time period.</para>
            <para>Units: Milliseconds</para>
            <para>Valid statistics: Minimum, Maximum, Average</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecord.Success</code></entry>
          <entry>
            <para>The number of successful <code>PutRecord</code> operations per &AK; stream, measured over the specified time period. 
            Average reflects the percentage of successful writes to a stream.</para>
            <para>Units: Count</para>
            <para>Valid statistics: Average, Sum, Data Samples</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecords.Bytes</code></entry>
          <entry>
            <para>The number of bytes put to the &AK; stream using the <code>PutRecords</code> operation over the specified time period.</para>
            <para>Units: Bytes</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecords.Latency</code></entry>
          <entry>
            <para>The time taken per <code>PutRecords</code> operation, measured over the specified time period.</para>
            <para>Units: Milliseconds</para>
            <para>Valid statistics: Minimum, Maximum, Average</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecords.Records</code></entry>
          <entry>
            <para>The number of successful records in a <code>PutRecords</code> operation per &AK; stream, measured over the specified time period.</para>
            <para>Units: Count</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>PutRecords.Success</code></entry>
          <entry>
            <para>The number of <code>PutRecords</code> operations where at least one record succeeded, per &AK; stream, measured over the specified time period.</para>
            <para>Units: Count</para>
            <para>Valid statistics: Average, Sum, Data Samples</para>
          </entry>
        </row>
        <row>
          <entry><code>IncomingBytes</code></entry>
          <entry>
            <para>The number of bytes successfully put to the &AK; stream over the specified time period. This metric includes bytes from 
            <code>PutRecord</code> and <code>PutRecords</code> operations.</para>
            <para>Units: Bytes</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>IncomingRecords</code></entry>
          <entry>
            <para>The number of records successfully put to the &AK; stream over the specified time period. This metric includes record counts
            from <code>PutRecord</code> and <code>PutRecords</code> operations.</para>
            <para>Units: Count</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>GetRecords.Bytes</code></entry>
          <entry>
            <para>The number of bytes retrieved from the &AK; stream, measured over the specified time period.</para>
            <para>Units: Bytes</para>
            <para>Valid statistics: Minimum, Maximum, Average, Sum</para>
          </entry>
        </row>
        <row>
          <entry><code>GetRecords.IteratorAge</code></entry>
          <entry>
            <para>This metric is deprecated. Use <code>GetRecords.IteratorAgeMilliseconds</code>.</para>
          </entry>
        </row>
        <row>
          <entry><code>GetRecords.IteratorAgeMilliseconds</code></entry>
          <entry>
            <para>The age of the last record in all <code>GetRecords</code> calls made against an &AK; stream, measured over the specified time period. 
            Age is the difference between the current time and when the last record of the <code>GetRecords</code> call was written to the stream. 
            The Minimum and Maximum statistics can be used to track the progress of &AK; consumer applications. A value of zero indicates that the records 
            being read are completely caught up with the stream.</para>
            <para>Units: Milliseconds</para>
            <para>Valid statistics: Minimum, Maximum, Average</para>
          </entry>
        </row>
        <row>
          <entry><code>GetRecords.Latency</code></entry>
          <entry>
            <para>The time taken per <code>GetRecords</code> operation, measured over the specified time period.</para>
            <para>Units: Milliseconds</para>
            <para>Valid statistics: Minimum, Maximum, Average</para>
          </entry>
        </row>
        <row>
          <entry><code>GetRecords.Success</code></entry>
          <entry>
            <para>The number of successful <code>GetRecords</code> operations per stream, measured over the specified time period.</para>
            <para>Units: Count</para>
            <para>Valid statistics: Average, Sum, Data Samples</para>
          </entry>
        </row>
        </tbody>
    </tgroup>
  </informaltable>
</section>
'>

<!ENTITY cloudwatch_dimensions_kinesis '

        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                                <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <code>StreamName</code>
                                </entry>
                                <entry>
                                    <para>The name of the &AK; stream. All available statistics are filtered by <code>StreamName</code>. </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
'>

<!ENTITY cloudwatch_metrics_firehose_service '
<section id="fh-metrics-cw">
      <title id="fh-metrics-cw.title">Service-Level &CW; Metrics</title>
      <para>&FH; sends the following service-level metrics to &CW;.</para>
      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="3*"/>
          <thead>
            <row>
              <entry>Metric</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><code>DeliveryToElasticsearch.Bytes</code></entry>
              <entry>
                <para>The number of bytes indexed to &ESbrief; over the
                  specified time period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToElasticsearch.Records</code></entry>
              <entry>
                <para>The number of records indexed to &ESbrief; over the
                  specified time period.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToElasticsearch.Success</code></entry>
              <entry>
                <para>Sum of the successfully indexed records over the sum of
                  records that were attempted.</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToRedshift.Bytes</code></entry>
              <entry>
                <para>The number of bytes copied to &RS; over the specified time
                  period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToRedshift.Records</code></entry>
              <entry>
                <para>The number of records copied to &RS; over the specified
                  time period.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToRedshift.Success</code></entry>
              <entry>
               <para>Sum of successful &RS; COPY commands over the sum of all
                  &RS; COPY commands.</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToS3.Bytes</code></entry>
              <entry>
                <para>The number of bytes delivered to &S3; over the specified
                  time period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToS3.DataFreshness</code></entry>
              <entry>
                <para>Age (from getting into &FH; to now) of the oldest record
                  in &FH;. Any record older than this age has been delivered
                  to the S3 bucket.</para>
                <para>Units: Seconds</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToS3.Records</code></entry>
              <entry>
                <para>The number of records delivered to &S3; over the specified
                  time period.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToS3.Success</code></entry>
              <entry>
                <para>Sum of successful &S3; put commands over sum of all &S3;
                  put commands.</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToSplunk.Bytes</code></entry>
              <entry>
                <para>The number of bytes delivered to Splunk over the specified
                  time period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToSplunk.DataFreshness</code></entry>
              <entry>
                <para>Age (from getting into &FH; to now) of the oldest record
                  in &FH;. Any record older than this age has been delivered
                  to Splunk.</para>
                <para>Units: Seconds</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToSplunk.Records</code></entry>
              <entry>
                <para>The number of records delivered to Splunk over the specified
                  time period.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>DeliveryToSplunk.Success</code></entry>
              <entry>
                <para>The sum of the successfully indexed records over the sum of records that were attempted.</para>
              </entry>
            </row>        
            <row>
              <entry><code>IncomingBytes</code></entry>
              <entry>
                <para>The number of bytes ingested into the &FH; &FHstream; over
                  the specified time period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>IncomingRecords</code></entry>
              <entry>
                <para>The number of records ingested into the &FH; &FHstream;
                  over the specified time period.</para>
                <para>Units: Count</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    '>
    
    <!ENTITY cloudwatch_metrics_firehose_api '
    <section id="fh-metrics-api-cw">
      <title id="fh-metrics-api-cw.title">API-Level &CW; Metrics</title>
      
      <para>&FH; sends the following API-level metrics to &CW;.</para>
      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="3*"/>
          <thead>
            <row>
              <entry>Metric</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><code>DescribeDeliveryStream.Latency</code></entry>
              <entry>
                <para>The time taken per <code>DescribeDeliveryStream</code>
                  operation, measured over the specified time period.</para>
                <para>Units: Milliseconds</para>
              </entry>
            </row>
            <row>
              <entry><code>DescribeDeliveryStream.Requests</code></entry>
              <entry>
                <para>Total number of <code>DescribeDeliveryStream</code>
                  requests.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>ListDeliveryStreams.Latency</code></entry>
              <entry>
                <para>The time taken per <code>ListDeliveryStream</code>
                  operation, measured over the specified time period.</para>
                <para>Units: Milliseconds</para>
              </entry>
            </row>
            <row>
              <entry><code>ListDeliveryStreams.Requests</code></entry>
              <entry>
                <para>Total number of <code>ListFirehose</code> requests.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecord.Bytes</code></entry>
              <entry>
                <para>The number of bytes put to the &FH; &FHstream; using
                  <code>PutRecord</code> over the specified time
                  period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecord.Latency</code></entry>
              <entry>
                <para>The time taken per <code>PutRecord</code> operation,
                  measured over the specified time period.</para>
                <para>Units: Milliseconds</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecord.Requests</code></entry>
              <entry>
                <para>Total number of <code>PutRecord</code> requests, which is
                  equal to total number of records from <code>PutRecord</code>
                  operations.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecordBatch.Bytes</code></entry>
              <entry>
                <para>The number of bytes put to the &FH; &FHstream; using
                  <code>PutRecordBatch</code> over the specified time
                  period.</para>
                <para>Units: Bytes</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecordBatch.Latency</code></entry>
              <entry>
                <para>The time taken per <code>PutRecordBatch</code> operation,
                  measured over the specified time period.</para>
                <para>Units: Milliseconds</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecordBatch.Records</code></entry>
              <entry>
                <para>Total number of records from <code>PutRecordBatch</code>
                  operations.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>PutRecordBatch.Requests</code></entry>
              <entry>
                <para>Total number of <code>PutRecordBatch</code>
                  requests.</para>
                <para>Units: Count</para>
              </entry>
            </row>
            <row>
              <entry><code>UpdateDeliveryStream.Latency</code></entry>
              <entry>
                <para>The time taken per <code>UpdateDeliveryStream</code>
                  operation, measured over the specified time period.</para>
                <para>Units: Milliseconds</para>
             </entry>
            </row>
            <row>
              <entry><code>UpdateDeliveryStream.Requests</code></entry>
              <entry>
                <para>Total number of <code>UpdateDeliveryStream</code>
                  requests.</para>
                <para>Units: Count</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    '>


<!ENTITY cloudwatch_metrics_cs '
<section id="cloudsearch-metrics">
    <title id="cloudsearch-metrics.title">&CS; Metrics</title>
    <para>&CS; sends the following metrics to &CWlong;.  </para>
    <informaltable frame="all">
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1*"/>
            <colspec colname="c2" colnum="2" colwidth="3*"/>
            <thead>
                <row>
                    <entry>Metric</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <para><code>SuccessfulRequests</code></para>
                    </entry>
                    <entry>
                        <para>The number of search requests successfully processed by a search instance. </para>
                        <para>Units: Count</para>
                        <para>Valid statistics: Maximum, Sum</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>SearchableDocuments</code></para>
                    </entry>
                    <entry>
                        <para>The number of searchable documents in the domain&#x0027;s search index. </para>
                        <para>Units: Count</para>
                        <para>Valid statistics: Maximum</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>IndexUtilization</code></para>
                    </entry>
                    <entry>
                        <para>The percentage of the search instance&#x0027;s index capacity that has been used.
                         The Maximum value indicates the percentage of the domain&#x0027;s index capacity that has been used.</para>
                        <para>Units: Percent</para>
                        <para>Valid statistics: Average, Maximum</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para><code>Partitions</code></para>
                    </entry>
                    <entry>
                        <para>The number of partitions the index is distributed across.</para>
                        <para>Units: Count</para>
                        <para>Valid statistics: Minimum, Maximum</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
</section>
'>

<!ENTITY cloudwatch_metrics_dimensions_cs '
<section id="cloudsearch-metric-dimensions">
    <title id="cloudsearch-metric-dimensions.title">Dimensions for &CS; Metrics</title>
    <para>&CS; sends the ClientId and DomainName dimensions to &CW;.</para>
       <informaltable>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="2*"/>
            <colspec colname="c2" colnum="2" colwidth="2.5*"/>
            <thead>
              <row>
                <entry>Dimension</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><para><code>ClientId</code></para></entry>
                <entry>
                  <para>The AWS account ID.</para>
                </entry>
              </row>
              <row>
                <entry><para><code>DomainName</code></para></entry>
                <entry>
                   <para>The name of the search domain.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
</section>    
'>

<!ENTITY cloudwatch_viewing_waf '
 <section id="waf-metrics">
    <title id="waf-metrics.title">&WAF; Metrics</title>
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="2*"/>
                <colspec colname="c2" colnum="2" colwidth="2.5*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><para><code>AllowedRequests</code></para></entry>
                        <entry>
                            <para>The number of allowed web requests.</para>
                            <para>Units: Count</para>
                            <para>Dimensions: <code>Rule</code>, <code>WebACL</code></para>
                            <para>Valid statistics: Sum</para>
                        </entry>
                    </row>
                    <row>
                        <entry><para><code>BlockedRequests</code></para></entry>
                        <entry>
                            <para>The number of blocked web requests.</para>
                            <para>Units: Count</para>
                            <para>Dimensions: <code>Rule</code>, <code>WebACL</code></para>
                            <para>Valid statistics: Sum</para>
                        </entry>
                    </row>
                    <row>
                        <entry><para><code>CountedRequests</code></para></entry>
                        <entry>
                            <para>The number of counted web requests.</para>
                            <para>A counted web request is one that matches all of the conditions in a particular rule. Counted web requests are typically used for testing.</para>
                            <para>Units: Count</para>
                            <para>Dimensions: <code>Rule</code>, <code>WebACL</code></para>
                            <para>Valid statistics: Sum</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>    
    <section id="waf-metricdimensions" xreflabel="&WAF; Dimensions and Metrics">
        <title id="waf-metricdimensions.title">Dimensions for &WAF;</title>        
        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="2*"/>
                <colspec colname="c2" colnum="2" colwidth="2.5*"/>
                <thead>
                    <row>
                        <entry>Dimension</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><para><code>Rule</code></para></entry>
                        <entry>
                            <para>The name of the rule, or one of the following:</para>
                            <itemizedlist>
                                <listitem>
                                    <para>ALL, which represents the set of all rules.</para>
                                </listitem>
                                <listitem>
                                    <para>Default_Action, which represents the action assigned to any request that does not match any rule with either an allow or block action.</para>
                                </listitem>
                            </itemizedlist>                            
                        </entry>
                    </row>                    
                    <row>
                        <entry><para><code>WebACL</code></para></entry>
                        <entry>
                            <para>The name of the web ACL.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section>
'>

<!ENTITY cloudwatch_metrics_wsp '
<section id="wsp-metrics">
        <title id="wsp-metrics.title">&WSP; Metrics</title>
        <para>The following metrics are available from &WSP;. </para>
        <table frame="all">
            <title>&WSP; &CW; Metrics</title>
            <tgroup cols="5">
                <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                <colspec colname="newCol5" colnum="5" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                        <entry>Dimensions</entry>
                        <entry>Statistics Available</entry>
                        <entry>Units</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>Available</code><superscript>1</superscript></entry>
                        <entry>
                            <para>The number of WorkSpaces that returned a healthy status.</para>
                        </entry>
                        <entry>
                            <para><code>DirectoryId</code></para>
                            <para><code>WorkspaceId</code></para>
                        </entry>
                        <entry>Average, Sum, Maximum, Minimum, Data Samples</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>Unhealthy</code><superscript>1</superscript></entry>
                        <entry>
                            <para>The number of WorkSpaces that returned an unhealthy status.</para>
                        </entry>
                        <entry>
                            <para><code>DirectoryId</code></para>
                            <para><code>WorkspaceId</code></para>
                        </entry>
                        <entry>Average, Sum, Maximum, Minimum, Data Samples</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>ConnectionAttempt</code><superscript>2</superscript></entry>
                        <entry>
                            <para>The number of connection attempts.</para>
                        </entry>
                        <entry>
                            <para><code>DirectoryId</code></para>
                            <para><code>WorkspaceId</code></para>
                        </entry>
                        <entry>Average, Sum, Maximum, Minimum, Data Samples</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>ConnectionSuccess</code><superscript>2</superscript></entry>
                        <entry>
                            <para>The number of successful connections.</para>
                        </entry>
                        <entry>
                            <para><code>DirectoryId</code></para>
                            <para><code>WorkspaceId</code></para>
                        </entry>
                        <entry>Average, Sum, Maximum, Minimum, Data Samples</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                        <entry><code>ConnectionFailure</code><superscript>2</superscript></entry>
                        <entry>
                            <para>The number of failed connections.</para>
                        </entry>
                        <entry>
                            <para><code>DirectoryId</code></para>
                            <para><code>WorkspaceId</code></para>
                        </entry>
                        <entry>Average, Sum, Maximum, Minimum, Data Samples</entry>
                        <entry>Count</entry>
                    </row>
                    <row>
                       <entry><code>SessionLaunchTime</code><superscript>2</superscript></entry>
                       <entry><para>The amount of time it takes to initiate a WorkSpaces session.</para></entry>
                       <entry>
                          <para><code>DirectoryID</code></para>
                          <para><code>WorkspaceID</code></para>
                       </entry>
                       <entry><para>Average, Sum, Maximum, Minimum, Data Samples</para></entry>
                       <entry><para>Second (time)</para></entry>
                    </row>
                    <row>
                       <entry><code>InSessionLatency</code><superscript>2</superscript></entry>
                       <entry><para>The round trip time between the WorkSpaces client and the WorkSpace.</para></entry>
                       <entry>
                          <para><code>DirectoryID</code></para>
                          <para><code>WorkspaceID</code></para>
                       </entry>
                       <entry><para>Average, Sum, Maximum, Minimum, Data Samples</para></entry>
                       <entry><para>Millisecond (time)</para></entry>
                    </row>
                    <row>
                       <entry><code>SessionDisconnect</code><superscript>2</superscript></entry>
                       <entry><para>The number of connections that were closed, including user-initiated and failed connections.</para></entry>
                       <entry>
                          <para><code>DirectoryID</code></para>
                          <para><code>WorkspaceID</code></para>
                       </entry>
                       <entry><para>Average, Sum, Maximum, Minimum, Data Samples</para></entry>
                       <entry><para>Count</para></entry>
                    </row>
                    <row>
                        <entry><code>UserConnected</code><superscript>3</superscript></entry>
                        <entry><para>The number of WorkSpaces that have a user connected.</para></entry>
                       <entry>
                          <para><code>DirectoryID</code></para>
                          <para><code>WorkspaceID</code></para>
                       </entry>
                       <entry><para>Average, Sum, Maximum, Minimum, Data Samples</para></entry>
                       <entry><para>Count</para></entry>
                    </row>
                    <row>
                        <entry><code>Maintenance</code><superscript>4</superscript></entry>
                        <entry><para>The number of WorkSpaces that are currently under maintenance.</para></entry>
                       <entry>
                          <para><code>DirectoryID</code></para>
                          <para><code>WorkspaceID</code></para>
                       </entry>
                       <entry><para>Average, Sum, Maximum, Minimum, Data Samples</para></entry>
                       <entry><para>Count</para></entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para><superscript>1</superscript> &WSP; periodically sends status requests to a WorkSpace.
            A WorkSpace is marked <code>Available</code> when it responds to these requests,
                and <code>Unhealthy</code> when it fails to respond to these requests. These metrics
            are available at a per-WorkSpace granularity, and also aggregated for all WorkSpaces in
            an organization. </para>
        <para><superscript>2</superscript> &WSP; records metrics on connections made to each
            WorkSpace. These metrics are emitted after a user has successfully authenticated via the
            WorkSpaces client and the client then initiates a session. The metrics are available at
            a per-WorkSpace granularity, and also aggregated for all WorkSpaces in a
            directory.</para>
        <para><superscript>3</superscript> &WSP; periodically sends connection status 
            requests to a WorkSpace. Users are reported as connected when they are actively using 
            their sessions. This metric is available at a per-WorkSpace granularity, and is also aggregated 
            for all WorkSpaces in an organization.</para>
        <para><superscript>4</superscript> This metric applies to WorkSpaces that are configured 
            with an AutoStop running mode. If you have maintenance enabled for your WorkSpaces, 
            this metric captures the number of WorkSpaces that are currently under maintenance. This 
            metric is available at a per-WorkSpace granularity, which describes when a WorkSpace went 
            into maintenance and when it was removed.</para>
    </section>
'>

<!ENTITY cloudwatch_dimensions_wsp '
    <section id="wsp-metric-dimensions">
        <title id="wsp-metric-dimensions.title">Dimensions for &WSP; Metrics</title>
        <para>&WSP; metrics are available for the following dimensions.</para>
        <table frame="all">
            <title>&WSP; &CW; Dimensions</title>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                <thead>
                    <row>
                        <entry>Dimension</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>DirectoryId</code></entry>
                        <entry>Limits the data you receive to the WorkSpaces in the specified
                            directory. The <code>DirectoryId</code> value is in the form of
                                <code>d-XXXXXXXXXX</code>.</entry>
                    </row>
                    <row>
                        <entry><code>WorkspaceId</code></entry>
                        <entry>Limits the data you receive to the specified WorkSpace. The
                                <code>WorkspaceId</code> value is in the
                                form<code>ws-XXXXXXXXXX</code>.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
'>

<!ENTITY cloudwatch_metrics_s3 '
    <section id="s3-cloudwatch-metrics">
        <sectioninfo>
            <abstract>
                <para>List of &S3; metrics for &CWlong;.</para>
            </abstract>
        </sectioninfo>
        <title id="s3-cloudwatch-metrics.title">&S3; &CW; Metrics</title>
        <para>The &S3; namespace for &CW; is AWS/S3.</para>
        <para>The following metrics are available from the &S3; service.</para>
        <informaltable frame="all">
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><code>BucketSizeBytes</code></entry>
                        <entry>
                            <para>The amount of data in bytes stored in a bucket in the Standard storage class, 
                            Standard - Infrequent Access (Standard_IA) storage class, or the 
                            Reduced Redundancy Storage (RRS) class.</para>
                            <para>Valid storage type filters: <code>StandardStorage</code>, or 
                            <code>StandardIAStorage</code>, or <code>ReducedRedundancyStorage</code> 
                            (see <code>StorageType</code> dimension)</para>
                        </entry>
                    </row> 
                    <row>
                        <entry><code>NumberOfObjects</code></entry>
                        <entry>
                          <para>The total number of objects stored in a bucket for all storage classes except 
                          for the <code>GLACIER</code> storage class.</para>
                          <para>Valid storage type filters: <code>AllStorageTypes</code> only 
                            (see <code>StorageType</code> dimension)</para>
                        </entry>
                    </row>     
                </tbody>
            </tgroup>
           </informaltable>
    </section>
'>

<!ENTITY cloudwatch_dimensions_s3 '
    <section id="s3-cloudwatch-dimensions">
        <sectioninfo>
            <abstract>
                <para>List of &S3; dimensions for &CWlong;.</para>
            </abstract>
        </sectioninfo>
        <title id="s3-cloudwatch-dimensions.title">&S3; &CW; Dimensions</title>
        <para>The following dimensions are used to filter &S3; metrics.</para>
        <informaltable>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                        <colspec colname="c2" colnum="2" colwidth="3*"/>
                        <thead>
                            <row>
                                <entry>
                                    <para>Dimension</para>
                                </entry>
                                <entry>
                                    <para>Description</para>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <code>BucketName</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you request for the identified bucket only.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <code>StorageType</code>
                                </entry>
                                <entry>
                                    <para>This dimension filters the data you have stored in a bucket by the type of storage. 
                                    The types are <code>StandardStorage</code> for the Standard storage class, 
                                    <code>StandardIAStorage</code> for the Standard_IA storage class,
                                    <code>ReducedRedundancyStorage</code> for the Reduced Redundancy Storage (RRS) class, 
                                    and <code>AllStorageTypes</code>. The <code>AllStorageTypes</code> 
                                    type includes the Standard, Standard_IA, and RRS storage classes, it does not include the <code>GLACIER</code> storage class.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
    </section>
'>


<!-- CloudWatch Logs Dimensions & Metrics -->

    <!ENTITY cloudwatch_logs_metrics '

        <section id="cwl-metrics">
        <title id="cwl-metrics.title">&CWL; Metrics</title>
        <para>&CWLlong; sends the following metrics to &CW;.</para>
        <informaltable frame="all">
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <para><code>IncomingBytes</code></para>
                        </entry>
                        <entry>
                            <para>The volume of log events in uncompressed bytes uploaded to &CWL;.
                                When used with the <code>LogGroupName</code> dimension, this is the
                                volume of log events in uncompressed bytes uploaded to the log
                                group.</para>
                            <para>Valid Dimensions: LogGroupName</para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>IncomingLogEvents</code></para>
                        </entry>
                        <entry>
                            <para>The number of log events uploaded to &CWL;. When used with the
                                    <code>LogGroupName</code> dimension, this is the number of log
                                events uploaded to the log group. </para>
                            <para>Valid Dimensions: LogGroupName</para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: None</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>ForwardedBytes</code></para>
                        </entry>
                        <entry>
                            <para>The volume of log events in compressed bytes forwarded to the
                                subscription destination.</para>
                            <para>Valid Dimensions: LogGroupName, DestinationType, FilterName </para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: Bytes</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>ForwardedLogEvents</code></para>
                        </entry>
                        <entry>
                            <para>The number of log events forwarded to the subscription
                                destination.</para>
                            <para>Valid Dimensions: LogGroupName, DestinationType, FilterName</para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: None</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>DeliveryErrors</code></para>
                        </entry>
                        <entry>
                            <para>The number of log events for which &CWL; received an error when
                                forwarding data to the subscription destination.</para>
                            <para>Valid Dimensions: LogGroupName, DestinationType, FilterName</para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: None</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>DeliveryThrottling</code></para>
                        </entry>
                        <entry>
                            <para>The number of log events for which &CWL; was throttled when
                                forwarding data to the subscription destination.</para>
                            <para>Valid Dimensions: LogGroupName, DestinationType, FilterName</para>
                            <para>Valid Statistic: Sum</para>
                            <para>Units: None</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
        </section> 
'>

    
    <!ENTITY cloudwatch_logs_dimensions ' 

        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>LogGroupName</code>
                        </entry>
                        <entry>
                            <para>The name of the &CWL; log group for which to display
                                metrics.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>DestinationType</code>
                        </entry>
                        <entry>
                            <para>The subscription destination for the &CWL; data, which can be
                                &LAMlong;, &AKSlong;, or &AKFlong;.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <code>FilterName</code>
                        </entry>
                        <entry>
                            <para>The name of the subscription filter that is forwarding data from
                                the log group to the destination. The subscription filter name is 
                                automatically converted by &CW; to ASCII and any unsupported 
                                characters get replaced with a question mark (?).</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
'>



<!-- CloudWatch Events Dimensions & Metrics -->

     
    <!ENTITY cloudwatch_events_metrics '

    <section id="cwe-metrics">
        <title id="cwe-metrics.title">&CWE; Metrics</title>
        <para>&CWElong; sends the following metrics to &CW;.</para>
        <informaltable frame="all">
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>Metric</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <para><code>Invocations</code></para>
                        </entry>
                        <entry>
                            <para>Measures the number of times a target is invoked for a rule in
                                response to an event. This includes successful and failed
                                invocations, but does not include throttled or retried attempts
                                until they fail permanently.</para>
                            <note>
                                <para>&CWE; only sends this metric to &CW; if it has a non-zero
                                    value.</para>
                            </note>
                            <para>Valid Dimensions: RuleName</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>FailedInvocations</code></para>
                        </entry>
                        <entry>
                            <para>Measures the number of invocations that failed permanently. This
                                does not include invocations that are retried or that succeeded
                                after a retry attempt.</para>
                            <para>Valid Dimensions: RuleName</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>TriggeredRules</code></para>
                        </entry>
                        <entry>
                            <para>Measures the number of triggered rules that matched with any
                                event.</para>
                            <para>Valid Dimensions: RuleName</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>MatchedEvents</code></para>
                        </entry>
                        <entry>
                            <para>Measures the number of events that matched with any rule.</para>
                            <para>Valid Dimensions: None</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><code>ThrottledRules</code></para>
                        </entry>
                        <entry>
                            <para>Measures the number of triggered rules that are being
                                throttled.</para>
                            <para>Valid Dimensions: RuleName</para>
                            <para>Units: Count</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </section> 
'> 
    
    <!ENTITY cloudwatch_events_dimensions '

        <informaltable>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.5*"/>
                <colspec colname="c2" colnum="2" colwidth="3*"/>
                <thead>
                    <row>
                        <entry>
                            <para>Dimension</para>
                        </entry>
                        <entry>
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <code>RuleName</code>
                        </entry>
                        <entry>
                            <para>Filters the available metrics by rule name.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
  '>      

<!ENTITY cloudwatch_viewing_aws_iot '
 
   <section id="aws-iot-metrics">
       <title id="aws-iot-metrics.title"> &IoT; Metrics</title>
       <para> &IoT; sends the following metrics to &CW; once per received request.</para>
       <informaltable>
           <tgroup cols="2">
               <colspec colname="c1" colnum="1" colwidth="2*"/>
               <colspec colname="c2" colnum="2" colwidth="2.5*"/>
               <thead>
                   <row>
                       <entry>Metric</entry>
                       <entry>Description</entry>
                   </row>
               </thead>
               <tbody>
                   <row>
                       <entry>
                           <para>PublishIn.Success</para>
                       </entry>
                       <entry>
                           <para>A client published on an MQTT topic successfully.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>PublishOut.Success</para>
                       </entry>
                       <entry>
                           <para>Clients subscribed to an MQTT topic recieved a published message.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>Subscribe.Success</para>
                       </entry>
                       <entry>
                           <para>&IoT; message broker received a request to subscribe to an MQTT topic.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>Ping.Success</para>
                       </entry>
                       <entry>
                           <para>&IoT; received a Ping message.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 per ping request from the client. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>Connect.Success</para>
                       </entry>
                       <entry>
                           <para>A client connected to &IoT;.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics: 1 per successful MQTT connection from the client. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>GetThingShadow.Accepted</para>
                       </entry>
                       <entry>
                           <para>&IoT; received a GetThingShadow request.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>UpdateThingShadow.Accepted</para>
                       </entry>
                       <entry>
                           <para>&IoT; received a UpdateThingShadow request.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>DeleteThingShadow.Accepted</para>
                       </entry>
                       <entry>
                           <para>&IoT; received a DeleteThingShadow request.</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
                   <row>
                       <entry>
                           <para>RulesExecuted</para>
                       </entry>
                       <entry>
                           <para>&IoT; executed a rule..</para>
                           <para>Valid Dimensions: Protocol </para>
                           <para>Valid Statistics:1 for success, 0 for failure. </para>
                           <para>Unit: Count</para>
                       </entry>
                   </row>
               </tbody>
           </tgroup>
       </informaltable>
   </section>
   <section id="aws-iot-metricdimensions">
       <title id="aws-iot-metricdimensions.title">Dimensions for &IoT; Metrics</title>
       <para>Metrics use the
            namespace and provide metrics for the following
           dimension(s):</para>
       
       <informaltable>
           <tgroup cols="2">
               <colspec colname="c1" colnum="1" colwidth="2*"/>
               <colspec colname="c2" colnum="2" colwidth="2.5*"/>
               <thead>
                   <row>
                       <entry>Dimension</entry>
                       <entry>Description</entry>
                   </row>
               </thead>
               <tbody>
                   <row>
                       <entry>
                           <para>Protocol</para>
                       </entry>
                       <entry>
                           <para>The protocol with which the request was made. Valid values are MQTT or HTTP.</para>
                       </entry>
                   </row>
               </tbody>
           </tgroup>
       </informaltable>
    </section>
   '>

<!-- EFS Metrics & Dimensions -->

<!ENTITY cloudwatch_metrics_efs '
      <section id="efs-metrics">
    <sectioninfo>
      <abstract>
        <para>A listing of the &CWlong; Metrics for &EFS;.</para>
      </abstract>
    </sectioninfo>
    <title id="efs-metrics.title">&CWlong; Metrics for &EFS;</title>

    <para>This section includes a listing of all the available &CWlong; Metrics for &EFS;.</para>

    <informaltable>
      <tgroup cols="2">
        <colspec colnum="1" colname="col1" colwidth="1.02*"/>
        <colspec colnum="2" colname="col2" colwidth="2.98*"/>
        <thead>
          <row>
            <entry>Metric</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><code>BurstCreditBalance</code></entry>
            <entry>
              <para>The number of burst credits that a file system has.</para>
              <para>Burst credits allow a file system to burst to throughput levels above a file
                system’s baseline level for periods of time. For more information, see 
                <ulink url="&url-efs-ug;performance.html#bursting">Throughput scaling in Amazon EFS</ulink>.</para>
              <para>The <code>Minimum</code> statistic is the smallest burst credit balance for any
                minute during the period. The <code>Maximum</code> statistic is the largest burst
                credit balance for any minute during the period. The <code>Average</code> statistic
                is the average burst credit balance during the period. </para>
              <para>Units: Bytes</para>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code></para>
            </entry>
          </row>

          <row>
            <entry><code>ClientConnections</code></entry>
            <entry>
              <para>The number of client connections to a file system. When using a standard client,
                there is one connection per mounted &EC2; instance.</para>
              <note>
                <para>To calculate the average <code>ClientConnections</code> for periods greater
                  than one minute, divide the <code>Sum</code> statistic by the number of minutes in
                  the period.</para>
              </note>
              <para>Units: Count of client connections</para>
              <para>Valid statistics: <code>Sum</code></para>
            </entry>
          </row>

          <row>
            <entry><code>DataReadIOBytes</code></entry>
            <entry>
              <para>The number of bytes for each file system read operation.</para>
              <para>The <code>Sum</code> statistic is the total number of bytes associated with read
                operations. The <code>Minimum</code> statistic is the size of the smallest read
                operation during the period. The <code>Maximum</code> statistic is the size of the
                largest read operation during the period. The <code>Average</code> statistic is the
                average size of read operations during the period. The <code>SampleCount</code>
                statistic provides a count of read operations.</para>
              <para>Units:</para>
              <itemizedlist>
                <listitem>
                  <para>Bytes for <code>Minimum</code>, <code>Maximum</code>, <code>Average</code>,
                    and <code>Sum</code>.</para>
                </listitem>
                <listitem>
                  <para>Count for <code>SampleCount</code>.</para>
                </listitem>
              </itemizedlist>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code>, <code>Sum</code>, <code>SampleCount</code></para>
            </entry>
          </row>

          <row>
            <entry><code>DataWriteIOBytes</code></entry>
            <entry>
              <para>The number of bytes for each file write operation.</para>
              <para>The <code>Sum</code> statistic is the total number of bytes associated with
                write operations. The <code>Minimum</code> statistic is the size of the smallest
                write operation during the period. The <code>Maximum</code> statistic is the size of
                the largest write operation during the period. The <code>Average</code> statistic is
                the average size of write operations during the period. The <code>SampleCount</code>
                statistic provides a count of write operations.</para>
              <para>Units:</para>
              <itemizedlist>
                <listitem>
                  <para>Bytes are the units for the <code>Minimum</code>, <code>Maximum</code>,
                      <code>Average</code>, and <code>Sum</code> statistics.</para>
                </listitem>
                <listitem>
                  <para>Count for <code>SampleCount</code>.</para>
                </listitem>
              </itemizedlist>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code>, <code>Sum</code>, <code>SampleCount</code></para>
            </entry>
          </row>

          <row>
            <entry><code>MetadataIOBytes</code></entry>
            <entry>
              <para>The number of bytes for each metadata operation.</para>
              <para>The <code>Sum</code> statistic is the total number of bytes associated with
                metadata operations. The <code>Minimum</code> statistic is the size of the smallest
                metadata operation during the period. The <code>Maximum</code> statistic is the size
                of the largest metadata operation during the period. The <code>Average</code>
                statistic is the size of the average metadata operation during the period. The
                  <code>SampleCount</code> statistic provides a count of metadata operations.</para>
              <para>Units:</para>
              <itemizedlist>
                <listitem>
                  <para>Bytes are the units for the <code>Minimum</code>, <code>Maximum</code>,
                      <code>Average</code>, and <code>Sum</code> statistics.</para>
                </listitem>
                <listitem>
                  <para>Count for <code>SampleCount</code>.</para>
                </listitem>
              </itemizedlist>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code>, <code>Sum</code>, <code>SampleCount</code></para>
            </entry>
          </row>
          <row>
            <entry><code>PercentIOLimit</code></entry>
            <entry><para>Shows how close a file system is to reaching the I/O limit of the General
                Purpose performance mode. If this metric is at 100&percnt; more often than not, consider
                moving your application to a file system using the Max I/O performance mode.</para>
              <note>
                <para>This metric is only submitted for file systems using the General Purpose
                  performance mode.</para>
              </note>
              <para>Units:</para>
              <itemizedlist>
                <listitem>
                  <para>Percent</para>
                </listitem>
              </itemizedlist>
            </entry>
          </row>
          <row>
            <entry><code>PermittedThroughput</code></entry>
            <entry>
              <para>The maximum amount of throughput a file system is allowed, given the file system
                size and <code>BurstCreditBalance</code>. For more information, see 
                <ulink url="&url-efs-ug;performance.html">Amazon EFS Performance</ulink>.</para>
              <para>The <code>Minimum</code> statistic is the smallest throughput permitted for any
                minute during the period. The <code>Maximum</code> statistic is the highest
                throughput permitted for any minute during the period. The <code>Average</code>
                statistic is the average throughput permitted during the period. </para>
              <para>Units: Bytes per second</para>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code></para>
            </entry>
          </row>

          <row>
            <entry><code>TotalIOBytes</code></entry>
            <entry>
              <para>The number of bytes for each file system operation, including data read, data
                write, and metadata operations.</para>
              <para>The <code>Sum</code> statistic is the total number of bytes associated with all
                file system operations. The <code>Minimum</code> statistic is the size of the
                smallest operation during the period. The <code>Maximum</code> statistic is the size
                of the largest operation during the period. The <code>Average</code> statistic is
                the average size of an operation during the period. The <code>SampleCount</code>
                statistic provides a count of all operations.</para>
              <note>
                <para>To calculate the average operations per second for a period, divide the
                    <code>SampleCount</code> statistic by the number of seconds in the period. To
                  calculate the average throughput (Bytes per second) for a period, divide the
                    <code>Sum</code> statistic by the number of seconds in the period. </para>
              </note>
              <para>Units:</para>
              <itemizedlist>
                <listitem>
                  <para>Bytes for <code>Minimum</code>, <code>Maximum</code>, <code>Average</code>,
                    and <code>Sum</code> statistics.</para>
                </listitem>
                <listitem>
                  <para>Count for <code>SampleCount</code>.</para>
                </listitem>
              </itemizedlist>
              <para>Valid statistics: <code>Minimum</code>, <code>Maximum</code>,
                  <code>Average</code>, <code>Sum</code>, <code>SampleCount</code></para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
   '>

<!ENTITY cloudwatch_dimensions_efs '
    <section id="efs-dimensions">
      <sectioninfo>
        <abstract>
          <para>A listing of the &CWlong; dimensions for &EFS;.</para>
        </abstract>
      </sectioninfo>
      <title id="efs-dimensions.title">&EFS; Dimensions</title>
      <para>&EFS; metrics use the <code>EFS</code> namespace and provides metrics for a single
        dimension, <code>FileSystemId</code>. A file system&apos;s ID can be found in the &EFS;
        management console, and it takes the form of <code>fs-XXXXXXXX</code>.</para>
    </section>
   '>
