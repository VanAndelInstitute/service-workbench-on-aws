<programlisting>
function describeAlarmHistory($cloudWatchClient, $alarmName)
{
    try {
        $result = $cloudWatchClient->describeAlarmHistory([
            'AlarmName' => $alarmName
        ]);

        $message = '';

        if (isset($result['@metadata']['effectiveUri']))
        {
            $message .= 'Alarm history at the effective URI ' . 
                $result['@metadata']['effectiveUri'] . 
                ' for alarm ' . $alarmName . ":\n\n";

            if ((isset($result['AlarmHistoryItems'])) and 
                (count($result['AlarmHistoryItems']) > 0))
            {
                foreach ($result['AlarmHistoryItems'] as $alarm) {
                    $message .= $alarm['HistoryItemType'] . ' at ' . 
                        $alarm['Timestamp'] . "\n";
                }
            } else {
                $message .= 'No alarm history found for ' . 
                    $alarmName . '.';
            }
        } else {
            $message .= 'No such alarm or no history found for ' . 
                $alarmName . '.';
        }

        return $message;
    } catch (AwsException $e) {
        return 'Error: ' . $e->getAwsErrorMessage();
    }
}

function describeTheAlarmHistory()
{
    $alarmName = 'my-alarm';

    $cloudWatchClient = new CloudWatchClient([
        'profile' => 'default',
        'region' => 'us-east-1',
        'version' => '2010-08-01'
    ]);

    echo describeAlarmHistory($cloudWatchClient, $alarmName);
}

// Uncomment the following line to run this code in an AWS account.
// describeTheAlarmHistory();
</programlisting>