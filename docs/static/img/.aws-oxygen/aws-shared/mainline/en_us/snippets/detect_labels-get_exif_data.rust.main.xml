<programlisting>
fn get_exif_data(filename: &str) -> Edata {
    let height: String = "".to_owned();
    let width: String = "".to_owned();
    let created: String = "".to_owned();
    let mut edata = Edata {
        height,
        width,
        created,
    };

    let file = std::fs::File::open(&filename).unwrap();
    let mut bufreader = std::io::BufReader::new(&file);
    let exifreader = exif::Reader::new();

    match exifreader.read_from_container(&mut bufreader) {
        Ok(exif) => {
            println!("{}", &filename);

            for f in exif.fields() {
                // Get EXIF values for image width, height, and when image was created.
                match &*f.tag.to_string() {
                    "ImageWidth" => edata.height.push_str(&*f.display_value().to_string()),
                    "ImageLength" => edata.width.push_str(&*f.display_value().to_string()),
                    "DateTimeOriginal" => edata.created.push_str(&*f.display_value().to_string()),
                    _ => {}
                }
            }
        }
        Err(_) => {
            println!();
            println!("File does not contain ELIF data");
        }
    };

    edata
}
</programlisting>