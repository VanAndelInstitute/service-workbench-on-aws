    Aws::EC2::EC2Client ec2;
    Aws::EC2::Model::UnmonitorInstancesRequest unrequest;
    unrequest.AddInstanceIds(instance_id);
    unrequest.SetDryRun(true);

    auto undry_run_outcome = ec2.UnmonitorInstances(unrequest);
    assert(!undry_run_outcome.IsSuccess());
    if (undry_run_outcome.GetError().GetErrorType() !=
        Aws::EC2::EC2Errors::DRY_RUN_OPERATION)
    {
        std::cout << "Failed dry run to disable monitoring on instance " <<
            instance_id << ": " << undry_run_outcome.GetError().GetMessage() <<
            std::endl;
        return;
    }

    unrequest.SetDryRun(false);
    auto unmonitorInstancesOutcome = ec2.UnmonitorInstances(unrequest);
    if (!unmonitorInstancesOutcome.IsSuccess())
    {
        std::cout << "Failed to disable monitoring on instance " << instance_id
            << ": " << unmonitorInstancesOutcome.GetError().GetMessage() <<
            std::endl;
    }
    else
    {
        std::cout << "Successfully disable monitoring on instance " <<
            instance_id << std::endl;
    }
