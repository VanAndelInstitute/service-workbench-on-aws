<programlisting>
def usage_demo(table_name, role_name, rest_api_name):
    """
    Demonstrates how to used API Gateway to create and deploy a REST API, and how
    to use the Requests package to call it.

    :param table_name: The name of the demo DynamoDB table.
    :param role_name: The name of the demo role that grants API Gateway permission to
                      call DynamoDB.
    :param rest_api_name: The name of the demo REST API created by the demo.
    """
    gateway = ApiGatewayToService(boto3.client('apigateway'))
    role = boto3.resource('iam').Role(role_name)

    print("Creating REST API in API Gateway.")
    gateway.create_rest_api(rest_api_name)

    print("Adding resources to the REST API.")
    profiles_id = gateway.add_rest_resource(gateway.root_id, 'profiles')
    username_id = gateway.add_rest_resource(profiles_id, '{username}')

    # The DynamoDB service requires that all integration requests use POST.
    print("Adding integration methods to read and write profiles in Amazon DynamoDB.")
    gateway.add_integration_method(
        profiles_id, 'GET', 'dynamodb', 'Scan', 'POST', role.arn,
        {'TableName': table_name})
    gateway.add_integration_method(
        profiles_id, 'POST', 'dynamodb', 'PutItem', 'POST', role.arn, {
            "TableName": table_name,
            "Item": {
                "username": {"S": "$input.path('$.username')"},
                "name": {"S": "$input.path('$.name')"},
                "title": {"S": "$input.path('$.title')"}}})
    gateway.add_integration_method(
        username_id, 'GET', 'dynamodb', 'GetItem', 'POST', role.arn, {
            "TableName": table_name,
            "Key": {"username": {"S": "$method.request.path.username"}}})

    stage = 'test'
    print(f"Deploying the {stage} stage.")
    gateway.deploy_api(stage)

    profiles_url = gateway.api_url('profiles')
    print(f"Using the Requests package to post some people to the profiles REST API at "
          f"{profiles_url}.")
    requests.post(profiles_url, json={
        'username': 'will', 'name': 'William Shakespeare', 'title': 'playwright'})
    requests.post(profiles_url, json={
        'username': 'ludwig', 'name': 'Ludwig van Beethoven', 'title': 'composer'})
    requests.post(profiles_url, json={
        'username': 'jane', 'name': 'Jane Austen', 'title': 'author'})
    print("Getting the list of profiles from the REST API.")
    profiles = requests.get(profiles_url).json()
    pprint(profiles)
    print(f"Getting just the profile for username 'jane' (URL: {profiles_url}/jane).")
    jane = requests.get(f'{profiles_url}/jane').json()
    pprint(jane)
</programlisting>