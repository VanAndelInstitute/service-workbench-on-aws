 suspend fun sendSMSMessage(
        message: String,
        appId: String,
        originationNumberVal: String,
        destinationNumberVal: String
    ) {

     // The type of SMS message that you want to send. If you plan to send
     // time-sensitive content, specify TRANSACTIONAL. If you plan to send
     // marketing-related content, specify PROMOTIONAL.
     val messageTypeVal = "TRANSACTIONAL"

     // The registered keyword associated with the originating short code.
     val registeredKeyword = "myKeyword"

     // The sender ID to use when sending the message. Support for sender ID
     // varies by country or region. For more information, see
     // https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-countries.html
     val senderIdVal = "MySenderID"

     val addressMap = mutableMapOf<String, AddressConfiguration>()
     val addConfig = AddressConfiguration {
         channelType = ChannelType.Sms
      }
     addressMap[destinationNumberVal] = addConfig

     val smsMessageOb = SmsMessage {
         body = message
         messageType = MessageType.fromValue(messageTypeVal)
         originationNumber = originationNumberVal
         senderId = senderIdVal
         keyword = registeredKeyword
     }

     val directOb = DirectMessageConfiguration {
         smsMessage = smsMessageOb
     }

     val msgReq = MessageRequest{
         addresses = addressMap
         messageConfiguration = directOb
     }

     PinpointClient { region = "us-west-2" }.use { pinpoint ->
        pinpoint.sendMessages(SendMessagesRequest {
            applicationId = appId
            messageRequest = msgReq
        })
        println("The SMS message was successfully sent to $destinationNumberVal")
       }
    }
