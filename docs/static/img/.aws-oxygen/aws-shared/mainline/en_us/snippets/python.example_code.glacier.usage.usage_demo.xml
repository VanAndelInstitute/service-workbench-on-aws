<programlisting>
def usage_demo():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--upload', action='store_true',
        help="Demonstrates creating a vault, uploading an archive, and "
             "starting a retrieval job.")
    parser.add_argument(
        '--notify',
        help="(Optional) ARN of an Amazon SNS topic that allows Amazon S3 Glacier to "
             "publish to it. This is used in the upload demo to set up notifications "
             "from Amazon S3 Glacier.")
    parser.add_argument(
        '--retrieve', action='store_true',
        help="Demonstrates getting job status, retrieving data from an "
             "archive, and deleting the archive and vault.")
    args = parser.parse_args()

    print('-'*88)
    print("Welcome to the Amazon S3 Glacier demo!")
    print('-'*88)

    logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

    vault_name = 'doc-example-vault'
    glacier = GlacierWrapper(boto3.resource('glacier'))
    if args.upload:
        upload_demo(glacier, vault_name, args.notify)
    elif args.retrieve:
        retrieve_demo(glacier, vault_name)
    else:
        parser.print_help()

    print("\nThanks for watching!")
    print('-'*88)
</programlisting>