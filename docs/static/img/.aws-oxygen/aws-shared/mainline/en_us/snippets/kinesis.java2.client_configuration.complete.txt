import software.amazon.awssdk.http.async.SdkAsyncHttpClient;
import software.amazon.awssdk.http.nio.netty.NettyNioAsyncHttpClient;
import software.amazon.awssdk.services.kinesis.KinesisAsyncClient;




public class ClientConfiguration {

    public static void main(String[] args) {
        // If configured with an httpClientBuilder, the SDK will manage the lifecycle of the HTTP client
        // and it will be shutdown when the client is shut down.
        KinesisAsyncClient client = KinesisAsyncClient.builder()
                .httpClientBuilder(NettyNioAsyncHttpClient.builder()
                        .maxConcurrency(100)
                        .maxPendingConnectionAcquires(10_000))
                .build();

        // When passing in the httpClient directly, the lifecycle must be managed by the caller and the HTTP client
        // will not be shut down when the client is shut down.
        SdkAsyncHttpClient httpClient = NettyNioAsyncHttpClient.builder()
                .maxConcurrency(100)
                .maxPendingConnectionAcquires(10_000)
                .build();

        KinesisAsyncClient kinesisClient = KinesisAsyncClient.builder()
                .httpClient(httpClient)
                .build();

        httpClient.close();
    }

}

