def aurora_demo(resources):
    """
    Shows how to use AWS Secrets Manager to use an existing secret to run SQL
    statements on an Amazon Aurora cluster.

    :param resources: Resource identifiers that were output from the CloudFormation
                      stack that created prerequisite resources for the demo.
    """
    print('-'*88)
    print("Using a secret along with Amazon RDS Data Service to access an Amazon "
          "Aurora cluster.\n"
          "The secret and cluster were created by the CloudFormation stack included "
          "with this demo.")
    print('-'*88)
    secret = SecretsManagerSecret(boto3.client('secretsmanager'))
    cf_secret_arn = secret.describe(resources['SecretId'])['ARN']
    print(f"Secret ID: {resources['SecretId']}")
    print(f"Secret ARN: {cf_secret_arn}")
    secret_value = json.loads(secret.get_value()['SecretString'])
    print("Secret value:")
    pprint(secret_value)
    cluster_arn = resources['ClusterArn']
    rdsdata = boto3.client('rds-data')
    runner = sql_runner(rdsdata, cluster_arn, cf_secret_arn)
    print("Test connectivity by getting the current time from the Aurora cluster.")
    response = runner('SELECT NOW();')
    print(response['records'])

    db = 'DemoDatabase'
    table = 'People'
    print(f"Create a database '{db}' in the Aurora cluster, create a '{table}' table, "
          f"and insert some values.")
    runner(f"CREATE DATABASE {db};")
    runner(f"CREATE TABLE {table} (FirstName varchar(100), LastName varchar(100));", db)
    runner("INSERT INTO People VALUES ('Ted', 'Testerson');", db)
    runner("INSERT INTO People VALUES ('Edie', 'Exemplar');", db)
    runner("INSERT INTO People VALUES ('Chuck', 'Checkman');", db)
    print("Database created and populated.")

    print(f"Query the '{table}' table.")
    response = runner(f'SELECT * FROM {table};', db)
    print(f"Got {len(response['records'])} records:")
    pprint(response['records'])
