func listTrailEvents(sess *session.Session, trailName string, userName string) error {
    svc := cloudtrail.New(sess)
    input := &cloudtrail.LookupEventsInput{EndTime: aws.Time(time.Now())}

    resp, err := svc.LookupEvents(input)
    if err != nil {
        return err
    }

    fmt.Println("Events for the user " + userName + " in trail " + trailName + ":")

    for _, event := range resp.Events {
        if userName == *event.Username {
            fmt.Println("")
            fmt.Println("Event:")
            fmt.Println("")
            fmt.Println("Name    ", aws.StringValue(event.EventName))
            fmt.Println("ID:     ", aws.StringValue(event.EventId))
            fmt.Println("Time:   ", aws.TimeValue(event.EventTime))

            fmt.Println("Resources:")

            for _, resource := range event.Resources {
                fmt.Println("  Name:", aws.StringValue(resource.ResourceName))
                fmt.Println("  Type:", aws.StringValue(resource.ResourceType))
            }
        }
    }

    return nil
}
