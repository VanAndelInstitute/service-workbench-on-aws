<programlisting>
suspend fun analyzeDoc(sourceDoc: String?) {

    val sourceStream = FileInputStream(File(sourceDoc))
    val sourceBytes = sourceStream.readBytes()

    // Get the input Document object as bytes.
    val myDoc = Document {
        bytes = sourceBytes
    }

    val featureTypesOb = mutableListOf<FeatureType>()
    featureTypesOb.add(FeatureType.Forms)
    featureTypesOb.add(FeatureType.Tables)

    val analyzeDocumentRequest = AnalyzeDocumentRequest {
        featureTypes = featureTypesOb
        document = myDoc
    }

    TextractClient { region = "us-east-1" }.use { textractClient ->
        val response = textractClient.analyzeDocument(analyzeDocumentRequest)
        response.blocks?.forEach { block ->
               println("The block type is ${block.blockType.toString()}")
         }
    }
}
</programlisting>