<programlisting>
suspend fun encryptData(keyIdValue: String): ByteArray? {

        val text = "This is the text to encrypt by using the AWS KMS Service"
        val myBytes: ByteArray = text.toByteArray()

        val encryptRequest = EncryptRequest {
                keyId = keyIdValue
                plaintext = myBytes
        }

        KmsClient { region = "us-west-2" }.use { kmsClient ->
            val response = kmsClient.encrypt(encryptRequest)
            val algorithm: String = response.encryptionAlgorithm.toString()
            println("The encryption algorithm is $algorithm")

            // Return the encrypted data.
            return response.ciphertextBlob
        }
     }

   suspend fun decryptData(encryptedDataVal: ByteArray?, keyIdVal: String?, path: String) {

            val decryptRequest = DecryptRequest{
                ciphertextBlob = encryptedDataVal
                keyId=keyIdVal
            }
            KmsClient { region = "us-west-2" }.use { kmsClient ->
              val decryptResponse = kmsClient.decrypt(decryptRequest)
              val myVal = decryptResponse.plaintext

              // Write the decrypted data to a file.
              if (myVal != null) {
                    File(path).writeBytes(myVal)
              }
        }
  }
</programlisting>