suspend fun startWorkflow(stateMachineArnVal: String?, jsonFile: String): String? {
        val json = getJSONString(jsonFile)

        // Specify the name of the execution by using a GUID value.
        val uuid = UUID.randomUUID()
        val uuidValue = uuid.toString()
        val request = StartExecutionRequest {
            input  = json
            stateMachineArn = stateMachineArnVal
            name = uuidValue
        }

        SfnClient { region = "us-east-1" }.use { sfnClient ->
            val response = sfnClient.startExecution(request)
            return response.executionArn
        }
     }

    private fun getJSONString(path: String): String {

        try {
            val parser = JSONParser()
            val data = parser.parse(FileReader(path)) as JSONObject //path to the JSON file.
            return data.toJSONString()

        } catch (e: IOException) {
            print(e.message)
        } catch (e: ParseException) {
            print(e.message)
        }
        return ""
 }
